// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.124 from http://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl and typemap.dat
   2023-02-04 11:41:29 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2022, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:hexBinary".
class xsd__hexBinary
{ public:
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef std::string xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef std::string xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Primitive built-in type "xs:integer".
typedef std::string xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef std::string xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef std::string xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class tds__Service;

class tds__DeviceServiceCapabilities;

class tds__NetworkCapabilities;

class tds__SecurityCapabilities;

class tds__SystemCapabilities;

class tds__MiscCapabilities;

class tds__UserCredential;

class tds__StorageConfigurationData;

class tds__StorageConfiguration;

class _tds__GetServices;

class _tds__GetServicesResponse;

class _tds__GetServiceCapabilities;

class _tds__GetServiceCapabilitiesResponse;

class _tds__GetDeviceInformation;

class _tds__GetDeviceInformationResponse;

class _tds__SetSystemDateAndTime;

class _tds__SetSystemDateAndTimeResponse;

class _tds__GetSystemDateAndTime;

class _tds__GetSystemDateAndTimeResponse;

class _tds__SetSystemFactoryDefault;

class _tds__SetSystemFactoryDefaultResponse;

class _tds__UpgradeSystemFirmware;

class _tds__UpgradeSystemFirmwareResponse;

class _tds__SystemReboot;

class _tds__SystemRebootResponse;

class _tds__RestoreSystem;

class _tds__RestoreSystemResponse;

class _tds__GetSystemBackup;

class _tds__GetSystemBackupResponse;

class _tds__GetSystemSupportInformation;

class _tds__GetSystemSupportInformationResponse;

class _tds__GetSystemLog;

class _tds__GetSystemLogResponse;

class _tds__GetScopes;

class _tds__GetScopesResponse;

class _tds__SetScopes;

class _tds__SetScopesResponse;

class _tds__AddScopes;

class _tds__AddScopesResponse;

class _tds__RemoveScopes;

class _tds__RemoveScopesResponse;

class _tds__GetDiscoveryMode;

class _tds__GetDiscoveryModeResponse;

class _tds__SetDiscoveryMode;

class _tds__SetDiscoveryModeResponse;

class _tds__GetRemoteDiscoveryMode;

class _tds__GetRemoteDiscoveryModeResponse;

class _tds__SetRemoteDiscoveryMode;

class _tds__SetRemoteDiscoveryModeResponse;

class _tds__GetDPAddresses;

class _tds__GetDPAddressesResponse;

class _tds__SetDPAddresses;

class _tds__SetDPAddressesResponse;

class _tds__GetEndpointReference;

class _tds__GetEndpointReferenceResponse;

class _tds__GetRemoteUser;

class _tds__GetRemoteUserResponse;

class _tds__SetRemoteUser;

class _tds__SetRemoteUserResponse;

class _tds__GetUsers;

class _tds__GetUsersResponse;

class _tds__CreateUsers;

class _tds__CreateUsersResponse;

class _tds__DeleteUsers;

class _tds__DeleteUsersResponse;

class _tds__SetUser;

class _tds__SetUserResponse;

class _tds__GetWsdlUrl;

class _tds__GetWsdlUrlResponse;

class _tds__GetPasswordComplexityOptions;

class _tds__GetPasswordComplexityOptionsResponse;

class _tds__GetPasswordComplexityConfiguration;

class _tds__GetPasswordComplexityConfigurationResponse;

class _tds__SetPasswordComplexityConfiguration;

class _tds__SetPasswordComplexityConfigurationResponse;

class _tds__GetPasswordHistoryConfiguration;

class _tds__GetPasswordHistoryConfigurationResponse;

class _tds__SetPasswordHistoryConfiguration;

class _tds__SetPasswordHistoryConfigurationResponse;

class _tds__GetAuthFailureWarningOptions;

class _tds__GetAuthFailureWarningOptionsResponse;

class _tds__GetAuthFailureWarningConfiguration;

class _tds__GetAuthFailureWarningConfigurationResponse;

class _tds__SetAuthFailureWarningConfiguration;

class _tds__SetAuthFailureWarningConfigurationResponse;

class _tds__GetCapabilities;

class _tds__GetCapabilitiesResponse;

class _tds__GetHostname;

class _tds__GetHostnameResponse;

class _tds__SetHostname;

class _tds__SetHostnameResponse;

class _tds__SetHostnameFromDHCP;

class _tds__SetHostnameFromDHCPResponse;

class _tds__GetDNS;

class _tds__GetDNSResponse;

class _tds__SetDNS;

class _tds__SetDNSResponse;

class _tds__GetNTP;

class _tds__GetNTPResponse;

class _tds__SetNTP;

class _tds__SetNTPResponse;

class _tds__GetDynamicDNS;

class _tds__GetDynamicDNSResponse;

class _tds__SetDynamicDNS;

class _tds__SetDynamicDNSResponse;

class _tds__GetNetworkInterfaces;

class _tds__GetNetworkInterfacesResponse;

class _tds__SetNetworkInterfaces;

class _tds__SetNetworkInterfacesResponse;

class _tds__GetNetworkProtocols;

class _tds__GetNetworkProtocolsResponse;

class _tds__SetNetworkProtocols;

class _tds__SetNetworkProtocolsResponse;

class _tds__GetNetworkDefaultGateway;

class _tds__GetNetworkDefaultGatewayResponse;

class _tds__SetNetworkDefaultGateway;

class _tds__SetNetworkDefaultGatewayResponse;

class _tds__GetZeroConfiguration;

class _tds__GetZeroConfigurationResponse;

class _tds__SetZeroConfiguration;

class _tds__SetZeroConfigurationResponse;

class _tds__GetIPAddressFilter;

class _tds__GetIPAddressFilterResponse;

class _tds__SetIPAddressFilter;

class _tds__SetIPAddressFilterResponse;

class _tds__AddIPAddressFilter;

class _tds__AddIPAddressFilterResponse;

class _tds__RemoveIPAddressFilter;

class _tds__RemoveIPAddressFilterResponse;

class _tds__GetAccessPolicy;

class _tds__GetAccessPolicyResponse;

class _tds__SetAccessPolicy;

class _tds__SetAccessPolicyResponse;

class _tds__CreateCertificate;

class _tds__CreateCertificateResponse;

class _tds__GetCertificates;

class _tds__GetCertificatesResponse;

class _tds__GetCertificatesStatus;

class _tds__GetCertificatesStatusResponse;

class _tds__SetCertificatesStatus;

class _tds__SetCertificatesStatusResponse;

class _tds__DeleteCertificates;

class _tds__DeleteCertificatesResponse;

class _tds__GetPkcs10Request;

class _tds__GetPkcs10RequestResponse;

class _tds__LoadCertificates;

class _tds__LoadCertificatesResponse;

class _tds__GetClientCertificateMode;

class _tds__GetClientCertificateModeResponse;

class _tds__SetClientCertificateMode;

class _tds__SetClientCertificateModeResponse;

class _tds__GetCACertificates;

class _tds__GetCACertificatesResponse;

class _tds__LoadCertificateWithPrivateKey;

class _tds__LoadCertificateWithPrivateKeyResponse;

class _tds__GetCertificateInformation;

class _tds__GetCertificateInformationResponse;

class _tds__LoadCACertificates;

class _tds__LoadCACertificatesResponse;

class _tds__CreateDot1XConfiguration;

class _tds__CreateDot1XConfigurationResponse;

class _tds__SetDot1XConfiguration;

class _tds__SetDot1XConfigurationResponse;

class _tds__GetDot1XConfiguration;

class _tds__GetDot1XConfigurationResponse;

class _tds__GetDot1XConfigurations;

class _tds__GetDot1XConfigurationsResponse;

class _tds__DeleteDot1XConfiguration;

class _tds__DeleteDot1XConfigurationResponse;

class _tds__GetRelayOutputs;

class _tds__GetRelayOutputsResponse;

class _tds__SetRelayOutputSettings;

class _tds__SetRelayOutputSettingsResponse;

class _tds__SetRelayOutputState;

class _tds__SetRelayOutputStateResponse;

class _tds__SendAuxiliaryCommand;

class _tds__SendAuxiliaryCommandResponse;

class _tds__GetDot11Capabilities;

class _tds__GetDot11CapabilitiesResponse;

class _tds__GetDot11Status;

class _tds__GetDot11StatusResponse;

class _tds__ScanAvailableDot11Networks;

class _tds__ScanAvailableDot11NetworksResponse;

class _tds__GetSystemUris;

class _tds__GetSystemUrisResponse;

class _tds__StartFirmwareUpgrade;

class _tds__StartFirmwareUpgradeResponse;

class _tds__StartSystemRestore;

class _tds__StartSystemRestoreResponse;

class _tds__SetHashingAlgorithm;

class _tds__SetHashingAlgorithmResponse;

class _tds__GetStorageConfigurations;

class _tds__GetStorageConfigurationsResponse;

class _tds__CreateStorageConfiguration;

class _tds__CreateStorageConfigurationResponse;

class _tds__GetStorageConfiguration;

class _tds__GetStorageConfigurationResponse;

class _tds__SetStorageConfiguration;

class _tds__SetStorageConfigurationResponse;

class _tds__DeleteStorageConfiguration;

class _tds__DeleteStorageConfigurationResponse;

class _tds__GetGeoLocation;

class _tds__GetGeoLocationResponse;

class _tds__SetGeoLocation;

class _tds__SetGeoLocationResponse;

class _tds__DeleteGeoLocation;

class _tds__DeleteGeoLocationResponse;

class tt__DeviceEntity;

class tt__Scope;

class tt__NetworkInterface;

class tt__NetworkInterfaceExtension;

class tt__Dot3Configuration;

class tt__NetworkInterfaceExtension2;

class tt__NetworkInterfaceLink;

class tt__NetworkInterfaceConnectionSetting;

class tt__NetworkInterfaceInfo;

class tt__IPv6NetworkInterface;

class tt__IPv4NetworkInterface;

class tt__IPv4Configuration;

class tt__IPv6Configuration;

class tt__IPv6ConfigurationExtension;

class tt__NetworkProtocol;

class tt__NetworkProtocolExtension;

class tt__NetworkHost;

class tt__NetworkHostExtension;

class tt__IPAddress;

class tt__PrefixedIPv4Address;

class tt__PrefixedIPv6Address;

class tt__HostnameInformation;

class tt__HostnameInformationExtension;

class tt__DNSInformation;

class tt__DNSInformationExtension;

class tt__NTPInformation;

class tt__NTPInformationExtension;

class tt__DynamicDNSInformation;

class tt__DynamicDNSInformationExtension;

class tt__NetworkInterfaceSetConfiguration;

class tt__NetworkInterfaceSetConfigurationExtension;

class tt__IPv6NetworkInterfaceSetConfiguration;

class tt__IPv4NetworkInterfaceSetConfiguration;

class tt__NetworkGateway;

class tt__NetworkZeroConfiguration;

class tt__NetworkZeroConfigurationExtension;

class tt__NetworkZeroConfigurationExtension2;

class tt__IPAddressFilter;

class tt__IPAddressFilterExtension;

class tt__Dot11Configuration;

class tt__Dot11SecurityConfiguration;

class tt__Dot11SecurityConfigurationExtension;

class tt__Dot11PSKSet;

class tt__Dot11PSKSetExtension;

class tt__NetworkInterfaceSetConfigurationExtension2;

class tt__Dot11Capabilities;

class tt__Dot11Status;

class tt__Dot11AvailableNetworks;

class tt__Dot11AvailableNetworksExtension;

class tt__Capabilities;

class tt__CapabilitiesExtension;

class tt__CapabilitiesExtension2;

class tt__AnalyticsCapabilities;

class tt__DeviceCapabilities;

class tt__DeviceCapabilitiesExtension;

class tt__EventCapabilities;

class tt__IOCapabilities;

class tt__IOCapabilitiesExtension;

class tt__IOCapabilitiesExtension2;

class tt__MediaCapabilities;

class tt__MediaCapabilitiesExtension;

class tt__RealTimeStreamingCapabilities;

class tt__RealTimeStreamingCapabilitiesExtension;

class tt__ProfileCapabilities;

class tt__NetworkCapabilities;

class tt__NetworkCapabilitiesExtension;

class tt__NetworkCapabilitiesExtension2;

class tt__SecurityCapabilities;

class tt__SecurityCapabilitiesExtension;

class tt__SecurityCapabilitiesExtension2;

class tt__SystemCapabilities;

class tt__SystemCapabilitiesExtension;

class tt__SystemCapabilitiesExtension2;

class tt__OnvifVersion;

class tt__ImagingCapabilities;

class tt__PTZCapabilities;

class tt__DeviceIOCapabilities;

class tt__DisplayCapabilities;

class tt__RecordingCapabilities;

class tt__SearchCapabilities;

class tt__ReplayCapabilities;

class tt__ReceiverCapabilities;

class tt__AnalyticsDeviceCapabilities;

class tt__AnalyticsDeviceExtension;

class tt__SystemLog;

class tt__SupportInformation;

class tt__BinaryData;

class tt__AttachmentData;

class tt__BackupFile;

class tt__SystemLogUriList;

class tt__SystemLogUri;

class tt__SystemDateTime;

class tt__SystemDateTimeExtension;

class tt__DateTime;

class tt__Date;

class tt__Time;

class tt__TimeZone;

class tt__RemoteUser;

class tt__User;

class tt__UserExtension;

class tt__Certificate;

class tt__CertificateStatus;

class tt__CertificateWithPrivateKey;

class tt__CertificateInformation;

class tt__CertificateUsage;

class tt__CertificateInformationExtension;

class tt__Dot1XConfiguration;

class tt__Dot1XConfigurationExtension;

class tt__EAPMethodConfiguration;

class tt__EapMethodExtension;

class tt__TLSConfiguration;

class tt__RelayOutputSettings;

class tt__RelayOutput;

class tt__DateTimeRange;

class tt__IntRange;

class tt__GeoLocation;

class tt__GeoOrientation;

class tt__LocalLocation;

class tt__LocalOrientation;

class tt__LocationEntity;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef std::string tt__IntList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":FloatList is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string tt__StringList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReferenceTokenList is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":AutoGeoModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":StorageType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__Name : 64;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RotateMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationOption is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ViewModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Mpeg4Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":H264Profile is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncoding is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MetadataCompressionType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":StreamType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TransportProtocol is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority /* from 0 (inclusive) @warning: could not determine if this type is numeric */ /* to 31 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
///
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__DNSName;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Domain is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 1 to 32.
typedef xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 32.
typedef xsd__hexBinary tt__Dot11PSK 32 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef std::string tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__SystemLogType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DigitalIdleState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":EFlipMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReverseMode is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef std::string tt__AuxiliaryData : 128;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveAndTrackMethod is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AutoFocusMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AFModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WideDynamicMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":BacklightCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposurePriority is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ExposureMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Enabled is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":WhiteBalanceMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageStabilizationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ToneCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DefoggingMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageSendingType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PropertyOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Direction is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Description is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":XPathExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SearchState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ModeOfOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioClassType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":OSDType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__ReferenceToken : 64;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Entity is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":JobToken is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// @note class tds__Service operations:
/// - tds__Service* soap_new_tds__Service(soap*) allocate and default initialize
/// - tds__Service* soap_new_tds__Service(soap*, int num) allocate and default initialize an array
/// - tds__Service* soap_new_req_tds__Service(soap*, ...) allocate, set required members
/// - tds__Service* soap_new_set_tds__Service(soap*, ...) allocate, set all public members
/// - tds__Service::soap_default(soap*) default initialize members
/// - int soap_read_tds__Service(soap*, tds__Service*) deserialize from a stream
/// - int soap_write_tds__Service(soap*, tds__Service*) serialize to a stream
/// - tds__Service* tds__Service::soap_dup(soap*) returns deep copy of tds__Service, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__Service::soap_del() deep deletes tds__Service data members, use only after tds__Service::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__Service::soap_type() returns SOAP_TYPE_tds__Service or derived type identifier
class tds__Service
{ public:
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @note class _tds__Service_Capabilities operations:
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(soap*) allocate and default initialize
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(soap*, int num) allocate and default initialize an array
/// - _tds__Service_Capabilities* soap_new_req__tds__Service_Capabilities(soap*, ...) allocate, set required members
/// - _tds__Service_Capabilities* soap_new_set__tds__Service_Capabilities(soap*, ...) allocate, set all public members
/// - _tds__Service_Capabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) deserialize from a stream
/// - int soap_write__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) serialize to a stream
/// - _tds__Service_Capabilities* _tds__Service_Capabilities::soap_dup(soap*) returns deep copy of _tds__Service_Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__Service_Capabilities::soap_del() deep deletes _tds__Service_Capabilities data members, use only after _tds__Service_Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__Service_Capabilities::soap_type() returns SOAP_TYPE__tds__Service_Capabilities or derived type identifier
    class _tds__Service_Capabilities
    { public:
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    tt__OnvifVersion*                    Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// @note class tds__DeviceServiceCapabilities operations:
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(soap*) allocate and default initialize
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__DeviceServiceCapabilities* soap_new_req_tds__DeviceServiceCapabilities(soap*, ...) allocate, set required members
/// - tds__DeviceServiceCapabilities* soap_new_set_tds__DeviceServiceCapabilities(soap*, ...) allocate, set all public members
/// - tds__DeviceServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) deserialize from a stream
/// - int soap_write_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) serialize to a stream
/// - tds__DeviceServiceCapabilities* tds__DeviceServiceCapabilities::soap_dup(soap*) returns deep copy of tds__DeviceServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__DeviceServiceCapabilities::soap_del() deep deletes tds__DeviceServiceCapabilities data members, use only after tds__DeviceServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__DeviceServiceCapabilities::soap_type() returns SOAP_TYPE_tds__DeviceServiceCapabilities or derived type identifier
class tds__DeviceServiceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    tds__NetworkCapabilities*            Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    tds__SecurityCapabilities*           Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    tds__SystemCapabilities*             System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
///
/// Element "Misc" of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    tds__MiscCapabilities*               Misc                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
/// @note class tds__NetworkCapabilities operations:
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(soap*) allocate and default initialize
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__NetworkCapabilities* soap_new_req_tds__NetworkCapabilities(soap*, ...) allocate, set required members
/// - tds__NetworkCapabilities* soap_new_set_tds__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - tds__NetworkCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) serialize to a stream
/// - tds__NetworkCapabilities* tds__NetworkCapabilities::soap_dup(soap*) returns deep copy of tds__NetworkCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__NetworkCapabilities::soap_del() deep deletes tds__NetworkCapabilities data members, use only after tds__NetworkCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__NetworkCapabilities::soap_type() returns SOAP_TYPE_tds__NetworkCapabilities or derived type identifier
class tds__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPFilter" of type xs:boolean.
  @ bool*                                IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ZeroConfiguration" of type xs:boolean.
  @ bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPVersion6" of type xs:boolean.
  @ bool*                                IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynDNS" of type xs:boolean.
  @ bool*                                DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot11Configuration" of type xs:boolean.
  @ bool*                                Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1XConfigurations" of type xs:int.
  @ int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HostnameFromDHCP" of type xs:boolean.
  @ bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NTP" of type xs:int.
  @ int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DHCPv6" of type xs:boolean.
  @ bool*                                DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
/// @note class tds__SecurityCapabilities operations:
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(soap*) allocate and default initialize
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__SecurityCapabilities* soap_new_req_tds__SecurityCapabilities(soap*, ...) allocate, set required members
/// - tds__SecurityCapabilities* soap_new_set_tds__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - tds__SecurityCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) serialize to a stream
/// - tds__SecurityCapabilities* tds__SecurityCapabilities::soap_dup(soap*) returns deep copy of tds__SecurityCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__SecurityCapabilities::soap_del() deep deletes tds__SecurityCapabilities data members, use only after tds__SecurityCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__SecurityCapabilities::soap_type() returns SOAP_TYPE_tds__SecurityCapabilities or derived type identifier
class tds__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.0" of type xs:boolean.
  @ bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.1" of type xs:boolean.
  @ bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.2" of type xs:boolean.
  @ bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OnboardKeyGeneration" of type xs:boolean.
  @ bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AccessPolicyConfig" of type xs:boolean.
  @ bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DefaultAccessPolicy" of type xs:boolean.
  @ bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1X" of type xs:boolean.
  @ bool*                                Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteUserHandling" of type xs:boolean.
  @ bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "X.509Token" of type xs:boolean.
  @ bool*                                X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SAMLToken" of type xs:boolean.
  @ bool*                                SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "KerberosToken" of type xs:boolean.
  @ bool*                                KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UsernameToken" of type xs:boolean.
  @ bool*                                UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpDigest" of type xs:boolean.
  @ bool*                                HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RELToken" of type xs:boolean.
  @ bool*                                RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedEAPMethods" of type "http://www.onvif.org/ver10/schema":IntList.
  @ tt__IntList*                         SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUsers" of type xs:int.
  @ int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUserNameLength" of type xs:int.
  @ int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordLength" of type xs:int.
  @ int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates which security policies are supported. Options are: ModifyPassword, PasswordComplexity, AuthFailureWarnings
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SecurityPolicies" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList*                      SecurityPolicies               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of passwords that the device can remember for each user
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordHistory" of type xs:int.
  @ int*                                 MaxPasswordHistory             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Supported hashing algorithms as part of HTTP and RTSP Digest authentication.Example: MD5,SHA-256
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HashingAlgorithms" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList*                      HashingAlgorithms              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
/// @note class tds__SystemCapabilities operations:
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(soap*) allocate and default initialize
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__SystemCapabilities* soap_new_req_tds__SystemCapabilities(soap*, ...) allocate, set required members
/// - tds__SystemCapabilities* soap_new_set_tds__SystemCapabilities(soap*, ...) allocate, set all public members
/// - tds__SystemCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) serialize to a stream
/// - tds__SystemCapabilities* tds__SystemCapabilities::soap_dup(soap*) returns deep copy of tds__SystemCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__SystemCapabilities::soap_del() deep deletes tds__SystemCapabilities data members, use only after tds__SystemCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__SystemCapabilities::soap_type() returns SOAP_TYPE_tds__SystemCapabilities or derived type identifier
class tds__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryResolve" of type xs:boolean.
  @ bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryBye" of type xs:boolean.
  @ bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteDiscovery" of type xs:boolean.
  @ bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemBackup" of type xs:boolean.
  @ bool*                                SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemLogging" of type xs:boolean.
  @ bool*                                SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FirmwareUpgrade" of type xs:boolean.
  @ bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpFirmwareUpgrade" of type xs:boolean.
  @ bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemBackup" of type xs:boolean.
  @ bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemLogging" of type xs:boolean.
  @ bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSupportInformation" of type xs:boolean.
  @ bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageConfiguration" of type xs:boolean.
  @ bool*                                StorageConfiguration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates maximum number of storage configurations supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxStorageConfigurations" of type xs:int.
  @ int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If present signals support for geo location. The value signals the supported number of entries.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocationEntries" of type xs:int.
  @ int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  AutoGeo                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the supported StorageTypes, see tds:StorageType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageTypesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  StorageTypesSupported          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for network discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryNotSupported" of type xs:boolean.
  @ bool*                                DiscoveryNotSupported          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for network configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NetworkConfigNotSupported" of type xs:boolean.
  @ bool*                                NetworkConfigNotSupported      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates no support for user configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UserConfigNotSupported" of type xs:boolean.
  @ bool*                                UserConfigNotSupported         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported Addons by the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Addons" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  Addons                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
/// @note class tds__MiscCapabilities operations:
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(soap*) allocate and default initialize
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__MiscCapabilities* soap_new_req_tds__MiscCapabilities(soap*, ...) allocate, set required members
/// - tds__MiscCapabilities* soap_new_set_tds__MiscCapabilities(soap*, ...) allocate, set all public members
/// - tds__MiscCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) deserialize from a stream
/// - int soap_write_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) serialize to a stream
/// - tds__MiscCapabilities* tds__MiscCapabilities::soap_dup(soap*) returns deep copy of tds__MiscCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__MiscCapabilities::soap_del() deep deletes tds__MiscCapabilities data members, use only after tds__MiscCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__MiscCapabilities::soap_type() returns SOAP_TYPE_tds__MiscCapabilities or derived type identifier
class tds__MiscCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AuxiliaryCommands" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
/// @note class tds__UserCredential operations:
/// - tds__UserCredential* soap_new_tds__UserCredential(soap*) allocate and default initialize
/// - tds__UserCredential* soap_new_tds__UserCredential(soap*, int num) allocate and default initialize an array
/// - tds__UserCredential* soap_new_req_tds__UserCredential(soap*, ...) allocate, set required members
/// - tds__UserCredential* soap_new_set_tds__UserCredential(soap*, ...) allocate, set all public members
/// - tds__UserCredential::soap_default(soap*) default initialize members
/// - int soap_read_tds__UserCredential(soap*, tds__UserCredential*) deserialize from a stream
/// - int soap_write_tds__UserCredential(soap*, tds__UserCredential*) serialize to a stream
/// - tds__UserCredential* tds__UserCredential::soap_dup(soap*) returns deep copy of tds__UserCredential, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__UserCredential::soap_del() deep deletes tds__UserCredential data members, use only after tds__UserCredential::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__UserCredential::soap_type() returns SOAP_TYPE_tds__UserCredential or derived type identifier
class tds__UserCredential
{ public:
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    std::string                          UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// @note class _tds__UserCredential_Extension operations:
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(soap*) allocate and default initialize
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__UserCredential_Extension* soap_new_req__tds__UserCredential_Extension(soap*, ...) allocate, set required members
/// - _tds__UserCredential_Extension* soap_new_set__tds__UserCredential_Extension(soap*, ...) allocate, set all public members
/// - _tds__UserCredential_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__UserCredential_Extension(soap*, _tds__UserCredential_Extension*) deserialize from a stream
/// - int soap_write__tds__UserCredential_Extension(soap*, _tds__UserCredential_Extension*) serialize to a stream
/// - _tds__UserCredential_Extension* _tds__UserCredential_Extension::soap_dup(soap*) returns deep copy of _tds__UserCredential_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UserCredential_Extension::soap_del() deep deletes _tds__UserCredential_Extension data members, use only after _tds__UserCredential_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UserCredential_Extension::soap_type() returns SOAP_TYPE__tds__UserCredential_Extension or derived type identifier
    class _tds__UserCredential_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
/// @note class tds__StorageConfigurationData operations:
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(soap*) allocate and default initialize
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(soap*, int num) allocate and default initialize an array
/// - tds__StorageConfigurationData* soap_new_req_tds__StorageConfigurationData(soap*, ...) allocate, set required members
/// - tds__StorageConfigurationData* soap_new_set_tds__StorageConfigurationData(soap*, ...) allocate, set all public members
/// - tds__StorageConfigurationData::soap_default(soap*) default initialize members
/// - int soap_read_tds__StorageConfigurationData(soap*, tds__StorageConfigurationData*) deserialize from a stream
/// - int soap_write_tds__StorageConfigurationData(soap*, tds__StorageConfigurationData*) serialize to a stream
/// - tds__StorageConfigurationData* tds__StorageConfigurationData::soap_dup(soap*) returns deep copy of tds__StorageConfigurationData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__StorageConfigurationData::soap_del() deep deletes tds__StorageConfigurationData data members, use only after tds__StorageConfigurationData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__StorageConfigurationData::soap_type() returns SOAP_TYPE_tds__StorageConfigurationData or derived type identifier
class tds__StorageConfigurationData
{ public:
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalPath" of type xs:anyURI.
    xsd__anyURI*                         LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageUri" of type xs:anyURI.
    xsd__anyURI*                         StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
///
/// Element "User" of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    tds__UserCredential*                 User                           0;	///< Optional element.
/// @note class _tds__StorageConfigurationData_Extension operations:
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(soap*) allocate and default initialize
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__StorageConfigurationData_Extension* soap_new_req__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set required members
/// - _tds__StorageConfigurationData_Extension* soap_new_set__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set all public members
/// - _tds__StorageConfigurationData_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__StorageConfigurationData_Extension(soap*, _tds__StorageConfigurationData_Extension*) deserialize from a stream
/// - int soap_write__tds__StorageConfigurationData_Extension(soap*, _tds__StorageConfigurationData_Extension*) serialize to a stream
/// - _tds__StorageConfigurationData_Extension* _tds__StorageConfigurationData_Extension::soap_dup(soap*) returns deep copy of _tds__StorageConfigurationData_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StorageConfigurationData_Extension::soap_del() deep deletes _tds__StorageConfigurationData_Extension data members, use only after _tds__StorageConfigurationData_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StorageConfigurationData_Extension::soap_type() returns SOAP_TYPE__tds__StorageConfigurationData_Extension or derived type identifier
    class _tds__StorageConfigurationData_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ std::string                          type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// @note class _tds__GetServices operations:
/// - _tds__GetServices* soap_new__tds__GetServices(soap*) allocate and default initialize
/// - _tds__GetServices* soap_new__tds__GetServices(soap*, int num) allocate and default initialize an array
/// - _tds__GetServices* soap_new_req__tds__GetServices(soap*, ...) allocate, set required members
/// - _tds__GetServices* soap_new_set__tds__GetServices(soap*, ...) allocate, set all public members
/// - _tds__GetServices::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServices(soap*, _tds__GetServices*) deserialize from a stream
/// - int soap_write__tds__GetServices(soap*, _tds__GetServices*) serialize to a stream
/// - _tds__GetServices* _tds__GetServices::soap_dup(soap*) returns deep copy of _tds__GetServices, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServices::soap_del() deep deletes _tds__GetServices data members, use only after _tds__GetServices::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServices::soap_type() returns SOAP_TYPE__tds__GetServices or derived type identifier
class _tds__GetServices
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// @note class _tds__GetServicesResponse operations:
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(soap*) allocate and default initialize
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetServicesResponse* soap_new_req__tds__GetServicesResponse(soap*, ...) allocate, set required members
/// - _tds__GetServicesResponse* soap_new_set__tds__GetServicesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetServicesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) serialize to a stream
/// - _tds__GetServicesResponse* _tds__GetServicesResponse::soap_dup(soap*) returns deep copy of _tds__GetServicesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServicesResponse::soap_del() deep deletes _tds__GetServicesResponse data members, use only after _tds__GetServicesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServicesResponse::soap_type() returns SOAP_TYPE__tds__GetServicesResponse or derived type identifier
class _tds__GetServicesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tds__Service* of length 1..unbounded.
    std::vector<tds__Service*          > Service                        1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tds__GetServiceCapabilities operations:
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetServiceCapabilities* soap_new_req__tds__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tds__GetServiceCapabilities* soap_new_set__tds__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tds__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) serialize to a stream
/// - _tds__GetServiceCapabilities* _tds__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tds__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServiceCapabilities::soap_del() deep deletes _tds__GetServiceCapabilities data members, use only after _tds__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tds__GetServiceCapabilities or derived type identifier
class _tds__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tds__GetServiceCapabilitiesResponse operations:
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetServiceCapabilitiesResponse* soap_new_req__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetServiceCapabilitiesResponse* soap_new_set__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tds__GetServiceCapabilitiesResponse* _tds__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServiceCapabilitiesResponse::soap_del() deep deletes _tds__GetServiceCapabilitiesResponse data members, use only after _tds__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetServiceCapabilitiesResponse or derived type identifier
class _tds__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    tds__DeviceServiceCapabilities*      Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// @note class _tds__GetDeviceInformation operations:
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(soap*) allocate and default initialize
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetDeviceInformation* soap_new_req__tds__GetDeviceInformation(soap*, ...) allocate, set required members
/// - _tds__GetDeviceInformation* soap_new_set__tds__GetDeviceInformation(soap*, ...) allocate, set all public members
/// - _tds__GetDeviceInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) serialize to a stream
/// - _tds__GetDeviceInformation* _tds__GetDeviceInformation::soap_dup(soap*) returns deep copy of _tds__GetDeviceInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDeviceInformation::soap_del() deep deletes _tds__GetDeviceInformation data members, use only after _tds__GetDeviceInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDeviceInformation::soap_type() returns SOAP_TYPE__tds__GetDeviceInformation or derived type identifier
class _tds__GetDeviceInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// @note class _tds__GetDeviceInformationResponse operations:
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(soap*) allocate and default initialize
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDeviceInformationResponse* soap_new_req__tds__GetDeviceInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetDeviceInformationResponse* soap_new_set__tds__GetDeviceInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDeviceInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) serialize to a stream
/// - _tds__GetDeviceInformationResponse* _tds__GetDeviceInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetDeviceInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDeviceInformationResponse::soap_del() deep deletes _tds__GetDeviceInformationResponse data members, use only after _tds__GetDeviceInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDeviceInformationResponse::soap_type() returns SOAP_TYPE__tds__GetDeviceInformationResponse or derived type identifier
class _tds__GetDeviceInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Manufacturer" of type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
///
/// Element "Model" of type xs:string.
    std::string                          Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareVersion" of type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialNumber" of type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "HardwareId" of type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
/// @note class _tds__SetSystemDateAndTime operations:
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(soap*) allocate and default initialize
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemDateAndTime* soap_new_req__tds__SetSystemDateAndTime(soap*, ...) allocate, set required members
/// - _tds__SetSystemDateAndTime* soap_new_set__tds__SetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - _tds__SetSystemDateAndTime::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) serialize to a stream
/// - _tds__SetSystemDateAndTime* _tds__SetSystemDateAndTime::soap_dup(soap*) returns deep copy of _tds__SetSystemDateAndTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemDateAndTime::soap_del() deep deletes _tds__SetSystemDateAndTime data members, use only after _tds__SetSystemDateAndTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemDateAndTime::soap_type() returns SOAP_TYPE__tds__SetSystemDateAndTime or derived type identifier
class _tds__SetSystemDateAndTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__SetSystemDateAndTimeResponse operations:
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemDateAndTimeResponse* soap_new_req__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemDateAndTimeResponse* soap_new_set__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__SetSystemDateAndTimeResponse* _tds__SetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemDateAndTimeResponse::soap_del() deep deletes _tds__SetSystemDateAndTimeResponse data members, use only after _tds__SetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__SetSystemDateAndTimeResponse or derived type identifier
class _tds__SetSystemDateAndTimeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// @note class _tds__GetSystemDateAndTime operations:
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTime* soap_new_req__tds__GetSystemDateAndTime(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTime* soap_new_set__tds__GetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTime::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) serialize to a stream
/// - _tds__GetSystemDateAndTime* _tds__GetSystemDateAndTime::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTime::soap_del() deep deletes _tds__GetSystemDateAndTime data members, use only after _tds__GetSystemDateAndTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTime::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTime or derived type identifier
class _tds__GetSystemDateAndTime
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__GetSystemDateAndTimeResponse operations:
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTimeResponse* soap_new_req__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTimeResponse* soap_new_set__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__GetSystemDateAndTimeResponse* _tds__GetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTimeResponse::soap_del() deep deletes _tds__GetSystemDateAndTimeResponse data members, use only after _tds__GetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTimeResponse or derived type identifier
class _tds__GetSystemDateAndTimeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// @note class _tds__SetSystemFactoryDefault operations:
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefault* soap_new_req__tds__SetSystemFactoryDefault(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefault* soap_new_set__tds__SetSystemFactoryDefault(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefault::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) serialize to a stream
/// - _tds__SetSystemFactoryDefault* _tds__SetSystemFactoryDefault::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefault, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefault::soap_del() deep deletes _tds__SetSystemFactoryDefault data members, use only after _tds__SetSystemFactoryDefault::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefault::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefault or derived type identifier
class _tds__SetSystemFactoryDefault
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// @note class _tds__SetSystemFactoryDefaultResponse operations:
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_req__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_set__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefaultResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) serialize to a stream
/// - _tds__SetSystemFactoryDefaultResponse* _tds__SetSystemFactoryDefaultResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefaultResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefaultResponse::soap_del() deep deletes _tds__SetSystemFactoryDefaultResponse data members, use only after _tds__SetSystemFactoryDefaultResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefaultResponse::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefaultResponse or derived type identifier
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// @note class _tds__UpgradeSystemFirmware operations:
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmware* soap_new_req__tds__UpgradeSystemFirmware(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmware* soap_new_set__tds__UpgradeSystemFirmware(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmware::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) serialize to a stream
/// - _tds__UpgradeSystemFirmware* _tds__UpgradeSystemFirmware::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmware, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmware::soap_del() deep deletes _tds__UpgradeSystemFirmware data members, use only after _tds__UpgradeSystemFirmware::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmware::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmware or derived type identifier
class _tds__UpgradeSystemFirmware
{ public:
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// @note class _tds__UpgradeSystemFirmwareResponse operations:
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_req__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_set__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmwareResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) serialize to a stream
/// - _tds__UpgradeSystemFirmwareResponse* _tds__UpgradeSystemFirmwareResponse::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmwareResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmwareResponse::soap_del() deep deletes _tds__UpgradeSystemFirmwareResponse data members, use only after _tds__UpgradeSystemFirmwareResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmwareResponse::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmwareResponse or derived type identifier
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element "Message" of type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note class _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*) allocate and default initialize
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*, int num) allocate and default initialize an array
/// - _tds__SystemReboot* soap_new_req__tds__SystemReboot(soap*, ...) allocate, set required members
/// - _tds__SystemReboot* soap_new_set__tds__SystemReboot(soap*, ...) allocate, set all public members
/// - _tds__SystemReboot::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemReboot(soap*, _tds__SystemReboot*) deserialize from a stream
/// - int soap_write__tds__SystemReboot(soap*, _tds__SystemReboot*) serialize to a stream
/// - _tds__SystemReboot* _tds__SystemReboot::soap_dup(soap*) returns deep copy of _tds__SystemReboot, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemReboot::soap_del() deep deletes _tds__SystemReboot data members, use only after _tds__SystemReboot::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemReboot::soap_type() returns SOAP_TYPE__tds__SystemReboot or derived type identifier
class _tds__SystemReboot
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note class _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*) allocate and default initialize
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SystemRebootResponse* soap_new_req__tds__SystemRebootResponse(soap*, ...) allocate, set required members
/// - _tds__SystemRebootResponse* soap_new_set__tds__SystemRebootResponse(soap*, ...) allocate, set all public members
/// - _tds__SystemRebootResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) deserialize from a stream
/// - int soap_write__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) serialize to a stream
/// - _tds__SystemRebootResponse* _tds__SystemRebootResponse::soap_dup(soap*) returns deep copy of _tds__SystemRebootResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemRebootResponse::soap_del() deep deletes _tds__SystemRebootResponse data members, use only after _tds__SystemRebootResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemRebootResponse::soap_type() returns SOAP_TYPE__tds__SystemRebootResponse or derived type identifier
class _tds__SystemRebootResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    std::string                          Message                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// @note class _tds__RestoreSystem operations:
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*) allocate and default initialize
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystem* soap_new_req__tds__RestoreSystem(soap*, ...) allocate, set required members
/// - _tds__RestoreSystem* soap_new_set__tds__RestoreSystem(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystem::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystem(soap*, _tds__RestoreSystem*) deserialize from a stream
/// - int soap_write__tds__RestoreSystem(soap*, _tds__RestoreSystem*) serialize to a stream
/// - _tds__RestoreSystem* _tds__RestoreSystem::soap_dup(soap*) returns deep copy of _tds__RestoreSystem, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystem::soap_del() deep deletes _tds__RestoreSystem data members, use only after _tds__RestoreSystem::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystem::soap_type() returns SOAP_TYPE__tds__RestoreSystem or derived type identifier
class _tds__RestoreSystem
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// @note class _tds__RestoreSystemResponse operations:
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*) allocate and default initialize
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystemResponse* soap_new_req__tds__RestoreSystemResponse(soap*, ...) allocate, set required members
/// - _tds__RestoreSystemResponse* soap_new_set__tds__RestoreSystemResponse(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystemResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) deserialize from a stream
/// - int soap_write__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) serialize to a stream
/// - _tds__RestoreSystemResponse* _tds__RestoreSystemResponse::soap_dup(soap*) returns deep copy of _tds__RestoreSystemResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystemResponse::soap_del() deep deletes _tds__RestoreSystemResponse data members, use only after _tds__RestoreSystemResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystemResponse::soap_type() returns SOAP_TYPE__tds__RestoreSystemResponse or derived type identifier
class _tds__RestoreSystemResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// @note class _tds__GetSystemBackup operations:
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*) allocate and default initialize
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackup* soap_new_req__tds__GetSystemBackup(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackup* soap_new_set__tds__GetSystemBackup(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackup::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) serialize to a stream
/// - _tds__GetSystemBackup* _tds__GetSystemBackup::soap_dup(soap*) returns deep copy of _tds__GetSystemBackup, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackup::soap_del() deep deletes _tds__GetSystemBackup data members, use only after _tds__GetSystemBackup::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackup::soap_type() returns SOAP_TYPE__tds__GetSystemBackup or derived type identifier
class _tds__GetSystemBackup
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// @note class _tds__GetSystemBackupResponse operations:
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*) allocate and default initialize
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackupResponse* soap_new_req__tds__GetSystemBackupResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackupResponse* soap_new_set__tds__GetSystemBackupResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackupResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) serialize to a stream
/// - _tds__GetSystemBackupResponse* _tds__GetSystemBackupResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemBackupResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackupResponse::soap_del() deep deletes _tds__GetSystemBackupResponse data members, use only after _tds__GetSystemBackupResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackupResponse::soap_type() returns SOAP_TYPE__tds__GetSystemBackupResponse or derived type identifier
class _tds__GetSystemBackupResponse
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// @note class _tds__GetSystemSupportInformation operations:
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformation* soap_new_req__tds__GetSystemSupportInformation(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformation* soap_new_set__tds__GetSystemSupportInformation(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) serialize to a stream
/// - _tds__GetSystemSupportInformation* _tds__GetSystemSupportInformation::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformation::soap_del() deep deletes _tds__GetSystemSupportInformation data members, use only after _tds__GetSystemSupportInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformation::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformation or derived type identifier
class _tds__GetSystemSupportInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// @note class _tds__GetSystemSupportInformationResponse operations:
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformationResponse* soap_new_req__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformationResponse* soap_new_set__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) serialize to a stream
/// - _tds__GetSystemSupportInformationResponse* _tds__GetSystemSupportInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformationResponse::soap_del() deep deletes _tds__GetSystemSupportInformationResponse data members, use only after _tds__GetSystemSupportInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformationResponse::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformationResponse or derived type identifier
class _tds__GetSystemSupportInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// @note class _tds__GetSystemLog operations:
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*) allocate and default initialize
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLog* soap_new_req__tds__GetSystemLog(soap*, ...) allocate, set required members
/// - _tds__GetSystemLog* soap_new_set__tds__GetSystemLog(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLog::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLog(soap*, _tds__GetSystemLog*) deserialize from a stream
/// - int soap_write__tds__GetSystemLog(soap*, _tds__GetSystemLog*) serialize to a stream
/// - _tds__GetSystemLog* _tds__GetSystemLog::soap_dup(soap*) returns deep copy of _tds__GetSystemLog, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLog::soap_del() deep deletes _tds__GetSystemLog data members, use only after _tds__GetSystemLog::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLog::soap_type() returns SOAP_TYPE__tds__GetSystemLog or derived type identifier
class _tds__GetSystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// @note class _tds__GetSystemLogResponse operations:
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*) allocate and default initialize
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLogResponse* soap_new_req__tds__GetSystemLogResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemLogResponse* soap_new_set__tds__GetSystemLogResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLogResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) serialize to a stream
/// - _tds__GetSystemLogResponse* _tds__GetSystemLogResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemLogResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLogResponse::soap_del() deep deletes _tds__GetSystemLogResponse data members, use only after _tds__GetSystemLogResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLogResponse::soap_type() returns SOAP_TYPE__tds__GetSystemLogResponse or derived type identifier
class _tds__GetSystemLogResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// @note class _tds__GetScopes operations:
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*) allocate and default initialize
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopes* soap_new_req__tds__GetScopes(soap*, ...) allocate, set required members
/// - _tds__GetScopes* soap_new_set__tds__GetScopes(soap*, ...) allocate, set all public members
/// - _tds__GetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopes(soap*, _tds__GetScopes*) deserialize from a stream
/// - int soap_write__tds__GetScopes(soap*, _tds__GetScopes*) serialize to a stream
/// - _tds__GetScopes* _tds__GetScopes::soap_dup(soap*) returns deep copy of _tds__GetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopes::soap_del() deep deletes _tds__GetScopes data members, use only after _tds__GetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopes::soap_type() returns SOAP_TYPE__tds__GetScopes or derived type identifier
class _tds__GetScopes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// @note class _tds__GetScopesResponse operations:
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*) allocate and default initialize
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopesResponse* soap_new_req__tds__GetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__GetScopesResponse* soap_new_set__tds__GetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) serialize to a stream
/// - _tds__GetScopesResponse* _tds__GetScopesResponse::soap_dup(soap*) returns deep copy of _tds__GetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopesResponse::soap_del() deep deletes _tds__GetScopesResponse data members, use only after _tds__GetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopesResponse::soap_type() returns SOAP_TYPE__tds__GetScopesResponse or derived type identifier
class _tds__GetScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Scope* of length 1..unbounded.
    std::vector<tt__Scope*             > Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// @note class _tds__SetScopes operations:
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*) allocate and default initialize
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopes* soap_new_req__tds__SetScopes(soap*, ...) allocate, set required members
/// - _tds__SetScopes* soap_new_set__tds__SetScopes(soap*, ...) allocate, set all public members
/// - _tds__SetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopes(soap*, _tds__SetScopes*) deserialize from a stream
/// - int soap_write__tds__SetScopes(soap*, _tds__SetScopes*) serialize to a stream
/// - _tds__SetScopes* _tds__SetScopes::soap_dup(soap*) returns deep copy of _tds__SetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopes::soap_del() deep deletes _tds__SetScopes data members, use only after _tds__SetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopes::soap_type() returns SOAP_TYPE__tds__SetScopes or derived type identifier
class _tds__SetScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// @note class _tds__SetScopesResponse operations:
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*) allocate and default initialize
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopesResponse* soap_new_req__tds__SetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__SetScopesResponse* soap_new_set__tds__SetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) serialize to a stream
/// - _tds__SetScopesResponse* _tds__SetScopesResponse::soap_dup(soap*) returns deep copy of _tds__SetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopesResponse::soap_del() deep deletes _tds__SetScopesResponse data members, use only after _tds__SetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopesResponse::soap_type() returns SOAP_TYPE__tds__SetScopesResponse or derived type identifier
class _tds__SetScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// @note class _tds__AddScopes operations:
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*) allocate and default initialize
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopes* soap_new_req__tds__AddScopes(soap*, ...) allocate, set required members
/// - _tds__AddScopes* soap_new_set__tds__AddScopes(soap*, ...) allocate, set all public members
/// - _tds__AddScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopes(soap*, _tds__AddScopes*) deserialize from a stream
/// - int soap_write__tds__AddScopes(soap*, _tds__AddScopes*) serialize to a stream
/// - _tds__AddScopes* _tds__AddScopes::soap_dup(soap*) returns deep copy of _tds__AddScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopes::soap_del() deep deletes _tds__AddScopes data members, use only after _tds__AddScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopes::soap_type() returns SOAP_TYPE__tds__AddScopes or derived type identifier
class _tds__AddScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// @note class _tds__AddScopesResponse operations:
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*) allocate and default initialize
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopesResponse* soap_new_req__tds__AddScopesResponse(soap*, ...) allocate, set required members
/// - _tds__AddScopesResponse* soap_new_set__tds__AddScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__AddScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) deserialize from a stream
/// - int soap_write__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) serialize to a stream
/// - _tds__AddScopesResponse* _tds__AddScopesResponse::soap_dup(soap*) returns deep copy of _tds__AddScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopesResponse::soap_del() deep deletes _tds__AddScopesResponse data members, use only after _tds__AddScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopesResponse::soap_type() returns SOAP_TYPE__tds__AddScopesResponse or derived type identifier
class _tds__AddScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// @note class _tds__RemoveScopes operations:
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*) allocate and default initialize
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopes* soap_new_req__tds__RemoveScopes(soap*, ...) allocate, set required members
/// - _tds__RemoveScopes* soap_new_set__tds__RemoveScopes(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopes(soap*, _tds__RemoveScopes*) deserialize from a stream
/// - int soap_write__tds__RemoveScopes(soap*, _tds__RemoveScopes*) serialize to a stream
/// - _tds__RemoveScopes* _tds__RemoveScopes::soap_dup(soap*) returns deep copy of _tds__RemoveScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopes::soap_del() deep deletes _tds__RemoveScopes data members, use only after _tds__RemoveScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopes::soap_type() returns SOAP_TYPE__tds__RemoveScopes or derived type identifier
class _tds__RemoveScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// @note class _tds__RemoveScopesResponse operations:
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*) allocate and default initialize
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopesResponse* soap_new_req__tds__RemoveScopesResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveScopesResponse* soap_new_set__tds__RemoveScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) serialize to a stream
/// - _tds__RemoveScopesResponse* _tds__RemoveScopesResponse::soap_dup(soap*) returns deep copy of _tds__RemoveScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopesResponse::soap_del() deep deletes _tds__RemoveScopesResponse data members, use only after _tds__RemoveScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopesResponse::soap_type() returns SOAP_TYPE__tds__RemoveScopesResponse or derived type identifier
class _tds__RemoveScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// @note class _tds__GetDiscoveryMode operations:
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryMode* soap_new_req__tds__GetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryMode* soap_new_set__tds__GetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) serialize to a stream
/// - _tds__GetDiscoveryMode* _tds__GetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryMode::soap_del() deep deletes _tds__GetDiscoveryMode data members, use only after _tds__GetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetDiscoveryMode or derived type identifier
class _tds__GetDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetDiscoveryModeResponse operations:
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryModeResponse* soap_new_req__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryModeResponse* soap_new_set__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetDiscoveryModeResponse* _tds__GetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryModeResponse::soap_del() deep deletes _tds__GetDiscoveryModeResponse data members, use only after _tds__GetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetDiscoveryModeResponse or derived type identifier
class _tds__GetDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// @note class _tds__SetDiscoveryMode operations:
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryMode* soap_new_req__tds__SetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryMode* soap_new_set__tds__SetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) serialize to a stream
/// - _tds__SetDiscoveryMode* _tds__SetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryMode::soap_del() deep deletes _tds__SetDiscoveryMode data members, use only after _tds__SetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetDiscoveryMode or derived type identifier
class _tds__SetDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetDiscoveryModeResponse operations:
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryModeResponse* soap_new_req__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryModeResponse* soap_new_set__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetDiscoveryModeResponse* _tds__SetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryModeResponse::soap_del() deep deletes _tds__SetDiscoveryModeResponse data members, use only after _tds__SetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetDiscoveryModeResponse or derived type identifier
class _tds__SetDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryMode operations:
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryMode* soap_new_req__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryMode* soap_new_set__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__GetRemoteDiscoveryMode* _tds__GetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryMode::soap_del() deep deletes _tds__GetRemoteDiscoveryMode data members, use only after _tds__GetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryMode or derived type identifier
class _tds__GetRemoteDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryModeResponse operations:
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_req__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_set__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetRemoteDiscoveryModeResponse* _tds__GetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__GetRemoteDiscoveryModeResponse data members, use only after _tds__GetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse or derived type identifier
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryMode operations:
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryMode* soap_new_req__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryMode* soap_new_set__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__SetRemoteDiscoveryMode* _tds__SetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryMode::soap_del() deep deletes _tds__SetRemoteDiscoveryMode data members, use only after _tds__SetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryMode or derived type identifier
class _tds__SetRemoteDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryModeResponse operations:
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_req__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_set__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetRemoteDiscoveryModeResponse* _tds__SetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__SetRemoteDiscoveryModeResponse data members, use only after _tds__SetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse or derived type identifier
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// @note class _tds__GetDPAddresses operations:
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*) allocate and default initialize
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddresses* soap_new_req__tds__GetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__GetDPAddresses* soap_new_set__tds__GetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) serialize to a stream
/// - _tds__GetDPAddresses* _tds__GetDPAddresses::soap_dup(soap*) returns deep copy of _tds__GetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddresses::soap_del() deep deletes _tds__GetDPAddresses data members, use only after _tds__GetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddresses::soap_type() returns SOAP_TYPE__tds__GetDPAddresses or derived type identifier
class _tds__GetDPAddresses
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// @note class _tds__GetDPAddressesResponse operations:
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddressesResponse* soap_new_req__tds__GetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDPAddressesResponse* soap_new_set__tds__GetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) serialize to a stream
/// - _tds__GetDPAddressesResponse* _tds__GetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__GetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddressesResponse::soap_del() deep deletes _tds__GetDPAddressesResponse data members, use only after _tds__GetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__GetDPAddressesResponse or derived type identifier
class _tds__GetDPAddressesResponse
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// @note class _tds__SetDPAddresses operations:
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*) allocate and default initialize
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddresses* soap_new_req__tds__SetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__SetDPAddresses* soap_new_set__tds__SetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) serialize to a stream
/// - _tds__SetDPAddresses* _tds__SetDPAddresses::soap_dup(soap*) returns deep copy of _tds__SetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddresses::soap_del() deep deletes _tds__SetDPAddresses data members, use only after _tds__SetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddresses::soap_type() returns SOAP_TYPE__tds__SetDPAddresses or derived type identifier
class _tds__SetDPAddresses
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// @note class _tds__SetDPAddressesResponse operations:
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddressesResponse* soap_new_req__tds__SetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__SetDPAddressesResponse* soap_new_set__tds__SetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) serialize to a stream
/// - _tds__SetDPAddressesResponse* _tds__SetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__SetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddressesResponse::soap_del() deep deletes _tds__SetDPAddressesResponse data members, use only after _tds__SetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__SetDPAddressesResponse or derived type identifier
class _tds__SetDPAddressesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// @note class _tds__GetEndpointReference operations:
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*) allocate and default initialize
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReference* soap_new_req__tds__GetEndpointReference(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReference* soap_new_set__tds__GetEndpointReference(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReference::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) serialize to a stream
/// - _tds__GetEndpointReference* _tds__GetEndpointReference::soap_dup(soap*) returns deep copy of _tds__GetEndpointReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReference::soap_del() deep deletes _tds__GetEndpointReference data members, use only after _tds__GetEndpointReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReference::soap_type() returns SOAP_TYPE__tds__GetEndpointReference or derived type identifier
class _tds__GetEndpointReference
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// @note class _tds__GetEndpointReferenceResponse operations:
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*) allocate and default initialize
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReferenceResponse* soap_new_req__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReferenceResponse* soap_new_set__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReferenceResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) serialize to a stream
/// - _tds__GetEndpointReferenceResponse* _tds__GetEndpointReferenceResponse::soap_dup(soap*) returns deep copy of _tds__GetEndpointReferenceResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReferenceResponse::soap_del() deep deletes _tds__GetEndpointReferenceResponse data members, use only after _tds__GetEndpointReferenceResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReferenceResponse::soap_type() returns SOAP_TYPE__tds__GetEndpointReferenceResponse or derived type identifier
class _tds__GetEndpointReferenceResponse
{ public:
/// Element "GUID" of type xs:string.
    std::string                          GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// @note class _tds__GetRemoteUser operations:
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*) allocate and default initialize
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUser* soap_new_req__tds__GetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUser* soap_new_set__tds__GetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) serialize to a stream
/// - _tds__GetRemoteUser* _tds__GetRemoteUser::soap_dup(soap*) returns deep copy of _tds__GetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUser::soap_del() deep deletes _tds__GetRemoteUser data members, use only after _tds__GetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUser::soap_type() returns SOAP_TYPE__tds__GetRemoteUser or derived type identifier
class _tds__GetRemoteUser
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// @note class _tds__GetRemoteUserResponse operations:
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUserResponse* soap_new_req__tds__GetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUserResponse* soap_new_set__tds__GetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) serialize to a stream
/// - _tds__GetRemoteUserResponse* _tds__GetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUserResponse::soap_del() deep deletes _tds__GetRemoteUserResponse data members, use only after _tds__GetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteUserResponse or derived type identifier
class _tds__GetRemoteUserResponse
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// @note class _tds__SetRemoteUser operations:
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*) allocate and default initialize
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUser* soap_new_req__tds__SetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUser* soap_new_set__tds__SetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) serialize to a stream
/// - _tds__SetRemoteUser* _tds__SetRemoteUser::soap_dup(soap*) returns deep copy of _tds__SetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUser::soap_del() deep deletes _tds__SetRemoteUser data members, use only after _tds__SetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUser::soap_type() returns SOAP_TYPE__tds__SetRemoteUser or derived type identifier
class _tds__SetRemoteUser
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// @note class _tds__SetRemoteUserResponse operations:
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUserResponse* soap_new_req__tds__SetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUserResponse* soap_new_set__tds__SetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) serialize to a stream
/// - _tds__SetRemoteUserResponse* _tds__SetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUserResponse::soap_del() deep deletes _tds__SetRemoteUserResponse data members, use only after _tds__SetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteUserResponse or derived type identifier
class _tds__SetRemoteUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// @note class _tds__GetUsers operations:
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*) allocate and default initialize
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsers* soap_new_req__tds__GetUsers(soap*, ...) allocate, set required members
/// - _tds__GetUsers* soap_new_set__tds__GetUsers(soap*, ...) allocate, set all public members
/// - _tds__GetUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsers(soap*, _tds__GetUsers*) deserialize from a stream
/// - int soap_write__tds__GetUsers(soap*, _tds__GetUsers*) serialize to a stream
/// - _tds__GetUsers* _tds__GetUsers::soap_dup(soap*) returns deep copy of _tds__GetUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsers::soap_del() deep deletes _tds__GetUsers data members, use only after _tds__GetUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsers::soap_type() returns SOAP_TYPE__tds__GetUsers or derived type identifier
class _tds__GetUsers
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// @note class _tds__GetUsersResponse operations:
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*) allocate and default initialize
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsersResponse* soap_new_req__tds__GetUsersResponse(soap*, ...) allocate, set required members
/// - _tds__GetUsersResponse* soap_new_set__tds__GetUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__GetUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) deserialize from a stream
/// - int soap_write__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) serialize to a stream
/// - _tds__GetUsersResponse* _tds__GetUsersResponse::soap_dup(soap*) returns deep copy of _tds__GetUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsersResponse::soap_del() deep deletes _tds__GetUsersResponse data members, use only after _tds__GetUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsersResponse::soap_type() returns SOAP_TYPE__tds__GetUsersResponse or derived type identifier
class _tds__GetUsersResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 0..unbounded.
    std::vector<tt__User*              > User                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// @note class _tds__CreateUsers operations:
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*) allocate and default initialize
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsers* soap_new_req__tds__CreateUsers(soap*, ...) allocate, set required members
/// - _tds__CreateUsers* soap_new_set__tds__CreateUsers(soap*, ...) allocate, set all public members
/// - _tds__CreateUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsers(soap*, _tds__CreateUsers*) deserialize from a stream
/// - int soap_write__tds__CreateUsers(soap*, _tds__CreateUsers*) serialize to a stream
/// - _tds__CreateUsers* _tds__CreateUsers::soap_dup(soap*) returns deep copy of _tds__CreateUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsers::soap_del() deep deletes _tds__CreateUsers data members, use only after _tds__CreateUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsers::soap_type() returns SOAP_TYPE__tds__CreateUsers or derived type identifier
class _tds__CreateUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// @note class _tds__CreateUsersResponse operations:
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*) allocate and default initialize
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsersResponse* soap_new_req__tds__CreateUsersResponse(soap*, ...) allocate, set required members
/// - _tds__CreateUsersResponse* soap_new_set__tds__CreateUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) deserialize from a stream
/// - int soap_write__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) serialize to a stream
/// - _tds__CreateUsersResponse* _tds__CreateUsersResponse::soap_dup(soap*) returns deep copy of _tds__CreateUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsersResponse::soap_del() deep deletes _tds__CreateUsersResponse data members, use only after _tds__CreateUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsersResponse::soap_type() returns SOAP_TYPE__tds__CreateUsersResponse or derived type identifier
class _tds__CreateUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// @note class _tds__DeleteUsers operations:
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*) allocate and default initialize
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsers* soap_new_req__tds__DeleteUsers(soap*, ...) allocate, set required members
/// - _tds__DeleteUsers* soap_new_set__tds__DeleteUsers(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsers(soap*, _tds__DeleteUsers*) deserialize from a stream
/// - int soap_write__tds__DeleteUsers(soap*, _tds__DeleteUsers*) serialize to a stream
/// - _tds__DeleteUsers* _tds__DeleteUsers::soap_dup(soap*) returns deep copy of _tds__DeleteUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsers::soap_del() deep deletes _tds__DeleteUsers data members, use only after _tds__DeleteUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsers::soap_type() returns SOAP_TYPE__tds__DeleteUsers or derived type identifier
class _tds__DeleteUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Username                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// @note class _tds__DeleteUsersResponse operations:
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*) allocate and default initialize
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsersResponse* soap_new_req__tds__DeleteUsersResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteUsersResponse* soap_new_set__tds__DeleteUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) serialize to a stream
/// - _tds__DeleteUsersResponse* _tds__DeleteUsersResponse::soap_dup(soap*) returns deep copy of _tds__DeleteUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsersResponse::soap_del() deep deletes _tds__DeleteUsersResponse data members, use only after _tds__DeleteUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsersResponse::soap_type() returns SOAP_TYPE__tds__DeleteUsersResponse or derived type identifier
class _tds__DeleteUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// @note class _tds__SetUser operations:
/// - _tds__SetUser* soap_new__tds__SetUser(soap*) allocate and default initialize
/// - _tds__SetUser* soap_new__tds__SetUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetUser* soap_new_req__tds__SetUser(soap*, ...) allocate, set required members
/// - _tds__SetUser* soap_new_set__tds__SetUser(soap*, ...) allocate, set all public members
/// - _tds__SetUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUser(soap*, _tds__SetUser*) deserialize from a stream
/// - int soap_write__tds__SetUser(soap*, _tds__SetUser*) serialize to a stream
/// - _tds__SetUser* _tds__SetUser::soap_dup(soap*) returns deep copy of _tds__SetUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUser::soap_del() deep deletes _tds__SetUser data members, use only after _tds__SetUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUser::soap_type() returns SOAP_TYPE__tds__SetUser or derived type identifier
class _tds__SetUser
{ public:
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// @note class _tds__SetUserResponse operations:
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*) allocate and default initialize
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetUserResponse* soap_new_req__tds__SetUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetUserResponse* soap_new_set__tds__SetUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUserResponse(soap*, _tds__SetUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetUserResponse(soap*, _tds__SetUserResponse*) serialize to a stream
/// - _tds__SetUserResponse* _tds__SetUserResponse::soap_dup(soap*) returns deep copy of _tds__SetUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUserResponse::soap_del() deep deletes _tds__SetUserResponse data members, use only after _tds__SetUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUserResponse::soap_type() returns SOAP_TYPE__tds__SetUserResponse or derived type identifier
class _tds__SetUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// @note class _tds__GetWsdlUrl operations:
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*) allocate and default initialize
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrl* soap_new_req__tds__GetWsdlUrl(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrl* soap_new_set__tds__GetWsdlUrl(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrl::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) serialize to a stream
/// - _tds__GetWsdlUrl* _tds__GetWsdlUrl::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrl, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrl::soap_del() deep deletes _tds__GetWsdlUrl data members, use only after _tds__GetWsdlUrl::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrl::soap_type() returns SOAP_TYPE__tds__GetWsdlUrl or derived type identifier
class _tds__GetWsdlUrl
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// @note class _tds__GetWsdlUrlResponse operations:
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*) allocate and default initialize
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrlResponse* soap_new_req__tds__GetWsdlUrlResponse(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrlResponse* soap_new_set__tds__GetWsdlUrlResponse(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrlResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) serialize to a stream
/// - _tds__GetWsdlUrlResponse* _tds__GetWsdlUrlResponse::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrlResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrlResponse::soap_del() deep deletes _tds__GetWsdlUrlResponse data members, use only after _tds__GetWsdlUrlResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrlResponse::soap_type() returns SOAP_TYPE__tds__GetWsdlUrlResponse or derived type identifier
class _tds__GetWsdlUrlResponse
{ public:
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptions
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptions is a complexType.
///
/// @note class _tds__GetPasswordComplexityOptions operations:
/// - _tds__GetPasswordComplexityOptions* soap_new__tds__GetPasswordComplexityOptions(soap*) allocate and default initialize
/// - _tds__GetPasswordComplexityOptions* soap_new__tds__GetPasswordComplexityOptions(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordComplexityOptions* soap_new_req__tds__GetPasswordComplexityOptions(soap*, ...) allocate, set required members
/// - _tds__GetPasswordComplexityOptions* soap_new_set__tds__GetPasswordComplexityOptions(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordComplexityOptions::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityOptions(soap*, _tds__GetPasswordComplexityOptions*) deserialize from a stream
/// - int soap_write__tds__GetPasswordComplexityOptions(soap*, _tds__GetPasswordComplexityOptions*) serialize to a stream
/// - _tds__GetPasswordComplexityOptions* _tds__GetPasswordComplexityOptions::soap_dup(soap*) returns deep copy of _tds__GetPasswordComplexityOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordComplexityOptions::soap_del() deep deletes _tds__GetPasswordComplexityOptions data members, use only after _tds__GetPasswordComplexityOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordComplexityOptions::soap_type() returns SOAP_TYPE__tds__GetPasswordComplexityOptions or derived type identifier
class _tds__GetPasswordComplexityOptions
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptionsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityOptionsResponse is a complexType.
///
/// @note class _tds__GetPasswordComplexityOptionsResponse operations:
/// - _tds__GetPasswordComplexityOptionsResponse* soap_new__tds__GetPasswordComplexityOptionsResponse(soap*) allocate and default initialize
/// - _tds__GetPasswordComplexityOptionsResponse* soap_new__tds__GetPasswordComplexityOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordComplexityOptionsResponse* soap_new_req__tds__GetPasswordComplexityOptionsResponse(soap*, ...) allocate, set required members
/// - _tds__GetPasswordComplexityOptionsResponse* soap_new_set__tds__GetPasswordComplexityOptionsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordComplexityOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityOptionsResponse(soap*, _tds__GetPasswordComplexityOptionsResponse*) deserialize from a stream
/// - int soap_write__tds__GetPasswordComplexityOptionsResponse(soap*, _tds__GetPasswordComplexityOptionsResponse*) serialize to a stream
/// - _tds__GetPasswordComplexityOptionsResponse* _tds__GetPasswordComplexityOptionsResponse::soap_dup(soap*) returns deep copy of _tds__GetPasswordComplexityOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordComplexityOptionsResponse::soap_del() deep deletes _tds__GetPasswordComplexityOptionsResponse data members, use only after _tds__GetPasswordComplexityOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordComplexityOptionsResponse::soap_type() returns SOAP_TYPE__tds__GetPasswordComplexityOptionsResponse or derived type identifier
class _tds__GetPasswordComplexityOptionsResponse
{ public:
/// Element "MinLenRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        MinLenRange                    0;	///< Optional element.
/// Element "UppercaseRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        UppercaseRange                 0;	///< Optional element.
/// Element "NumberRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        NumberRange                    0;	///< Optional element.
/// Element "SpecialCharsRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SpecialCharsRange              0;	///< Optional element.
/// Element "BlockUsernameOccurrenceSupported" of type xs:boolean.
    bool*                                BlockUsernameOccurrenceSupported 0;	///< Optional element.
/// Element "PolicyConfigurationLockSupported" of type xs:boolean.
    bool*                                PolicyConfigurationLockSupported 0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfiguration is a complexType.
///
/// @note class _tds__GetPasswordComplexityConfiguration operations:
/// - _tds__GetPasswordComplexityConfiguration* soap_new__tds__GetPasswordComplexityConfiguration(soap*) allocate and default initialize
/// - _tds__GetPasswordComplexityConfiguration* soap_new__tds__GetPasswordComplexityConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordComplexityConfiguration* soap_new_req__tds__GetPasswordComplexityConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetPasswordComplexityConfiguration* soap_new_set__tds__GetPasswordComplexityConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordComplexityConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityConfiguration(soap*, _tds__GetPasswordComplexityConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetPasswordComplexityConfiguration(soap*, _tds__GetPasswordComplexityConfiguration*) serialize to a stream
/// - _tds__GetPasswordComplexityConfiguration* _tds__GetPasswordComplexityConfiguration::soap_dup(soap*) returns deep copy of _tds__GetPasswordComplexityConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordComplexityConfiguration::soap_del() deep deletes _tds__GetPasswordComplexityConfiguration data members, use only after _tds__GetPasswordComplexityConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordComplexityConfiguration::soap_type() returns SOAP_TYPE__tds__GetPasswordComplexityConfiguration or derived type identifier
class _tds__GetPasswordComplexityConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordComplexityConfigurationResponse is a complexType.
///
/// @note class _tds__GetPasswordComplexityConfigurationResponse operations:
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_new__tds__GetPasswordComplexityConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_new__tds__GetPasswordComplexityConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_new_req__tds__GetPasswordComplexityConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetPasswordComplexityConfigurationResponse* soap_new_set__tds__GetPasswordComplexityConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordComplexityConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordComplexityConfigurationResponse(soap*, _tds__GetPasswordComplexityConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetPasswordComplexityConfigurationResponse(soap*, _tds__GetPasswordComplexityConfigurationResponse*) serialize to a stream
/// - _tds__GetPasswordComplexityConfigurationResponse* _tds__GetPasswordComplexityConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetPasswordComplexityConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordComplexityConfigurationResponse::soap_del() deep deletes _tds__GetPasswordComplexityConfigurationResponse data members, use only after _tds__GetPasswordComplexityConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordComplexityConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetPasswordComplexityConfigurationResponse or derived type identifier
class _tds__GetPasswordComplexityConfigurationResponse
{ public:
/// Element "MinLen" of type xs:int.
    int*                                 MinLen                         0;	///< Optional element.
/// Element "Uppercase" of type xs:int.
    int*                                 Uppercase                      0;	///< Optional element.
/// Element "Number" of type xs:int.
    int*                                 Number                         0;	///< Optional element.
/// Element "SpecialChars" of type xs:int.
    int*                                 SpecialChars                   0;	///< Optional element.
/// Element "BlockUsernameOccurrence" of type xs:boolean.
    bool*                                BlockUsernameOccurrence        0;	///< Optional element.
/// Element "PolicyConfigurationLocked" of type xs:boolean.
    bool*                                PolicyConfigurationLocked      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfiguration is a complexType.
///
/// @note class _tds__SetPasswordComplexityConfiguration operations:
/// - _tds__SetPasswordComplexityConfiguration* soap_new__tds__SetPasswordComplexityConfiguration(soap*) allocate and default initialize
/// - _tds__SetPasswordComplexityConfiguration* soap_new__tds__SetPasswordComplexityConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetPasswordComplexityConfiguration* soap_new_req__tds__SetPasswordComplexityConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetPasswordComplexityConfiguration* soap_new_set__tds__SetPasswordComplexityConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetPasswordComplexityConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetPasswordComplexityConfiguration(soap*, _tds__SetPasswordComplexityConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetPasswordComplexityConfiguration(soap*, _tds__SetPasswordComplexityConfiguration*) serialize to a stream
/// - _tds__SetPasswordComplexityConfiguration* _tds__SetPasswordComplexityConfiguration::soap_dup(soap*) returns deep copy of _tds__SetPasswordComplexityConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetPasswordComplexityConfiguration::soap_del() deep deletes _tds__SetPasswordComplexityConfiguration data members, use only after _tds__SetPasswordComplexityConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetPasswordComplexityConfiguration::soap_type() returns SOAP_TYPE__tds__SetPasswordComplexityConfiguration or derived type identifier
class _tds__SetPasswordComplexityConfiguration
{ public:
/// Element "MinLen" of type xs:int.
    int*                                 MinLen                         0;	///< Optional element.
/// Element "Uppercase" of type xs:int.
    int*                                 Uppercase                      0;	///< Optional element.
/// Element "Number" of type xs:int.
    int*                                 Number                         0;	///< Optional element.
/// Element "SpecialChars" of type xs:int.
    int*                                 SpecialChars                   0;	///< Optional element.
/// Element "BlockUsernameOccurrence" of type xs:boolean.
    bool*                                BlockUsernameOccurrence        0;	///< Optional element.
/// Element "PolicyConfigurationLocked" of type xs:boolean.
    bool*                                PolicyConfigurationLocked      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordComplexityConfigurationResponse is a complexType.
///
/// @note class _tds__SetPasswordComplexityConfigurationResponse operations:
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_new__tds__SetPasswordComplexityConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_new__tds__SetPasswordComplexityConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_new_req__tds__SetPasswordComplexityConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetPasswordComplexityConfigurationResponse* soap_new_set__tds__SetPasswordComplexityConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetPasswordComplexityConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetPasswordComplexityConfigurationResponse(soap*, _tds__SetPasswordComplexityConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetPasswordComplexityConfigurationResponse(soap*, _tds__SetPasswordComplexityConfigurationResponse*) serialize to a stream
/// - _tds__SetPasswordComplexityConfigurationResponse* _tds__SetPasswordComplexityConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetPasswordComplexityConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetPasswordComplexityConfigurationResponse::soap_del() deep deletes _tds__SetPasswordComplexityConfigurationResponse data members, use only after _tds__SetPasswordComplexityConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetPasswordComplexityConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetPasswordComplexityConfigurationResponse or derived type identifier
class _tds__SetPasswordComplexityConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfiguration is a complexType.
///
/// @note class _tds__GetPasswordHistoryConfiguration operations:
/// - _tds__GetPasswordHistoryConfiguration* soap_new__tds__GetPasswordHistoryConfiguration(soap*) allocate and default initialize
/// - _tds__GetPasswordHistoryConfiguration* soap_new__tds__GetPasswordHistoryConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordHistoryConfiguration* soap_new_req__tds__GetPasswordHistoryConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetPasswordHistoryConfiguration* soap_new_set__tds__GetPasswordHistoryConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordHistoryConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordHistoryConfiguration(soap*, _tds__GetPasswordHistoryConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetPasswordHistoryConfiguration(soap*, _tds__GetPasswordHistoryConfiguration*) serialize to a stream
/// - _tds__GetPasswordHistoryConfiguration* _tds__GetPasswordHistoryConfiguration::soap_dup(soap*) returns deep copy of _tds__GetPasswordHistoryConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordHistoryConfiguration::soap_del() deep deletes _tds__GetPasswordHistoryConfiguration data members, use only after _tds__GetPasswordHistoryConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordHistoryConfiguration::soap_type() returns SOAP_TYPE__tds__GetPasswordHistoryConfiguration or derived type identifier
class _tds__GetPasswordHistoryConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPasswordHistoryConfigurationResponse is a complexType.
///
/// @note class _tds__GetPasswordHistoryConfigurationResponse operations:
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_new__tds__GetPasswordHistoryConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_new__tds__GetPasswordHistoryConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_new_req__tds__GetPasswordHistoryConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetPasswordHistoryConfigurationResponse* soap_new_set__tds__GetPasswordHistoryConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPasswordHistoryConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPasswordHistoryConfigurationResponse(soap*, _tds__GetPasswordHistoryConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetPasswordHistoryConfigurationResponse(soap*, _tds__GetPasswordHistoryConfigurationResponse*) serialize to a stream
/// - _tds__GetPasswordHistoryConfigurationResponse* _tds__GetPasswordHistoryConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetPasswordHistoryConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPasswordHistoryConfigurationResponse::soap_del() deep deletes _tds__GetPasswordHistoryConfigurationResponse data members, use only after _tds__GetPasswordHistoryConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPasswordHistoryConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetPasswordHistoryConfigurationResponse or derived type identifier
class _tds__GetPasswordHistoryConfigurationResponse
{ public:
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element "Length" of type xs:int.
    int                                  Length                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfiguration is a complexType.
///
/// @note class _tds__SetPasswordHistoryConfiguration operations:
/// - _tds__SetPasswordHistoryConfiguration* soap_new__tds__SetPasswordHistoryConfiguration(soap*) allocate and default initialize
/// - _tds__SetPasswordHistoryConfiguration* soap_new__tds__SetPasswordHistoryConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetPasswordHistoryConfiguration* soap_new_req__tds__SetPasswordHistoryConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetPasswordHistoryConfiguration* soap_new_set__tds__SetPasswordHistoryConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetPasswordHistoryConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetPasswordHistoryConfiguration(soap*, _tds__SetPasswordHistoryConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetPasswordHistoryConfiguration(soap*, _tds__SetPasswordHistoryConfiguration*) serialize to a stream
/// - _tds__SetPasswordHistoryConfiguration* _tds__SetPasswordHistoryConfiguration::soap_dup(soap*) returns deep copy of _tds__SetPasswordHistoryConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetPasswordHistoryConfiguration::soap_del() deep deletes _tds__SetPasswordHistoryConfiguration data members, use only after _tds__SetPasswordHistoryConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetPasswordHistoryConfiguration::soap_type() returns SOAP_TYPE__tds__SetPasswordHistoryConfiguration or derived type identifier
class _tds__SetPasswordHistoryConfiguration
{ public:
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element "Length" of type xs:int.
    int                                  Length                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetPasswordHistoryConfigurationResponse is a complexType.
///
/// @note class _tds__SetPasswordHistoryConfigurationResponse operations:
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_new__tds__SetPasswordHistoryConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_new__tds__SetPasswordHistoryConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_new_req__tds__SetPasswordHistoryConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetPasswordHistoryConfigurationResponse* soap_new_set__tds__SetPasswordHistoryConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetPasswordHistoryConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetPasswordHistoryConfigurationResponse(soap*, _tds__SetPasswordHistoryConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetPasswordHistoryConfigurationResponse(soap*, _tds__SetPasswordHistoryConfigurationResponse*) serialize to a stream
/// - _tds__SetPasswordHistoryConfigurationResponse* _tds__SetPasswordHistoryConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetPasswordHistoryConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetPasswordHistoryConfigurationResponse::soap_del() deep deletes _tds__SetPasswordHistoryConfigurationResponse data members, use only after _tds__SetPasswordHistoryConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetPasswordHistoryConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetPasswordHistoryConfigurationResponse or derived type identifier
class _tds__SetPasswordHistoryConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptions
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptions is a complexType.
///
/// @note class _tds__GetAuthFailureWarningOptions operations:
/// - _tds__GetAuthFailureWarningOptions* soap_new__tds__GetAuthFailureWarningOptions(soap*) allocate and default initialize
/// - _tds__GetAuthFailureWarningOptions* soap_new__tds__GetAuthFailureWarningOptions(soap*, int num) allocate and default initialize an array
/// - _tds__GetAuthFailureWarningOptions* soap_new_req__tds__GetAuthFailureWarningOptions(soap*, ...) allocate, set required members
/// - _tds__GetAuthFailureWarningOptions* soap_new_set__tds__GetAuthFailureWarningOptions(soap*, ...) allocate, set all public members
/// - _tds__GetAuthFailureWarningOptions::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningOptions(soap*, _tds__GetAuthFailureWarningOptions*) deserialize from a stream
/// - int soap_write__tds__GetAuthFailureWarningOptions(soap*, _tds__GetAuthFailureWarningOptions*) serialize to a stream
/// - _tds__GetAuthFailureWarningOptions* _tds__GetAuthFailureWarningOptions::soap_dup(soap*) returns deep copy of _tds__GetAuthFailureWarningOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAuthFailureWarningOptions::soap_del() deep deletes _tds__GetAuthFailureWarningOptions data members, use only after _tds__GetAuthFailureWarningOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAuthFailureWarningOptions::soap_type() returns SOAP_TYPE__tds__GetAuthFailureWarningOptions or derived type identifier
class _tds__GetAuthFailureWarningOptions
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptionsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningOptionsResponse is a complexType.
///
/// @note class _tds__GetAuthFailureWarningOptionsResponse operations:
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_new__tds__GetAuthFailureWarningOptionsResponse(soap*) allocate and default initialize
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_new__tds__GetAuthFailureWarningOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_new_req__tds__GetAuthFailureWarningOptionsResponse(soap*, ...) allocate, set required members
/// - _tds__GetAuthFailureWarningOptionsResponse* soap_new_set__tds__GetAuthFailureWarningOptionsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetAuthFailureWarningOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningOptionsResponse(soap*, _tds__GetAuthFailureWarningOptionsResponse*) deserialize from a stream
/// - int soap_write__tds__GetAuthFailureWarningOptionsResponse(soap*, _tds__GetAuthFailureWarningOptionsResponse*) serialize to a stream
/// - _tds__GetAuthFailureWarningOptionsResponse* _tds__GetAuthFailureWarningOptionsResponse::soap_dup(soap*) returns deep copy of _tds__GetAuthFailureWarningOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAuthFailureWarningOptionsResponse::soap_del() deep deletes _tds__GetAuthFailureWarningOptionsResponse data members, use only after _tds__GetAuthFailureWarningOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAuthFailureWarningOptionsResponse::soap_type() returns SOAP_TYPE__tds__GetAuthFailureWarningOptionsResponse or derived type identifier
class _tds__GetAuthFailureWarningOptionsResponse
{ public:
/// Element "MonitorPeriodRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        MonitorPeriodRange             1;	///< Required element.
/// Element "AuthFailureRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        AuthFailureRange               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfiguration is a complexType.
///
/// @note class _tds__GetAuthFailureWarningConfiguration operations:
/// - _tds__GetAuthFailureWarningConfiguration* soap_new__tds__GetAuthFailureWarningConfiguration(soap*) allocate and default initialize
/// - _tds__GetAuthFailureWarningConfiguration* soap_new__tds__GetAuthFailureWarningConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetAuthFailureWarningConfiguration* soap_new_req__tds__GetAuthFailureWarningConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetAuthFailureWarningConfiguration* soap_new_set__tds__GetAuthFailureWarningConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetAuthFailureWarningConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningConfiguration(soap*, _tds__GetAuthFailureWarningConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetAuthFailureWarningConfiguration(soap*, _tds__GetAuthFailureWarningConfiguration*) serialize to a stream
/// - _tds__GetAuthFailureWarningConfiguration* _tds__GetAuthFailureWarningConfiguration::soap_dup(soap*) returns deep copy of _tds__GetAuthFailureWarningConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAuthFailureWarningConfiguration::soap_del() deep deletes _tds__GetAuthFailureWarningConfiguration data members, use only after _tds__GetAuthFailureWarningConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAuthFailureWarningConfiguration::soap_type() returns SOAP_TYPE__tds__GetAuthFailureWarningConfiguration or derived type identifier
class _tds__GetAuthFailureWarningConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAuthFailureWarningConfigurationResponse is a complexType.
///
/// @note class _tds__GetAuthFailureWarningConfigurationResponse operations:
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_new__tds__GetAuthFailureWarningConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_new__tds__GetAuthFailureWarningConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_new_req__tds__GetAuthFailureWarningConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetAuthFailureWarningConfigurationResponse* soap_new_set__tds__GetAuthFailureWarningConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetAuthFailureWarningConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAuthFailureWarningConfigurationResponse(soap*, _tds__GetAuthFailureWarningConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetAuthFailureWarningConfigurationResponse(soap*, _tds__GetAuthFailureWarningConfigurationResponse*) serialize to a stream
/// - _tds__GetAuthFailureWarningConfigurationResponse* _tds__GetAuthFailureWarningConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetAuthFailureWarningConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAuthFailureWarningConfigurationResponse::soap_del() deep deletes _tds__GetAuthFailureWarningConfigurationResponse data members, use only after _tds__GetAuthFailureWarningConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAuthFailureWarningConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetAuthFailureWarningConfigurationResponse or derived type identifier
class _tds__GetAuthFailureWarningConfigurationResponse
{ public:
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element "MonitorPeriod" of type xs:int.
    int                                  MonitorPeriod                  1;	///< Required element.
/// Element "MaxAuthFailures" of type xs:int.
    int                                  MaxAuthFailures                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfiguration is a complexType.
///
/// @note class _tds__SetAuthFailureWarningConfiguration operations:
/// - _tds__SetAuthFailureWarningConfiguration* soap_new__tds__SetAuthFailureWarningConfiguration(soap*) allocate and default initialize
/// - _tds__SetAuthFailureWarningConfiguration* soap_new__tds__SetAuthFailureWarningConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetAuthFailureWarningConfiguration* soap_new_req__tds__SetAuthFailureWarningConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetAuthFailureWarningConfiguration* soap_new_set__tds__SetAuthFailureWarningConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetAuthFailureWarningConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAuthFailureWarningConfiguration(soap*, _tds__SetAuthFailureWarningConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetAuthFailureWarningConfiguration(soap*, _tds__SetAuthFailureWarningConfiguration*) serialize to a stream
/// - _tds__SetAuthFailureWarningConfiguration* _tds__SetAuthFailureWarningConfiguration::soap_dup(soap*) returns deep copy of _tds__SetAuthFailureWarningConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAuthFailureWarningConfiguration::soap_del() deep deletes _tds__SetAuthFailureWarningConfiguration data members, use only after _tds__SetAuthFailureWarningConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAuthFailureWarningConfiguration::soap_type() returns SOAP_TYPE__tds__SetAuthFailureWarningConfiguration or derived type identifier
class _tds__SetAuthFailureWarningConfiguration
{ public:
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element "MonitorPeriod" of type xs:int.
    int                                  MonitorPeriod                  1;	///< Required element.
/// Element "MaxAuthFailures" of type xs:int.
    int                                  MaxAuthFailures                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAuthFailureWarningConfigurationResponse is a complexType.
///
/// @note class _tds__SetAuthFailureWarningConfigurationResponse operations:
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_new__tds__SetAuthFailureWarningConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_new__tds__SetAuthFailureWarningConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_new_req__tds__SetAuthFailureWarningConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetAuthFailureWarningConfigurationResponse* soap_new_set__tds__SetAuthFailureWarningConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetAuthFailureWarningConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAuthFailureWarningConfigurationResponse(soap*, _tds__SetAuthFailureWarningConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetAuthFailureWarningConfigurationResponse(soap*, _tds__SetAuthFailureWarningConfigurationResponse*) serialize to a stream
/// - _tds__SetAuthFailureWarningConfigurationResponse* _tds__SetAuthFailureWarningConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetAuthFailureWarningConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAuthFailureWarningConfigurationResponse::soap_del() deep deletes _tds__SetAuthFailureWarningConfigurationResponse data members, use only after _tds__SetAuthFailureWarningConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAuthFailureWarningConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetAuthFailureWarningConfigurationResponse or derived type identifier
class _tds__SetAuthFailureWarningConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note class _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*) allocate and default initialize
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilities* soap_new_req__tds__GetCapabilities(soap*, ...) allocate, set required members
/// - _tds__GetCapabilities* soap_new_set__tds__GetCapabilities(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilities(soap*, _tds__GetCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetCapabilities(soap*, _tds__GetCapabilities*) serialize to a stream
/// - _tds__GetCapabilities* _tds__GetCapabilities::soap_dup(soap*) returns deep copy of _tds__GetCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilities::soap_del() deep deletes _tds__GetCapabilities data members, use only after _tds__GetCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilities::soap_type() returns SOAP_TYPE__tds__GetCapabilities or derived type identifier
class _tds__GetCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__CapabilityCategory of length 0..unbounded.
    std::vector<enum tt__CapabilityCategory> Category                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note class _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilitiesResponse* soap_new_req__tds__GetCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCapabilitiesResponse* soap_new_set__tds__GetCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) serialize to a stream
/// - _tds__GetCapabilitiesResponse* _tds__GetCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilitiesResponse::soap_del() deep deletes _tds__GetCapabilitiesResponse data members, use only after _tds__GetCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetCapabilitiesResponse or derived type identifier
class _tds__GetCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// @note class _tds__GetHostname operations:
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*) allocate and default initialize
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostname* soap_new_req__tds__GetHostname(soap*, ...) allocate, set required members
/// - _tds__GetHostname* soap_new_set__tds__GetHostname(soap*, ...) allocate, set all public members
/// - _tds__GetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostname(soap*, _tds__GetHostname*) deserialize from a stream
/// - int soap_write__tds__GetHostname(soap*, _tds__GetHostname*) serialize to a stream
/// - _tds__GetHostname* _tds__GetHostname::soap_dup(soap*) returns deep copy of _tds__GetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostname::soap_del() deep deletes _tds__GetHostname data members, use only after _tds__GetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostname::soap_type() returns SOAP_TYPE__tds__GetHostname or derived type identifier
class _tds__GetHostname
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// @note class _tds__GetHostnameResponse operations:
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*) allocate and default initialize
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostnameResponse* soap_new_req__tds__GetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__GetHostnameResponse* soap_new_set__tds__GetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__GetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) serialize to a stream
/// - _tds__GetHostnameResponse* _tds__GetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__GetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostnameResponse::soap_del() deep deletes _tds__GetHostnameResponse data members, use only after _tds__GetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostnameResponse::soap_type() returns SOAP_TYPE__tds__GetHostnameResponse or derived type identifier
class _tds__GetHostnameResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// @note class _tds__SetHostname operations:
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*) allocate and default initialize
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostname* soap_new_req__tds__SetHostname(soap*, ...) allocate, set required members
/// - _tds__SetHostname* soap_new_set__tds__SetHostname(soap*, ...) allocate, set all public members
/// - _tds__SetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostname(soap*, _tds__SetHostname*) deserialize from a stream
/// - int soap_write__tds__SetHostname(soap*, _tds__SetHostname*) serialize to a stream
/// - _tds__SetHostname* _tds__SetHostname::soap_dup(soap*) returns deep copy of _tds__SetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostname::soap_del() deep deletes _tds__SetHostname data members, use only after _tds__SetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostname::soap_type() returns SOAP_TYPE__tds__SetHostname or derived type identifier
class _tds__SetHostname
{ public:
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// @note class _tds__SetHostnameResponse operations:
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameResponse* soap_new_req__tds__SetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameResponse* soap_new_set__tds__SetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) serialize to a stream
/// - _tds__SetHostnameResponse* _tds__SetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameResponse::soap_del() deep deletes _tds__SetHostnameResponse data members, use only after _tds__SetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameResponse or derived type identifier
class _tds__SetHostnameResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// @note class _tds__SetHostnameFromDHCP operations:
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCP* soap_new_req__tds__SetHostnameFromDHCP(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCP* soap_new_set__tds__SetHostnameFromDHCP(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) serialize to a stream
/// - _tds__SetHostnameFromDHCP* _tds__SetHostnameFromDHCP::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCP::soap_del() deep deletes _tds__SetHostnameFromDHCP data members, use only after _tds__SetHostnameFromDHCP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCP::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCP or derived type identifier
class _tds__SetHostnameFromDHCP
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// @note class _tds__SetHostnameFromDHCPResponse operations:
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCPResponse* soap_new_req__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCPResponse* soap_new_set__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) serialize to a stream
/// - _tds__SetHostnameFromDHCPResponse* _tds__SetHostnameFromDHCPResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCPResponse::soap_del() deep deletes _tds__SetHostnameFromDHCPResponse data members, use only after _tds__SetHostnameFromDHCPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCPResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCPResponse or derived type identifier
class _tds__SetHostnameFromDHCPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// @note class _tds__GetDNS operations:
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*) allocate and default initialize
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNS* soap_new_req__tds__GetDNS(soap*, ...) allocate, set required members
/// - _tds__GetDNS* soap_new_set__tds__GetDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNS(soap*, _tds__GetDNS*) deserialize from a stream
/// - int soap_write__tds__GetDNS(soap*, _tds__GetDNS*) serialize to a stream
/// - _tds__GetDNS* _tds__GetDNS::soap_dup(soap*) returns deep copy of _tds__GetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNS::soap_del() deep deletes _tds__GetDNS data members, use only after _tds__GetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNS::soap_type() returns SOAP_TYPE__tds__GetDNS or derived type identifier
class _tds__GetDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// @note class _tds__GetDNSResponse operations:
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNSResponse* soap_new_req__tds__GetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDNSResponse* soap_new_set__tds__GetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) serialize to a stream
/// - _tds__GetDNSResponse* _tds__GetDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNSResponse::soap_del() deep deletes _tds__GetDNSResponse data members, use only after _tds__GetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDNSResponse or derived type identifier
class _tds__GetDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// @note class _tds__SetDNS operations:
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*) allocate and default initialize
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNS* soap_new_req__tds__SetDNS(soap*, ...) allocate, set required members
/// - _tds__SetDNS* soap_new_set__tds__SetDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNS(soap*, _tds__SetDNS*) deserialize from a stream
/// - int soap_write__tds__SetDNS(soap*, _tds__SetDNS*) serialize to a stream
/// - _tds__SetDNS* _tds__SetDNS::soap_dup(soap*) returns deep copy of _tds__SetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNS::soap_del() deep deletes _tds__SetDNS data members, use only after _tds__SetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNS::soap_type() returns SOAP_TYPE__tds__SetDNS or derived type identifier
class _tds__SetDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// @note class _tds__SetDNSResponse operations:
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNSResponse* soap_new_req__tds__SetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDNSResponse* soap_new_set__tds__SetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) serialize to a stream
/// - _tds__SetDNSResponse* _tds__SetDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNSResponse::soap_del() deep deletes _tds__SetDNSResponse data members, use only after _tds__SetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDNSResponse or derived type identifier
class _tds__SetDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// @note class _tds__GetNTP operations:
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*) allocate and default initialize
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTP* soap_new_req__tds__GetNTP(soap*, ...) allocate, set required members
/// - _tds__GetNTP* soap_new_set__tds__GetNTP(soap*, ...) allocate, set all public members
/// - _tds__GetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTP(soap*, _tds__GetNTP*) deserialize from a stream
/// - int soap_write__tds__GetNTP(soap*, _tds__GetNTP*) serialize to a stream
/// - _tds__GetNTP* _tds__GetNTP::soap_dup(soap*) returns deep copy of _tds__GetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTP::soap_del() deep deletes _tds__GetNTP data members, use only after _tds__GetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTP::soap_type() returns SOAP_TYPE__tds__GetNTP or derived type identifier
class _tds__GetNTP
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// @note class _tds__GetNTPResponse operations:
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*) allocate and default initialize
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTPResponse* soap_new_req__tds__GetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__GetNTPResponse* soap_new_set__tds__GetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) serialize to a stream
/// - _tds__GetNTPResponse* _tds__GetNTPResponse::soap_dup(soap*) returns deep copy of _tds__GetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTPResponse::soap_del() deep deletes _tds__GetNTPResponse data members, use only after _tds__GetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTPResponse::soap_type() returns SOAP_TYPE__tds__GetNTPResponse or derived type identifier
class _tds__GetNTPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// @note class _tds__SetNTP operations:
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*) allocate and default initialize
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTP* soap_new_req__tds__SetNTP(soap*, ...) allocate, set required members
/// - _tds__SetNTP* soap_new_set__tds__SetNTP(soap*, ...) allocate, set all public members
/// - _tds__SetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTP(soap*, _tds__SetNTP*) deserialize from a stream
/// - int soap_write__tds__SetNTP(soap*, _tds__SetNTP*) serialize to a stream
/// - _tds__SetNTP* _tds__SetNTP::soap_dup(soap*) returns deep copy of _tds__SetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTP::soap_del() deep deletes _tds__SetNTP data members, use only after _tds__SetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTP::soap_type() returns SOAP_TYPE__tds__SetNTP or derived type identifier
class _tds__SetNTP
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// @note class _tds__SetNTPResponse operations:
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(soap*) allocate and default initialize
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTPResponse* soap_new_req__tds__SetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__SetNTPResponse* soap_new_set__tds__SetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) serialize to a stream
/// - _tds__SetNTPResponse* _tds__SetNTPResponse::soap_dup(soap*) returns deep copy of _tds__SetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTPResponse::soap_del() deep deletes _tds__SetNTPResponse data members, use only after _tds__SetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTPResponse::soap_type() returns SOAP_TYPE__tds__SetNTPResponse or derived type identifier
class _tds__SetNTPResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// @note class _tds__GetDynamicDNS operations:
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*) allocate and default initialize
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNS* soap_new_req__tds__GetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNS* soap_new_set__tds__GetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) serialize to a stream
/// - _tds__GetDynamicDNS* _tds__GetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNS::soap_del() deep deletes _tds__GetDynamicDNS data members, use only after _tds__GetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNS::soap_type() returns SOAP_TYPE__tds__GetDynamicDNS or derived type identifier
class _tds__GetDynamicDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// @note class _tds__GetDynamicDNSResponse operations:
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNSResponse* soap_new_req__tds__GetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNSResponse* soap_new_set__tds__GetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) serialize to a stream
/// - _tds__GetDynamicDNSResponse* _tds__GetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNSResponse::soap_del() deep deletes _tds__GetDynamicDNSResponse data members, use only after _tds__GetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDynamicDNSResponse or derived type identifier
class _tds__GetDynamicDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// @note class _tds__SetDynamicDNS operations:
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*) allocate and default initialize
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNS* soap_new_req__tds__SetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNS* soap_new_set__tds__SetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) serialize to a stream
/// - _tds__SetDynamicDNS* _tds__SetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNS::soap_del() deep deletes _tds__SetDynamicDNS data members, use only after _tds__SetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNS::soap_type() returns SOAP_TYPE__tds__SetDynamicDNS or derived type identifier
class _tds__SetDynamicDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// @note class _tds__SetDynamicDNSResponse operations:
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNSResponse* soap_new_req__tds__SetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNSResponse* soap_new_set__tds__SetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) serialize to a stream
/// - _tds__SetDynamicDNSResponse* _tds__SetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNSResponse::soap_del() deep deletes _tds__SetDynamicDNSResponse data members, use only after _tds__SetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDynamicDNSResponse or derived type identifier
class _tds__SetDynamicDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// @note class _tds__GetNetworkInterfaces operations:
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfaces* soap_new_req__tds__GetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfaces* soap_new_set__tds__GetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) serialize to a stream
/// - _tds__GetNetworkInterfaces* _tds__GetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfaces::soap_del() deep deletes _tds__GetNetworkInterfaces data members, use only after _tds__GetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfaces or derived type identifier
class _tds__GetNetworkInterfaces
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__GetNetworkInterfacesResponse operations:
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfacesResponse* soap_new_req__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfacesResponse* soap_new_set__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__GetNetworkInterfacesResponse* _tds__GetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfacesResponse::soap_del() deep deletes _tds__GetNetworkInterfacesResponse data members, use only after _tds__GetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfacesResponse or derived type identifier
class _tds__GetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkInterface* of length 1..unbounded.
    std::vector<tt__NetworkInterface*  > NetworkInterfaces              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// @note class _tds__SetNetworkInterfaces operations:
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfaces* soap_new_req__tds__SetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfaces* soap_new_set__tds__SetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) serialize to a stream
/// - _tds__SetNetworkInterfaces* _tds__SetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfaces::soap_del() deep deletes _tds__SetNetworkInterfaces data members, use only after _tds__SetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfaces or derived type identifier
class _tds__SetNetworkInterfaces
{ public:
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__SetNetworkInterfacesResponse operations:
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfacesResponse* soap_new_req__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfacesResponse* soap_new_set__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__SetNetworkInterfacesResponse* _tds__SetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfacesResponse::soap_del() deep deletes _tds__SetNetworkInterfacesResponse data members, use only after _tds__SetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfacesResponse or derived type identifier
class _tds__SetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// @note class _tds__GetNetworkProtocols operations:
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocols* soap_new_req__tds__GetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocols* soap_new_set__tds__GetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) serialize to a stream
/// - _tds__GetNetworkProtocols* _tds__GetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocols::soap_del() deep deletes _tds__GetNetworkProtocols data members, use only after _tds__GetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocols or derived type identifier
class _tds__GetNetworkProtocols
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__GetNetworkProtocolsResponse operations:
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocolsResponse* soap_new_req__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocolsResponse* soap_new_set__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__GetNetworkProtocolsResponse* _tds__GetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocolsResponse::soap_del() deep deletes _tds__GetNetworkProtocolsResponse data members, use only after _tds__GetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocolsResponse or derived type identifier
class _tds__GetNetworkProtocolsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkProtocol* of length 0..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// @note class _tds__SetNetworkProtocols operations:
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocols* soap_new_req__tds__SetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocols* soap_new_set__tds__SetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) serialize to a stream
/// - _tds__SetNetworkProtocols* _tds__SetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocols::soap_del() deep deletes _tds__SetNetworkProtocols data members, use only after _tds__SetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocols or derived type identifier
class _tds__SetNetworkProtocols
{ public:
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkProtocol* of length 1..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__SetNetworkProtocolsResponse operations:
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocolsResponse* soap_new_req__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocolsResponse* soap_new_set__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__SetNetworkProtocolsResponse* _tds__SetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocolsResponse::soap_del() deep deletes _tds__SetNetworkProtocolsResponse data members, use only after _tds__SetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocolsResponse or derived type identifier
class _tds__SetNetworkProtocolsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__GetNetworkDefaultGateway operations:
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGateway* soap_new_req__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGateway* soap_new_set__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) serialize to a stream
/// - _tds__GetNetworkDefaultGateway* _tds__GetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGateway::soap_del() deep deletes _tds__GetNetworkDefaultGateway data members, use only after _tds__GetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGateway or derived type identifier
class _tds__GetNetworkDefaultGateway
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__GetNetworkDefaultGatewayResponse operations:
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_req__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_set__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__GetNetworkDefaultGatewayResponse* _tds__GetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__GetNetworkDefaultGatewayResponse data members, use only after _tds__GetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse or derived type identifier
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__SetNetworkDefaultGateway operations:
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGateway* soap_new_req__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGateway* soap_new_set__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) serialize to a stream
/// - _tds__SetNetworkDefaultGateway* _tds__SetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGateway::soap_del() deep deletes _tds__SetNetworkDefaultGateway data members, use only after _tds__SetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGateway or derived type identifier
class _tds__SetNetworkDefaultGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__SetNetworkDefaultGatewayResponse operations:
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_req__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_set__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__SetNetworkDefaultGatewayResponse* _tds__SetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__SetNetworkDefaultGatewayResponse data members, use only after _tds__SetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse or derived type identifier
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// @note class _tds__GetZeroConfiguration operations:
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfiguration* soap_new_req__tds__GetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfiguration* soap_new_set__tds__GetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) serialize to a stream
/// - _tds__GetZeroConfiguration* _tds__GetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__GetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfiguration::soap_del() deep deletes _tds__GetZeroConfiguration data members, use only after _tds__GetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__GetZeroConfiguration or derived type identifier
class _tds__GetZeroConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__GetZeroConfigurationResponse operations:
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfigurationResponse* soap_new_req__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfigurationResponse* soap_new_set__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) serialize to a stream
/// - _tds__GetZeroConfigurationResponse* _tds__GetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfigurationResponse::soap_del() deep deletes _tds__GetZeroConfigurationResponse data members, use only after _tds__GetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetZeroConfigurationResponse or derived type identifier
class _tds__GetZeroConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// @note class _tds__SetZeroConfiguration operations:
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfiguration* soap_new_req__tds__SetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfiguration* soap_new_set__tds__SetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) serialize to a stream
/// - _tds__SetZeroConfiguration* _tds__SetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__SetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfiguration::soap_del() deep deletes _tds__SetZeroConfiguration data members, use only after _tds__SetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__SetZeroConfiguration or derived type identifier
class _tds__SetZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__SetZeroConfigurationResponse operations:
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfigurationResponse* soap_new_req__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfigurationResponse* soap_new_set__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) serialize to a stream
/// - _tds__SetZeroConfigurationResponse* _tds__SetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfigurationResponse::soap_del() deep deletes _tds__SetZeroConfigurationResponse data members, use only after _tds__SetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetZeroConfigurationResponse or derived type identifier
class _tds__SetZeroConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// @note class _tds__GetIPAddressFilter operations:
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilter* soap_new_req__tds__GetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilter* soap_new_set__tds__GetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) serialize to a stream
/// - _tds__GetIPAddressFilter* _tds__GetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilter::soap_del() deep deletes _tds__GetIPAddressFilter data members, use only after _tds__GetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilter or derived type identifier
class _tds__GetIPAddressFilter
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__GetIPAddressFilterResponse operations:
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilterResponse* soap_new_req__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilterResponse* soap_new_set__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) serialize to a stream
/// - _tds__GetIPAddressFilterResponse* _tds__GetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilterResponse::soap_del() deep deletes _tds__GetIPAddressFilterResponse data members, use only after _tds__GetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilterResponse or derived type identifier
class _tds__GetIPAddressFilterResponse
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// @note class _tds__SetIPAddressFilter operations:
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilter* soap_new_req__tds__SetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilter* soap_new_set__tds__SetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) serialize to a stream
/// - _tds__SetIPAddressFilter* _tds__SetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilter::soap_del() deep deletes _tds__SetIPAddressFilter data members, use only after _tds__SetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilter or derived type identifier
class _tds__SetIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__SetIPAddressFilterResponse operations:
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilterResponse* soap_new_req__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilterResponse* soap_new_set__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) serialize to a stream
/// - _tds__SetIPAddressFilterResponse* _tds__SetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilterResponse::soap_del() deep deletes _tds__SetIPAddressFilterResponse data members, use only after _tds__SetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilterResponse or derived type identifier
class _tds__SetIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// @note class _tds__AddIPAddressFilter operations:
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilter* soap_new_req__tds__AddIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilter* soap_new_set__tds__AddIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) serialize to a stream
/// - _tds__AddIPAddressFilter* _tds__AddIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilter::soap_del() deep deletes _tds__AddIPAddressFilter data members, use only after _tds__AddIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilter::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilter or derived type identifier
class _tds__AddIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// @note class _tds__AddIPAddressFilterResponse operations:
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilterResponse* soap_new_req__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilterResponse* soap_new_set__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) serialize to a stream
/// - _tds__AddIPAddressFilterResponse* _tds__AddIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilterResponse::soap_del() deep deletes _tds__AddIPAddressFilterResponse data members, use only after _tds__AddIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilterResponse or derived type identifier
class _tds__AddIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// @note class _tds__RemoveIPAddressFilter operations:
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilter* soap_new_req__tds__RemoveIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilter* soap_new_set__tds__RemoveIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) serialize to a stream
/// - _tds__RemoveIPAddressFilter* _tds__RemoveIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilter::soap_del() deep deletes _tds__RemoveIPAddressFilter data members, use only after _tds__RemoveIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilter::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilter or derived type identifier
class _tds__RemoveIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// @note class _tds__RemoveIPAddressFilterResponse operations:
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilterResponse* soap_new_req__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilterResponse* soap_new_set__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) serialize to a stream
/// - _tds__RemoveIPAddressFilterResponse* _tds__RemoveIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilterResponse::soap_del() deep deletes _tds__RemoveIPAddressFilterResponse data members, use only after _tds__RemoveIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilterResponse or derived type identifier
class _tds__RemoveIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// @note class _tds__GetAccessPolicy operations:
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*) allocate and default initialize
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicy* soap_new_req__tds__GetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicy* soap_new_set__tds__GetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) serialize to a stream
/// - _tds__GetAccessPolicy* _tds__GetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicy::soap_del() deep deletes _tds__GetAccessPolicy data members, use only after _tds__GetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicy::soap_type() returns SOAP_TYPE__tds__GetAccessPolicy or derived type identifier
class _tds__GetAccessPolicy
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// @note class _tds__GetAccessPolicyResponse operations:
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicyResponse* soap_new_req__tds__GetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicyResponse* soap_new_set__tds__GetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) serialize to a stream
/// - _tds__GetAccessPolicyResponse* _tds__GetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicyResponse::soap_del() deep deletes _tds__GetAccessPolicyResponse data members, use only after _tds__GetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__GetAccessPolicyResponse or derived type identifier
class _tds__GetAccessPolicyResponse
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// @note class _tds__SetAccessPolicy operations:
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*) allocate and default initialize
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicy* soap_new_req__tds__SetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicy* soap_new_set__tds__SetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) serialize to a stream
/// - _tds__SetAccessPolicy* _tds__SetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicy::soap_del() deep deletes _tds__SetAccessPolicy data members, use only after _tds__SetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicy::soap_type() returns SOAP_TYPE__tds__SetAccessPolicy or derived type identifier
class _tds__SetAccessPolicy
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// @note class _tds__SetAccessPolicyResponse operations:
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicyResponse* soap_new_req__tds__SetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicyResponse* soap_new_set__tds__SetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) serialize to a stream
/// - _tds__SetAccessPolicyResponse* _tds__SetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicyResponse::soap_del() deep deletes _tds__SetAccessPolicyResponse data members, use only after _tds__SetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__SetAccessPolicyResponse or derived type identifier
class _tds__SetAccessPolicyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// @note class _tds__CreateCertificate operations:
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*) allocate and default initialize
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificate* soap_new_req__tds__CreateCertificate(soap*, ...) allocate, set required members
/// - _tds__CreateCertificate* soap_new_set__tds__CreateCertificate(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificate::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificate(soap*, _tds__CreateCertificate*) deserialize from a stream
/// - int soap_write__tds__CreateCertificate(soap*, _tds__CreateCertificate*) serialize to a stream
/// - _tds__CreateCertificate* _tds__CreateCertificate::soap_dup(soap*) returns deep copy of _tds__CreateCertificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificate::soap_del() deep deletes _tds__CreateCertificate data members, use only after _tds__CreateCertificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificate::soap_type() returns SOAP_TYPE__tds__CreateCertificate or derived type identifier
class _tds__CreateCertificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// @note class _tds__CreateCertificateResponse operations:
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*) allocate and default initialize
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificateResponse* soap_new_req__tds__CreateCertificateResponse(soap*, ...) allocate, set required members
/// - _tds__CreateCertificateResponse* soap_new_set__tds__CreateCertificateResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) deserialize from a stream
/// - int soap_write__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) serialize to a stream
/// - _tds__CreateCertificateResponse* _tds__CreateCertificateResponse::soap_dup(soap*) returns deep copy of _tds__CreateCertificateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificateResponse::soap_del() deep deletes _tds__CreateCertificateResponse data members, use only after _tds__CreateCertificateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificateResponse::soap_type() returns SOAP_TYPE__tds__CreateCertificateResponse or derived type identifier
class _tds__CreateCertificateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// @note class _tds__GetCertificates operations:
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*) allocate and default initialize
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificates* soap_new_req__tds__GetCertificates(soap*, ...) allocate, set required members
/// - _tds__GetCertificates* soap_new_set__tds__GetCertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificates(soap*, _tds__GetCertificates*) deserialize from a stream
/// - int soap_write__tds__GetCertificates(soap*, _tds__GetCertificates*) serialize to a stream
/// - _tds__GetCertificates* _tds__GetCertificates::soap_dup(soap*) returns deep copy of _tds__GetCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificates::soap_del() deep deletes _tds__GetCertificates data members, use only after _tds__GetCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificates::soap_type() returns SOAP_TYPE__tds__GetCertificates or derived type identifier
class _tds__GetCertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// @note class _tds__GetCertificatesResponse operations:
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesResponse* soap_new_req__tds__GetCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesResponse* soap_new_set__tds__GetCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) serialize to a stream
/// - _tds__GetCertificatesResponse* _tds__GetCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesResponse::soap_del() deep deletes _tds__GetCertificatesResponse data members, use only after _tds__GetCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesResponse or derived type identifier
class _tds__GetCertificatesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > NvtCertificate                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// @note class _tds__GetCertificatesStatus operations:
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatus* soap_new_req__tds__GetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatus* soap_new_set__tds__GetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) serialize to a stream
/// - _tds__GetCertificatesStatus* _tds__GetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatus::soap_del() deep deletes _tds__GetCertificatesStatus data members, use only after _tds__GetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatus or derived type identifier
class _tds__GetCertificatesStatus
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__GetCertificatesStatusResponse operations:
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatusResponse* soap_new_req__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatusResponse* soap_new_set__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) serialize to a stream
/// - _tds__GetCertificatesStatusResponse* _tds__GetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatusResponse::soap_del() deep deletes _tds__GetCertificatesStatusResponse data members, use only after _tds__GetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatusResponse or derived type identifier
class _tds__GetCertificatesStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// @note class _tds__SetCertificatesStatus operations:
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatus* soap_new_req__tds__SetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatus* soap_new_set__tds__SetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) serialize to a stream
/// - _tds__SetCertificatesStatus* _tds__SetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatus::soap_del() deep deletes _tds__SetCertificatesStatus data members, use only after _tds__SetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatus or derived type identifier
class _tds__SetCertificatesStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__SetCertificatesStatusResponse operations:
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatusResponse* soap_new_req__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatusResponse* soap_new_set__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) serialize to a stream
/// - _tds__SetCertificatesStatusResponse* _tds__SetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatusResponse::soap_del() deep deletes _tds__SetCertificatesStatusResponse data members, use only after _tds__SetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatusResponse or derived type identifier
class _tds__SetCertificatesStatusResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// @note class _tds__DeleteCertificates operations:
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*) allocate and default initialize
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificates* soap_new_req__tds__DeleteCertificates(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificates* soap_new_set__tds__DeleteCertificates(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) serialize to a stream
/// - _tds__DeleteCertificates* _tds__DeleteCertificates::soap_dup(soap*) returns deep copy of _tds__DeleteCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificates::soap_del() deep deletes _tds__DeleteCertificates data members, use only after _tds__DeleteCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificates::soap_type() returns SOAP_TYPE__tds__DeleteCertificates or derived type identifier
class _tds__DeleteCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 1..unbounded.
    std::vector<xsd__token             > CertificateID                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// @note class _tds__DeleteCertificatesResponse operations:
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*) allocate and default initialize
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificatesResponse* soap_new_req__tds__DeleteCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificatesResponse* soap_new_set__tds__DeleteCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) serialize to a stream
/// - _tds__DeleteCertificatesResponse* _tds__DeleteCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__DeleteCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificatesResponse::soap_del() deep deletes _tds__DeleteCertificatesResponse data members, use only after _tds__DeleteCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificatesResponse::soap_type() returns SOAP_TYPE__tds__DeleteCertificatesResponse or derived type identifier
class _tds__DeleteCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// @note class _tds__GetPkcs10Request operations:
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*) allocate and default initialize
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10Request* soap_new_req__tds__GetPkcs10Request(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10Request* soap_new_set__tds__GetPkcs10Request(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10Request::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) serialize to a stream
/// - _tds__GetPkcs10Request* _tds__GetPkcs10Request::soap_dup(soap*) returns deep copy of _tds__GetPkcs10Request, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10Request::soap_del() deep deletes _tds__GetPkcs10Request data members, use only after _tds__GetPkcs10Request::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10Request::soap_type() returns SOAP_TYPE__tds__GetPkcs10Request or derived type identifier
class _tds__GetPkcs10Request
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// @note class _tds__GetPkcs10RequestResponse operations:
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*) allocate and default initialize
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10RequestResponse* soap_new_req__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10RequestResponse* soap_new_set__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10RequestResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) serialize to a stream
/// - _tds__GetPkcs10RequestResponse* _tds__GetPkcs10RequestResponse::soap_dup(soap*) returns deep copy of _tds__GetPkcs10RequestResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10RequestResponse::soap_del() deep deletes _tds__GetPkcs10RequestResponse data members, use only after _tds__GetPkcs10RequestResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10RequestResponse::soap_type() returns SOAP_TYPE__tds__GetPkcs10RequestResponse or derived type identifier
class _tds__GetPkcs10RequestResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// @note class _tds__LoadCertificates operations:
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*) allocate and default initialize
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificates* soap_new_req__tds__LoadCertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCertificates* soap_new_set__tds__LoadCertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificates(soap*, _tds__LoadCertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCertificates(soap*, _tds__LoadCertificates*) serialize to a stream
/// - _tds__LoadCertificates* _tds__LoadCertificates::soap_dup(soap*) returns deep copy of _tds__LoadCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificates::soap_del() deep deletes _tds__LoadCertificates data members, use only after _tds__LoadCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificates::soap_type() returns SOAP_TYPE__tds__LoadCertificates or derived type identifier
class _tds__LoadCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > NVTCertificate                 1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// @note class _tds__LoadCertificatesResponse operations:
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificatesResponse* soap_new_req__tds__LoadCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificatesResponse* soap_new_set__tds__LoadCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) serialize to a stream
/// - _tds__LoadCertificatesResponse* _tds__LoadCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificatesResponse::soap_del() deep deletes _tds__LoadCertificatesResponse data members, use only after _tds__LoadCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificatesResponse or derived type identifier
class _tds__LoadCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// @note class _tds__GetClientCertificateMode operations:
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateMode* soap_new_req__tds__GetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateMode* soap_new_set__tds__GetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) serialize to a stream
/// - _tds__GetClientCertificateMode* _tds__GetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateMode::soap_del() deep deletes _tds__GetClientCertificateMode data members, use only after _tds__GetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__GetClientCertificateMode or derived type identifier
class _tds__GetClientCertificateMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__GetClientCertificateModeResponse operations:
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateModeResponse* soap_new_req__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateModeResponse* soap_new_set__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) serialize to a stream
/// - _tds__GetClientCertificateModeResponse* _tds__GetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateModeResponse::soap_del() deep deletes _tds__GetClientCertificateModeResponse data members, use only after _tds__GetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__GetClientCertificateModeResponse or derived type identifier
class _tds__GetClientCertificateModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// @note class _tds__SetClientCertificateMode operations:
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateMode* soap_new_req__tds__SetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateMode* soap_new_set__tds__SetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) serialize to a stream
/// - _tds__SetClientCertificateMode* _tds__SetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateMode::soap_del() deep deletes _tds__SetClientCertificateMode data members, use only after _tds__SetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__SetClientCertificateMode or derived type identifier
class _tds__SetClientCertificateMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__SetClientCertificateModeResponse operations:
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateModeResponse* soap_new_req__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateModeResponse* soap_new_set__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) serialize to a stream
/// - _tds__SetClientCertificateModeResponse* _tds__SetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateModeResponse::soap_del() deep deletes _tds__SetClientCertificateModeResponse data members, use only after _tds__SetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__SetClientCertificateModeResponse or derived type identifier
class _tds__SetClientCertificateModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// @note class _tds__GetCACertificates operations:
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*) allocate and default initialize
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificates* soap_new_req__tds__GetCACertificates(soap*, ...) allocate, set required members
/// - _tds__GetCACertificates* soap_new_set__tds__GetCACertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificates(soap*, _tds__GetCACertificates*) deserialize from a stream
/// - int soap_write__tds__GetCACertificates(soap*, _tds__GetCACertificates*) serialize to a stream
/// - _tds__GetCACertificates* _tds__GetCACertificates::soap_dup(soap*) returns deep copy of _tds__GetCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificates::soap_del() deep deletes _tds__GetCACertificates data members, use only after _tds__GetCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificates::soap_type() returns SOAP_TYPE__tds__GetCACertificates or derived type identifier
class _tds__GetCACertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// @note class _tds__GetCACertificatesResponse operations:
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificatesResponse* soap_new_req__tds__GetCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCACertificatesResponse* soap_new_set__tds__GetCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) serialize to a stream
/// - _tds__GetCACertificatesResponse* _tds__GetCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificatesResponse::soap_del() deep deletes _tds__GetCACertificatesResponse data members, use only after _tds__GetCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCACertificatesResponse or derived type identifier
class _tds__GetCACertificatesResponse
{ public:
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKey operations:
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKey* soap_new_req__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKey* soap_new_set__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKey::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKey* _tds__LoadCertificateWithPrivateKey::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKey, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKey::soap_del() deep deletes _tds__LoadCertificateWithPrivateKey data members, use only after _tds__LoadCertificateWithPrivateKey::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKey::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKey or derived type identifier
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Vector of tt__CertificateWithPrivateKey* of length 1..unbounded.
    std::vector<tt__CertificateWithPrivateKey*> CertificateWithPrivateKey      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKeyResponse* _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKeyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_del() deep deletes _tds__LoadCertificateWithPrivateKeyResponse data members, use only after _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKeyResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse or derived type identifier
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// @note class _tds__GetCertificateInformation operations:
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*) allocate and default initialize
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformation* soap_new_req__tds__GetCertificateInformation(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformation* soap_new_set__tds__GetCertificateInformation(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) serialize to a stream
/// - _tds__GetCertificateInformation* _tds__GetCertificateInformation::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformation::soap_del() deep deletes _tds__GetCertificateInformation data members, use only after _tds__GetCertificateInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformation::soap_type() returns SOAP_TYPE__tds__GetCertificateInformation or derived type identifier
class _tds__GetCertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// @note class _tds__GetCertificateInformationResponse operations:
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*) allocate and default initialize
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformationResponse* soap_new_req__tds__GetCertificateInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformationResponse* soap_new_set__tds__GetCertificateInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) serialize to a stream
/// - _tds__GetCertificateInformationResponse* _tds__GetCertificateInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformationResponse::soap_del() deep deletes _tds__GetCertificateInformationResponse data members, use only after _tds__GetCertificateInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformationResponse::soap_type() returns SOAP_TYPE__tds__GetCertificateInformationResponse or derived type identifier
class _tds__GetCertificateInformationResponse
{ public:
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// @note class _tds__LoadCACertificates operations:
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*) allocate and default initialize
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificates* soap_new_req__tds__LoadCACertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificates* soap_new_set__tds__LoadCACertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) serialize to a stream
/// - _tds__LoadCACertificates* _tds__LoadCACertificates::soap_dup(soap*) returns deep copy of _tds__LoadCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificates::soap_del() deep deletes _tds__LoadCACertificates data members, use only after _tds__LoadCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificates::soap_type() returns SOAP_TYPE__tds__LoadCACertificates or derived type identifier
class _tds__LoadCACertificates
{ public:
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// @note class _tds__LoadCACertificatesResponse operations:
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificatesResponse* soap_new_req__tds__LoadCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificatesResponse* soap_new_set__tds__LoadCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) serialize to a stream
/// - _tds__LoadCACertificatesResponse* _tds__LoadCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificatesResponse::soap_del() deep deletes _tds__LoadCACertificatesResponse data members, use only after _tds__LoadCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCACertificatesResponse or derived type identifier
class _tds__LoadCACertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// @note class _tds__CreateDot1XConfiguration operations:
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfiguration* soap_new_req__tds__CreateDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfiguration* soap_new_set__tds__CreateDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) serialize to a stream
/// - _tds__CreateDot1XConfiguration* _tds__CreateDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfiguration::soap_del() deep deletes _tds__CreateDot1XConfiguration data members, use only after _tds__CreateDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfiguration or derived type identifier
class _tds__CreateDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__CreateDot1XConfigurationResponse operations:
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfigurationResponse* soap_new_req__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfigurationResponse* soap_new_set__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) serialize to a stream
/// - _tds__CreateDot1XConfigurationResponse* _tds__CreateDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfigurationResponse::soap_del() deep deletes _tds__CreateDot1XConfigurationResponse data members, use only after _tds__CreateDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfigurationResponse or derived type identifier
class _tds__CreateDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// @note class _tds__SetDot1XConfiguration operations:
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfiguration* soap_new_req__tds__SetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfiguration* soap_new_set__tds__SetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) serialize to a stream
/// - _tds__SetDot1XConfiguration* _tds__SetDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfiguration::soap_del() deep deletes _tds__SetDot1XConfiguration data members, use only after _tds__SetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__SetDot1XConfiguration or derived type identifier
class _tds__SetDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__SetDot1XConfigurationResponse operations:
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfigurationResponse* soap_new_req__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfigurationResponse* soap_new_set__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__SetDot1XConfigurationResponse* _tds__SetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfigurationResponse::soap_del() deep deletes _tds__SetDot1XConfigurationResponse data members, use only after _tds__SetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetDot1XConfigurationResponse or derived type identifier
class _tds__SetDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// @note class _tds__GetDot1XConfiguration operations:
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfiguration* soap_new_req__tds__GetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfiguration* soap_new_set__tds__GetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) serialize to a stream
/// - _tds__GetDot1XConfiguration* _tds__GetDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfiguration::soap_del() deep deletes _tds__GetDot1XConfiguration data members, use only after _tds__GetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__GetDot1XConfiguration or derived type identifier
class _tds__GetDot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationResponse operations:
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationResponse* soap_new_req__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationResponse* soap_new_set__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationResponse* _tds__GetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationResponse::soap_del() deep deletes _tds__GetDot1XConfigurationResponse data members, use only after _tds__GetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationResponse or derived type identifier
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// @note class _tds__GetDot1XConfigurations operations:
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurations* soap_new_req__tds__GetDot1XConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurations* soap_new_set__tds__GetDot1XConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) serialize to a stream
/// - _tds__GetDot1XConfigurations* _tds__GetDot1XConfigurations::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurations::soap_del() deep deletes _tds__GetDot1XConfigurations data members, use only after _tds__GetDot1XConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurations::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurations or derived type identifier
class _tds__GetDot1XConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationsResponse operations:
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationsResponse* soap_new_req__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationsResponse* soap_new_set__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationsResponse* _tds__GetDot1XConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationsResponse::soap_del() deep deletes _tds__GetDot1XConfigurationsResponse data members, use only after _tds__GetDot1XConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationsResponse or derived type identifier
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Vector of tt__Dot1XConfiguration* of length 0..unbounded.
    std::vector<tt__Dot1XConfiguration*> Dot1XConfiguration             0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// @note class _tds__DeleteDot1XConfiguration operations:
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfiguration* soap_new_req__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfiguration* soap_new_set__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) serialize to a stream
/// - _tds__DeleteDot1XConfiguration* _tds__DeleteDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfiguration::soap_del() deep deletes _tds__DeleteDot1XConfiguration data members, use only after _tds__DeleteDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfiguration or derived type identifier
class _tds__DeleteDot1XConfiguration
{ public:
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > Dot1XConfigurationToken        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteDot1XConfigurationResponse operations:
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_req__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_set__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) serialize to a stream
/// - _tds__DeleteDot1XConfigurationResponse* _tds__DeleteDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfigurationResponse::soap_del() deep deletes _tds__DeleteDot1XConfigurationResponse data members, use only after _tds__DeleteDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfigurationResponse or derived type identifier
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// @note class _tds__GetRelayOutputs operations:
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*) allocate and default initialize
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputs* soap_new_req__tds__GetRelayOutputs(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputs* soap_new_set__tds__GetRelayOutputs(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputs::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) serialize to a stream
/// - _tds__GetRelayOutputs* _tds__GetRelayOutputs::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputs::soap_del() deep deletes _tds__GetRelayOutputs data members, use only after _tds__GetRelayOutputs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputs::soap_type() returns SOAP_TYPE__tds__GetRelayOutputs or derived type identifier
class _tds__GetRelayOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// @note class _tds__GetRelayOutputsResponse operations:
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*) allocate and default initialize
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputsResponse* soap_new_req__tds__GetRelayOutputsResponse(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputsResponse* soap_new_set__tds__GetRelayOutputsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) serialize to a stream
/// - _tds__GetRelayOutputsResponse* _tds__GetRelayOutputsResponse::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputsResponse::soap_del() deep deletes _tds__GetRelayOutputsResponse data members, use only after _tds__GetRelayOutputsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputsResponse::soap_type() returns SOAP_TYPE__tds__GetRelayOutputsResponse or derived type identifier
class _tds__GetRelayOutputsResponse
{ public:
/// Vector of tt__RelayOutput* of length 0..unbounded.
    std::vector<tt__RelayOutput*       > RelayOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note class _tds__SetRelayOutputSettings operations:
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettings* soap_new_req__tds__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettings* soap_new_set__tds__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettings::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) serialize to a stream
/// - _tds__SetRelayOutputSettings* _tds__SetRelayOutputSettings::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettings::soap_del() deep deletes _tds__SetRelayOutputSettings data members, use only after _tds__SetRelayOutputSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettings::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettings or derived type identifier
class _tds__SetRelayOutputSettings
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note class _tds__SetRelayOutputSettingsResponse operations:
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettingsResponse* soap_new_req__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettingsResponse* soap_new_set__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettingsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) serialize to a stream
/// - _tds__SetRelayOutputSettingsResponse* _tds__SetRelayOutputSettingsResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettingsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettingsResponse::soap_del() deep deletes _tds__SetRelayOutputSettingsResponse data members, use only after _tds__SetRelayOutputSettingsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettingsResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettingsResponse or derived type identifier
class _tds__SetRelayOutputSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// @note class _tds__SetRelayOutputState operations:
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*) allocate and default initialize
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputState* soap_new_req__tds__SetRelayOutputState(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputState* soap_new_set__tds__SetRelayOutputState(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputState::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) serialize to a stream
/// - _tds__SetRelayOutputState* _tds__SetRelayOutputState::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputState, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputState::soap_del() deep deletes _tds__SetRelayOutputState data members, use only after _tds__SetRelayOutputState::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputState::soap_type() returns SOAP_TYPE__tds__SetRelayOutputState or derived type identifier
class _tds__SetRelayOutputState
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// @note class _tds__SetRelayOutputStateResponse operations:
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputStateResponse* soap_new_req__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputStateResponse* soap_new_set__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputStateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) serialize to a stream
/// - _tds__SetRelayOutputStateResponse* _tds__SetRelayOutputStateResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputStateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputStateResponse::soap_del() deep deletes _tds__SetRelayOutputStateResponse data members, use only after _tds__SetRelayOutputStateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputStateResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputStateResponse or derived type identifier
class _tds__SetRelayOutputStateResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tds__SendAuxiliaryCommand operations:
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommand* soap_new_req__tds__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommand* soap_new_set__tds__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) serialize to a stream
/// - _tds__SendAuxiliaryCommand* _tds__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommand::soap_del() deep deletes _tds__SendAuxiliaryCommand data members, use only after _tds__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommand or derived type identifier
class _tds__SendAuxiliaryCommand
{ public:
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tds__SendAuxiliaryCommandResponse operations:
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommandResponse* soap_new_req__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommandResponse* soap_new_set__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tds__SendAuxiliaryCommandResponse* _tds__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommandResponse::soap_del() deep deletes _tds__SendAuxiliaryCommandResponse data members, use only after _tds__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommandResponse or derived type identifier
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData*                   AuxiliaryCommandResponse       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// @note class _tds__GetDot11Capabilities operations:
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*) allocate and default initialize
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Capabilities* soap_new_req__tds__GetDot11Capabilities(soap*, ...) allocate, set required members
/// - _tds__GetDot11Capabilities* soap_new_set__tds__GetDot11Capabilities(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Capabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) deserialize from a stream
/// - int soap_write__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) serialize to a stream
/// - _tds__GetDot11Capabilities* _tds__GetDot11Capabilities::soap_dup(soap*) returns deep copy of _tds__GetDot11Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Capabilities::soap_del() deep deletes _tds__GetDot11Capabilities data members, use only after _tds__GetDot11Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Capabilities::soap_type() returns SOAP_TYPE__tds__GetDot11Capabilities or derived type identifier
class _tds__GetDot11Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// @note class _tds__GetDot11CapabilitiesResponse operations:
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11CapabilitiesResponse* soap_new_req__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11CapabilitiesResponse* soap_new_set__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11CapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) serialize to a stream
/// - _tds__GetDot11CapabilitiesResponse* _tds__GetDot11CapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11CapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11CapabilitiesResponse::soap_del() deep deletes _tds__GetDot11CapabilitiesResponse data members, use only after _tds__GetDot11CapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11CapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetDot11CapabilitiesResponse or derived type identifier
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// @note class _tds__GetDot11Status operations:
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*) allocate and default initialize
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Status* soap_new_req__tds__GetDot11Status(soap*, ...) allocate, set required members
/// - _tds__GetDot11Status* soap_new_set__tds__GetDot11Status(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Status::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Status(soap*, _tds__GetDot11Status*) deserialize from a stream
/// - int soap_write__tds__GetDot11Status(soap*, _tds__GetDot11Status*) serialize to a stream
/// - _tds__GetDot11Status* _tds__GetDot11Status::soap_dup(soap*) returns deep copy of _tds__GetDot11Status, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Status::soap_del() deep deletes _tds__GetDot11Status data members, use only after _tds__GetDot11Status::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Status::soap_type() returns SOAP_TYPE__tds__GetDot11Status or derived type identifier
class _tds__GetDot11Status
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// @note class _tds__GetDot11StatusResponse operations:
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*) allocate and default initialize
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11StatusResponse* soap_new_req__tds__GetDot11StatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11StatusResponse* soap_new_set__tds__GetDot11StatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11StatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) serialize to a stream
/// - _tds__GetDot11StatusResponse* _tds__GetDot11StatusResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11StatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11StatusResponse::soap_del() deep deletes _tds__GetDot11StatusResponse data members, use only after _tds__GetDot11StatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11StatusResponse::soap_type() returns SOAP_TYPE__tds__GetDot11StatusResponse or derived type identifier
class _tds__GetDot11StatusResponse
{ public:
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// @note class _tds__ScanAvailableDot11Networks operations:
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11Networks* soap_new_req__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11Networks* soap_new_set__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11Networks::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) serialize to a stream
/// - _tds__ScanAvailableDot11Networks* _tds__ScanAvailableDot11Networks::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11Networks, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11Networks::soap_del() deep deletes _tds__ScanAvailableDot11Networks data members, use only after _tds__ScanAvailableDot11Networks::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11Networks::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11Networks or derived type identifier
class _tds__ScanAvailableDot11Networks
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// @note class _tds__ScanAvailableDot11NetworksResponse operations:
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_req__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_set__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11NetworksResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) serialize to a stream
/// - _tds__ScanAvailableDot11NetworksResponse* _tds__ScanAvailableDot11NetworksResponse::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11NetworksResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11NetworksResponse::soap_del() deep deletes _tds__ScanAvailableDot11NetworksResponse data members, use only after _tds__ScanAvailableDot11NetworksResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11NetworksResponse::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse or derived type identifier
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Vector of tt__Dot11AvailableNetworks* of length 0..unbounded.
    std::vector<tt__Dot11AvailableNetworks*> Networks                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// @note class _tds__GetSystemUris operations:
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*) allocate and default initialize
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUris* soap_new_req__tds__GetSystemUris(soap*, ...) allocate, set required members
/// - _tds__GetSystemUris* soap_new_set__tds__GetSystemUris(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUris::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUris(soap*, _tds__GetSystemUris*) deserialize from a stream
/// - int soap_write__tds__GetSystemUris(soap*, _tds__GetSystemUris*) serialize to a stream
/// - _tds__GetSystemUris* _tds__GetSystemUris::soap_dup(soap*) returns deep copy of _tds__GetSystemUris, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUris::soap_del() deep deletes _tds__GetSystemUris data members, use only after _tds__GetSystemUris::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUris::soap_type() returns SOAP_TYPE__tds__GetSystemUris or derived type identifier
class _tds__GetSystemUris
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// @note class _tds__GetSystemUrisResponse operations:
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse* soap_new_req__tds__GetSystemUrisResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse* soap_new_set__tds__GetSystemUrisResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) serialize to a stream
/// - _tds__GetSystemUrisResponse* _tds__GetSystemUrisResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse::soap_del() deep deletes _tds__GetSystemUrisResponse data members, use only after _tds__GetSystemUrisResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse or derived type identifier
class _tds__GetSystemUrisResponse
{ public:
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI*                         SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI*                         SystemBackupUri                0;	///< Optional element.
/// @note class _tds__GetSystemUrisResponse_Extension operations:
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse_Extension* soap_new_req__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse_Extension* soap_new_set__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) serialize to a stream
/// - _tds__GetSystemUrisResponse_Extension* _tds__GetSystemUrisResponse_Extension::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse_Extension::soap_del() deep deletes _tds__GetSystemUrisResponse_Extension data members, use only after _tds__GetSystemUrisResponse_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse_Extension::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse_Extension or derived type identifier
    class _tds__GetSystemUrisResponse_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// @note class _tds__StartFirmwareUpgrade operations:
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgrade* soap_new_req__tds__StartFirmwareUpgrade(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgrade* soap_new_set__tds__StartFirmwareUpgrade(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgrade::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) serialize to a stream
/// - _tds__StartFirmwareUpgrade* _tds__StartFirmwareUpgrade::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgrade, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgrade::soap_del() deep deletes _tds__StartFirmwareUpgrade data members, use only after _tds__StartFirmwareUpgrade::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgrade::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgrade or derived type identifier
class _tds__StartFirmwareUpgrade
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// @note class _tds__StartFirmwareUpgradeResponse operations:
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgradeResponse* soap_new_req__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgradeResponse* soap_new_set__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgradeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) serialize to a stream
/// - _tds__StartFirmwareUpgradeResponse* _tds__StartFirmwareUpgradeResponse::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgradeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgradeResponse::soap_del() deep deletes _tds__StartFirmwareUpgradeResponse data members, use only after _tds__StartFirmwareUpgradeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgradeResponse::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgradeResponse or derived type identifier
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// @note class _tds__StartSystemRestore operations:
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*) allocate and default initialize
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestore* soap_new_req__tds__StartSystemRestore(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestore* soap_new_set__tds__StartSystemRestore(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestore::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) serialize to a stream
/// - _tds__StartSystemRestore* _tds__StartSystemRestore::soap_dup(soap*) returns deep copy of _tds__StartSystemRestore, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestore::soap_del() deep deletes _tds__StartSystemRestore data members, use only after _tds__StartSystemRestore::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestore::soap_type() returns SOAP_TYPE__tds__StartSystemRestore or derived type identifier
class _tds__StartSystemRestore
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// @note class _tds__StartSystemRestoreResponse operations:
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*) allocate and default initialize
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestoreResponse* soap_new_req__tds__StartSystemRestoreResponse(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestoreResponse* soap_new_set__tds__StartSystemRestoreResponse(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestoreResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) serialize to a stream
/// - _tds__StartSystemRestoreResponse* _tds__StartSystemRestoreResponse::soap_dup(soap*) returns deep copy of _tds__StartSystemRestoreResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestoreResponse::soap_del() deep deletes _tds__StartSystemRestoreResponse data members, use only after _tds__StartSystemRestoreResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestoreResponse::soap_type() returns SOAP_TYPE__tds__StartSystemRestoreResponse or derived type identifier
class _tds__StartSystemRestoreResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHashingAlgorithm
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHashingAlgorithm is a complexType.
///
/// @note class _tds__SetHashingAlgorithm operations:
/// - _tds__SetHashingAlgorithm* soap_new__tds__SetHashingAlgorithm(soap*) allocate and default initialize
/// - _tds__SetHashingAlgorithm* soap_new__tds__SetHashingAlgorithm(soap*, int num) allocate and default initialize an array
/// - _tds__SetHashingAlgorithm* soap_new_req__tds__SetHashingAlgorithm(soap*, ...) allocate, set required members
/// - _tds__SetHashingAlgorithm* soap_new_set__tds__SetHashingAlgorithm(soap*, ...) allocate, set all public members
/// - _tds__SetHashingAlgorithm::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHashingAlgorithm(soap*, _tds__SetHashingAlgorithm*) deserialize from a stream
/// - int soap_write__tds__SetHashingAlgorithm(soap*, _tds__SetHashingAlgorithm*) serialize to a stream
/// - _tds__SetHashingAlgorithm* _tds__SetHashingAlgorithm::soap_dup(soap*) returns deep copy of _tds__SetHashingAlgorithm, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHashingAlgorithm::soap_del() deep deletes _tds__SetHashingAlgorithm data members, use only after _tds__SetHashingAlgorithm::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHashingAlgorithm::soap_type() returns SOAP_TYPE__tds__SetHashingAlgorithm or derived type identifier
class _tds__SetHashingAlgorithm
{ public:
/// <PRE><BLOCKQUOTE>
///   Hashing algorithm(s) used in HTTP and RTSP Digest Authentication.
/// </BLOCKQUOTE></PRE>
///
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":StringList.
    tt__StringList                       Algorithm                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHashingAlgorithmResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHashingAlgorithmResponse is a complexType.
///
/// @note class _tds__SetHashingAlgorithmResponse operations:
/// - _tds__SetHashingAlgorithmResponse* soap_new__tds__SetHashingAlgorithmResponse(soap*) allocate and default initialize
/// - _tds__SetHashingAlgorithmResponse* soap_new__tds__SetHashingAlgorithmResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHashingAlgorithmResponse* soap_new_req__tds__SetHashingAlgorithmResponse(soap*, ...) allocate, set required members
/// - _tds__SetHashingAlgorithmResponse* soap_new_set__tds__SetHashingAlgorithmResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHashingAlgorithmResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHashingAlgorithmResponse(soap*, _tds__SetHashingAlgorithmResponse*) deserialize from a stream
/// - int soap_write__tds__SetHashingAlgorithmResponse(soap*, _tds__SetHashingAlgorithmResponse*) serialize to a stream
/// - _tds__SetHashingAlgorithmResponse* _tds__SetHashingAlgorithmResponse::soap_dup(soap*) returns deep copy of _tds__SetHashingAlgorithmResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHashingAlgorithmResponse::soap_del() deep deletes _tds__SetHashingAlgorithmResponse data members, use only after _tds__SetHashingAlgorithmResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHashingAlgorithmResponse::soap_type() returns SOAP_TYPE__tds__SetHashingAlgorithmResponse or derived type identifier
class _tds__SetHashingAlgorithmResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
/// @note class _tds__GetStorageConfigurations operations:
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurations* soap_new_req__tds__GetStorageConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurations* soap_new_set__tds__GetStorageConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) serialize to a stream
/// - _tds__GetStorageConfigurations* _tds__GetStorageConfigurations::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurations::soap_del() deep deletes _tds__GetStorageConfigurations data members, use only after _tds__GetStorageConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurations::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurations or derived type identifier
class _tds__GetStorageConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationsResponse operations:
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationsResponse* soap_new_req__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationsResponse* soap_new_set__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationsResponse* _tds__GetStorageConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationsResponse::soap_del() deep deletes _tds__GetStorageConfigurationsResponse data members, use only after _tds__GetStorageConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationsResponse or derived type identifier
class _tds__GetStorageConfigurationsResponse
{ public:
/// Vector of tds__StorageConfiguration* of length 0..unbounded.
    std::vector<tds__StorageConfiguration*> StorageConfigurations          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
/// @note class _tds__CreateStorageConfiguration operations:
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*) allocate and default initialize
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfiguration* soap_new_req__tds__CreateStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfiguration* soap_new_set__tds__CreateStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) serialize to a stream
/// - _tds__CreateStorageConfiguration* _tds__CreateStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfiguration::soap_del() deep deletes _tds__CreateStorageConfiguration data members, use only after _tds__CreateStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfiguration::soap_type() returns SOAP_TYPE__tds__CreateStorageConfiguration or derived type identifier
class _tds__CreateStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
/// @note class _tds__CreateStorageConfigurationResponse operations:
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfigurationResponse* soap_new_req__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfigurationResponse* soap_new_set__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) serialize to a stream
/// - _tds__CreateStorageConfigurationResponse* _tds__CreateStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfigurationResponse::soap_del() deep deletes _tds__CreateStorageConfigurationResponse data members, use only after _tds__CreateStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateStorageConfigurationResponse or derived type identifier
class _tds__CreateStorageConfigurationResponse
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
/// @note class _tds__GetStorageConfiguration operations:
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfiguration* soap_new_req__tds__GetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfiguration* soap_new_set__tds__GetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) serialize to a stream
/// - _tds__GetStorageConfiguration* _tds__GetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__GetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfiguration::soap_del() deep deletes _tds__GetStorageConfiguration data members, use only after _tds__GetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__GetStorageConfiguration or derived type identifier
class _tds__GetStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationResponse operations:
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationResponse* soap_new_req__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationResponse* soap_new_set__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationResponse* _tds__GetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationResponse::soap_del() deep deletes _tds__GetStorageConfigurationResponse data members, use only after _tds__GetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationResponse or derived type identifier
class _tds__GetStorageConfigurationResponse
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
/// @note class _tds__SetStorageConfiguration operations:
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfiguration* soap_new_req__tds__SetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfiguration* soap_new_set__tds__SetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) serialize to a stream
/// - _tds__SetStorageConfiguration* _tds__SetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__SetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfiguration::soap_del() deep deletes _tds__SetStorageConfiguration data members, use only after _tds__SetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__SetStorageConfiguration or derived type identifier
class _tds__SetStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__SetStorageConfigurationResponse operations:
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfigurationResponse* soap_new_req__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfigurationResponse* soap_new_set__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) serialize to a stream
/// - _tds__SetStorageConfigurationResponse* _tds__SetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfigurationResponse::soap_del() deep deletes _tds__SetStorageConfigurationResponse data members, use only after _tds__SetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetStorageConfigurationResponse or derived type identifier
class _tds__SetStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
/// @note class _tds__DeleteStorageConfiguration operations:
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfiguration* soap_new_req__tds__DeleteStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfiguration* soap_new_set__tds__DeleteStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) serialize to a stream
/// - _tds__DeleteStorageConfiguration* _tds__DeleteStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfiguration::soap_del() deep deletes _tds__DeleteStorageConfiguration data members, use only after _tds__DeleteStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfiguration or derived type identifier
class _tds__DeleteStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteStorageConfigurationResponse operations:
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfigurationResponse* soap_new_req__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfigurationResponse* soap_new_set__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) serialize to a stream
/// - _tds__DeleteStorageConfigurationResponse* _tds__DeleteStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfigurationResponse::soap_del() deep deletes _tds__DeleteStorageConfigurationResponse data members, use only after _tds__DeleteStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfigurationResponse or derived type identifier
class _tds__DeleteStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
/// @note class _tds__GetGeoLocation operations:
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*) allocate and default initialize
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocation* soap_new_req__tds__GetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocation* soap_new_set__tds__GetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) serialize to a stream
/// - _tds__GetGeoLocation* _tds__GetGeoLocation::soap_dup(soap*) returns deep copy of _tds__GetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocation::soap_del() deep deletes _tds__GetGeoLocation data members, use only after _tds__GetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocation::soap_type() returns SOAP_TYPE__tds__GetGeoLocation or derived type identifier
class _tds__GetGeoLocation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
/// @note class _tds__GetGeoLocationResponse operations:
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocationResponse* soap_new_req__tds__GetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocationResponse* soap_new_set__tds__GetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) serialize to a stream
/// - _tds__GetGeoLocationResponse* _tds__GetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__GetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocationResponse::soap_del() deep deletes _tds__GetGeoLocationResponse data members, use only after _tds__GetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__GetGeoLocationResponse or derived type identifier
class _tds__GetGeoLocationResponse
{ public:
/// Vector of tt__LocationEntity* of length 0..unbounded.
    std::vector<tt__LocationEntity*    > Location                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
/// @note class _tds__SetGeoLocation operations:
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*) allocate and default initialize
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocation* soap_new_req__tds__SetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocation* soap_new_set__tds__SetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) serialize to a stream
/// - _tds__SetGeoLocation* _tds__SetGeoLocation::soap_dup(soap*) returns deep copy of _tds__SetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocation::soap_del() deep deletes _tds__SetGeoLocation data members, use only after _tds__SetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocation::soap_type() returns SOAP_TYPE__tds__SetGeoLocation or derived type identifier
class _tds__SetGeoLocation
{ public:
/// Vector of tt__LocationEntity* of length 1..unbounded.
    std::vector<tt__LocationEntity*    > Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
/// @note class _tds__SetGeoLocationResponse operations:
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocationResponse* soap_new_req__tds__SetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocationResponse* soap_new_set__tds__SetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) serialize to a stream
/// - _tds__SetGeoLocationResponse* _tds__SetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__SetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocationResponse::soap_del() deep deletes _tds__SetGeoLocationResponse data members, use only after _tds__SetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__SetGeoLocationResponse or derived type identifier
class _tds__SetGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
/// @note class _tds__DeleteGeoLocation operations:
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocation* soap_new_req__tds__DeleteGeoLocation(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocation* soap_new_set__tds__DeleteGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) serialize to a stream
/// - _tds__DeleteGeoLocation* _tds__DeleteGeoLocation::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocation::soap_del() deep deletes _tds__DeleteGeoLocation data members, use only after _tds__DeleteGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocation::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocation or derived type identifier
class _tds__DeleteGeoLocation
{ public:
/// Vector of tt__LocationEntity* of length 1..unbounded.
    std::vector<tt__LocationEntity*    > Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
/// @note class _tds__DeleteGeoLocationResponse operations:
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocationResponse* soap_new_req__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocationResponse* soap_new_set__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) serialize to a stream
/// - _tds__DeleteGeoLocationResponse* _tds__DeleteGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocationResponse::soap_del() deep deletes _tds__DeleteGeoLocationResponse data members, use only after _tds__DeleteGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocationResponse or derived type identifier
class _tds__DeleteGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSource (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZNode (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as tds__StorageConfiguration
///
/// @note class tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*) allocate and default initialize
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*, int num) allocate and default initialize an array
/// - tt__DeviceEntity* soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - tt__DeviceEntity* soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - tt__DeviceEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap*, tt__DeviceEntity*) serialize to a stream
/// - tt__DeviceEntity* tt__DeviceEntity::soap_dup(soap*) returns deep copy of tt__DeviceEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceEntity::soap_del() deep deletes tt__DeviceEntity data members, use only after tt__DeviceEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceEntity::soap_type() returns SOAP_TYPE_tt__DeviceEntity or derived type identifier
class tt__DeviceEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntRectangleRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DurationRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IntItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnyHolder is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Profile is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigurationEntity is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rotate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensProjection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensOffset is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LensDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RotateOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SceneOrientation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventSubscription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G711DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AACDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":G726DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MulticastConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StreamSetup is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transport is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaUri is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// @note class tt__Scope operations:
/// - tt__Scope* soap_new_tt__Scope(soap*) allocate and default initialize
/// - tt__Scope* soap_new_tt__Scope(soap*, int num) allocate and default initialize an array
/// - tt__Scope* soap_new_req_tt__Scope(soap*, ...) allocate, set required members
/// - tt__Scope* soap_new_set_tt__Scope(soap*, ...) allocate, set all public members
/// - tt__Scope::soap_default(soap*) default initialize members
/// - int soap_read_tt__Scope(soap*, tt__Scope*) deserialize from a stream
/// - int soap_write_tt__Scope(soap*, tt__Scope*) serialize to a stream
/// - tt__Scope* tt__Scope::soap_dup(soap*) returns deep copy of tt__Scope, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Scope::soap_del() deep deletes tt__Scope data members, use only after tt__Scope::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Scope::soap_type() returns SOAP_TYPE_tt__Scope or derived type identifier
class tt__Scope
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeDef" of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeItem" of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// @note class tt__NetworkInterfaceExtension operations:
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(soap*) allocate and default initialize
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceExtension* soap_new_req_tt__NetworkInterfaceExtension(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceExtension* soap_new_set_tt__NetworkInterfaceExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) serialize to a stream
/// - tt__NetworkInterfaceExtension* tt__NetworkInterfaceExtension::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceExtension::soap_del() deep deletes tt__NetworkInterfaceExtension data members, use only after tt__NetworkInterfaceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceExtension::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceExtension or derived type identifier
class tt__NetworkInterfaceExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;	///< Multiple elements.
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// @note class tt__Dot3Configuration operations:
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(soap*) allocate and default initialize
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(soap*, int num) allocate and default initialize an array
/// - tt__Dot3Configuration* soap_new_req_tt__Dot3Configuration(soap*, ...) allocate, set required members
/// - tt__Dot3Configuration* soap_new_set_tt__Dot3Configuration(soap*, ...) allocate, set all public members
/// - tt__Dot3Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) serialize to a stream
/// - tt__Dot3Configuration* tt__Dot3Configuration::soap_dup(soap*) returns deep copy of tt__Dot3Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot3Configuration::soap_del() deep deletes tt__Dot3Configuration data members, use only after tt__Dot3Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot3Configuration::soap_type() returns SOAP_TYPE_tt__Dot3Configuration or derived type identifier
class tt__Dot3Configuration
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// @note class tt__NetworkInterfaceExtension2 operations:
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(soap*) allocate and default initialize
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceExtension2* soap_new_req_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceExtension2* soap_new_set_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) serialize to a stream
/// - tt__NetworkInterfaceExtension2* tt__NetworkInterfaceExtension2::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceExtension2::soap_del() deep deletes tt__NetworkInterfaceExtension2 data members, use only after tt__NetworkInterfaceExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceExtension2::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceExtension2 or derived type identifier
class tt__NetworkInterfaceExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// @note class tt__NetworkInterfaceLink operations:
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(soap*) allocate and default initialize
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceLink* soap_new_req_tt__NetworkInterfaceLink(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceLink* soap_new_set_tt__NetworkInterfaceLink(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceLink::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) serialize to a stream
/// - tt__NetworkInterfaceLink* tt__NetworkInterfaceLink::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceLink, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceLink::soap_del() deep deletes tt__NetworkInterfaceLink data members, use only after tt__NetworkInterfaceLink::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceLink::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceLink or derived type identifier
class tt__NetworkInterfaceLink
{ public:
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdminSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// @note class tt__NetworkInterfaceConnectionSetting operations:
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(soap*) allocate and default initialize
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceConnectionSetting* soap_new_req_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceConnectionSetting* soap_new_set_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceConnectionSetting::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) serialize to a stream
/// - tt__NetworkInterfaceConnectionSetting* tt__NetworkInterfaceConnectionSetting::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceConnectionSetting, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceConnectionSetting::soap_del() deep deletes tt__NetworkInterfaceConnectionSetting data members, use only after tt__NetworkInterfaceConnectionSetting::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceConnectionSetting::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceConnectionSetting or derived type identifier
class tt__NetworkInterfaceConnectionSetting
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoNegotiation" of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
///
/// Element "Duplex" of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// @note class tt__NetworkInterfaceInfo operations:
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(soap*) allocate and default initialize
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceInfo* soap_new_req_tt__NetworkInterfaceInfo(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceInfo* soap_new_set_tt__NetworkInterfaceInfo(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceInfo::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) serialize to a stream
/// - tt__NetworkInterfaceInfo* tt__NetworkInterfaceInfo::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceInfo::soap_del() deep deletes tt__NetworkInterfaceInfo data members, use only after tt__NetworkInterfaceInfo::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceInfo::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceInfo or derived type identifier
class tt__NetworkInterfaceInfo
{ public:
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
///
/// Element "HwAddress" of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// @note class tt__IPv6NetworkInterface operations:
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(soap*) allocate and default initialize
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__IPv6NetworkInterface* soap_new_req_tt__IPv6NetworkInterface(soap*, ...) allocate, set required members
/// - tt__IPv6NetworkInterface* soap_new_set_tt__IPv6NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__IPv6NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) serialize to a stream
/// - tt__IPv6NetworkInterface* tt__IPv6NetworkInterface::soap_dup(soap*) returns deep copy of tt__IPv6NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6NetworkInterface::soap_del() deep deletes tt__IPv6NetworkInterface data members, use only after tt__IPv6NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6NetworkInterface::soap_type() returns SOAP_TYPE_tt__IPv6NetworkInterface or derived type identifier
class tt__IPv6NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// @note class tt__IPv4NetworkInterface operations:
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(soap*) allocate and default initialize
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__IPv4NetworkInterface* soap_new_req_tt__IPv4NetworkInterface(soap*, ...) allocate, set required members
/// - tt__IPv4NetworkInterface* soap_new_set_tt__IPv4NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__IPv4NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) serialize to a stream
/// - tt__IPv4NetworkInterface* tt__IPv4NetworkInterface::soap_dup(soap*) returns deep copy of tt__IPv4NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4NetworkInterface::soap_del() deep deletes tt__IPv4NetworkInterface data members, use only after tt__IPv4NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4NetworkInterface::soap_type() returns SOAP_TYPE_tt__IPv4NetworkInterface or derived type identifier
class tt__IPv4NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// @note class tt__IPv4Configuration operations:
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(soap*) allocate and default initialize
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(soap*, int num) allocate and default initialize an array
/// - tt__IPv4Configuration* soap_new_req_tt__IPv4Configuration(soap*, ...) allocate, set required members
/// - tt__IPv4Configuration* soap_new_set_tt__IPv4Configuration(soap*, ...) allocate, set all public members
/// - tt__IPv4Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) serialize to a stream
/// - tt__IPv4Configuration* tt__IPv4Configuration::soap_dup(soap*) returns deep copy of tt__IPv4Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4Configuration::soap_del() deep deletes tt__IPv4Configuration data members, use only after tt__IPv4Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4Configuration::soap_type() returns SOAP_TYPE_tt__IPv4Configuration or derived type identifier
class tt__IPv4Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
///
/// Element "LinkLocal" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// @note class tt__IPv6Configuration operations:
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(soap*) allocate and default initialize
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(soap*, int num) allocate and default initialize an array
/// - tt__IPv6Configuration* soap_new_req_tt__IPv6Configuration(soap*, ...) allocate, set required members
/// - tt__IPv6Configuration* soap_new_set_tt__IPv6Configuration(soap*, ...) allocate, set all public members
/// - tt__IPv6Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) serialize to a stream
/// - tt__IPv6Configuration* tt__IPv6Configuration::soap_dup(soap*) returns deep copy of tt__IPv6Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6Configuration::soap_del() deep deletes tt__IPv6Configuration data members, use only after tt__IPv6Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6Configuration::soap_type() returns SOAP_TYPE_tt__IPv6Configuration or derived type identifier
class tt__IPv6Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> LinkLocal                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromDHCP                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromRA                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// @note class tt__IPv6ConfigurationExtension operations:
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(soap*) allocate and default initialize
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__IPv6ConfigurationExtension* soap_new_req_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__IPv6ConfigurationExtension* soap_new_set_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__IPv6ConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) serialize to a stream
/// - tt__IPv6ConfigurationExtension* tt__IPv6ConfigurationExtension::soap_dup(soap*) returns deep copy of tt__IPv6ConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6ConfigurationExtension::soap_del() deep deletes tt__IPv6ConfigurationExtension data members, use only after tt__IPv6ConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6ConfigurationExtension::soap_type() returns SOAP_TYPE_tt__IPv6ConfigurationExtension or derived type identifier
class tt__IPv6ConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// @note class tt__NetworkProtocol operations:
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(soap*) allocate and default initialize
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(soap*, int num) allocate and default initialize an array
/// - tt__NetworkProtocol* soap_new_req_tt__NetworkProtocol(soap*, ...) allocate, set required members
/// - tt__NetworkProtocol* soap_new_set_tt__NetworkProtocol(soap*, ...) allocate, set all public members
/// - tt__NetworkProtocol::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) serialize to a stream
/// - tt__NetworkProtocol* tt__NetworkProtocol::soap_dup(soap*) returns deep copy of tt__NetworkProtocol, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkProtocol::soap_del() deep deletes tt__NetworkProtocol data members, use only after tt__NetworkProtocol::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkProtocol::soap_type() returns SOAP_TYPE_tt__NetworkProtocol or derived type identifier
class tt__NetworkProtocol
{ public:
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
///
/// Vector of int of length 1..unbounded.
    std::vector<int                    > Port                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// @note class tt__NetworkProtocolExtension operations:
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(soap*) allocate and default initialize
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkProtocolExtension* soap_new_req_tt__NetworkProtocolExtension(soap*, ...) allocate, set required members
/// - tt__NetworkProtocolExtension* soap_new_set_tt__NetworkProtocolExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkProtocolExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) serialize to a stream
/// - tt__NetworkProtocolExtension* tt__NetworkProtocolExtension::soap_dup(soap*) returns deep copy of tt__NetworkProtocolExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkProtocolExtension::soap_del() deep deletes tt__NetworkProtocolExtension data members, use only after tt__NetworkProtocolExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkProtocolExtension::soap_type() returns SOAP_TYPE_tt__NetworkProtocolExtension or derived type identifier
class tt__NetworkProtocolExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// @note class tt__NetworkHost operations:
/// - tt__NetworkHost* soap_new_tt__NetworkHost(soap*) allocate and default initialize
/// - tt__NetworkHost* soap_new_tt__NetworkHost(soap*, int num) allocate and default initialize an array
/// - tt__NetworkHost* soap_new_req_tt__NetworkHost(soap*, ...) allocate, set required members
/// - tt__NetworkHost* soap_new_set_tt__NetworkHost(soap*, ...) allocate, set all public members
/// - tt__NetworkHost::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkHost(soap*, tt__NetworkHost*) deserialize from a stream
/// - int soap_write_tt__NetworkHost(soap*, tt__NetworkHost*) serialize to a stream
/// - tt__NetworkHost* tt__NetworkHost::soap_dup(soap*) returns deep copy of tt__NetworkHost, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkHost::soap_del() deep deletes tt__NetworkHost data members, use only after tt__NetworkHost::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkHost::soap_type() returns SOAP_TYPE_tt__NetworkHost or derived type identifier
class tt__NetworkHost
{ public:
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSname" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         DNSname                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// @note class tt__NetworkHostExtension operations:
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(soap*) allocate and default initialize
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkHostExtension* soap_new_req_tt__NetworkHostExtension(soap*, ...) allocate, set required members
/// - tt__NetworkHostExtension* soap_new_set_tt__NetworkHostExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkHostExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) serialize to a stream
/// - tt__NetworkHostExtension* tt__NetworkHostExtension::soap_dup(soap*) returns deep copy of tt__NetworkHostExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkHostExtension::soap_del() deep deletes tt__NetworkHostExtension data members, use only after tt__NetworkHostExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkHostExtension::soap_type() returns SOAP_TYPE_tt__NetworkHostExtension or derived type identifier
class tt__NetworkHostExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// @note class tt__IPAddress operations:
/// - tt__IPAddress* soap_new_tt__IPAddress(soap*) allocate and default initialize
/// - tt__IPAddress* soap_new_tt__IPAddress(soap*, int num) allocate and default initialize an array
/// - tt__IPAddress* soap_new_req_tt__IPAddress(soap*, ...) allocate, set required members
/// - tt__IPAddress* soap_new_set_tt__IPAddress(soap*, ...) allocate, set all public members
/// - tt__IPAddress::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddress(soap*, tt__IPAddress*) deserialize from a stream
/// - int soap_write_tt__IPAddress(soap*, tt__IPAddress*) serialize to a stream
/// - tt__IPAddress* tt__IPAddress::soap_dup(soap*) returns deep copy of tt__IPAddress, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddress::soap_del() deep deletes tt__IPAddress data members, use only after tt__IPAddress::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddress::soap_type() returns SOAP_TYPE_tt__IPAddress or derived type identifier
class tt__IPAddress
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// @note class tt__PrefixedIPv4Address operations:
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(soap*) allocate and default initialize
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(soap*, int num) allocate and default initialize an array
/// - tt__PrefixedIPv4Address* soap_new_req_tt__PrefixedIPv4Address(soap*, ...) allocate, set required members
/// - tt__PrefixedIPv4Address* soap_new_set_tt__PrefixedIPv4Address(soap*, ...) allocate, set all public members
/// - tt__PrefixedIPv4Address::soap_default(soap*) default initialize members
/// - int soap_read_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) serialize to a stream
/// - tt__PrefixedIPv4Address* tt__PrefixedIPv4Address::soap_dup(soap*) returns deep copy of tt__PrefixedIPv4Address, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PrefixedIPv4Address::soap_del() deep deletes tt__PrefixedIPv4Address data members, use only after tt__PrefixedIPv4Address::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PrefixedIPv4Address::soap_type() returns SOAP_TYPE_tt__PrefixedIPv4Address or derived type identifier
class tt__PrefixedIPv4Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// @note class tt__PrefixedIPv6Address operations:
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(soap*) allocate and default initialize
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(soap*, int num) allocate and default initialize an array
/// - tt__PrefixedIPv6Address* soap_new_req_tt__PrefixedIPv6Address(soap*, ...) allocate, set required members
/// - tt__PrefixedIPv6Address* soap_new_set_tt__PrefixedIPv6Address(soap*, ...) allocate, set all public members
/// - tt__PrefixedIPv6Address::soap_default(soap*) default initialize members
/// - int soap_read_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) serialize to a stream
/// - tt__PrefixedIPv6Address* tt__PrefixedIPv6Address::soap_dup(soap*) returns deep copy of tt__PrefixedIPv6Address, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PrefixedIPv6Address::soap_del() deep deletes tt__PrefixedIPv6Address data members, use only after tt__PrefixedIPv6Address::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PrefixedIPv6Address::soap_type() returns SOAP_TYPE_tt__PrefixedIPv6Address or derived type identifier
class tt__PrefixedIPv6Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// @note class tt__HostnameInformation operations:
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(soap*) allocate and default initialize
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(soap*, int num) allocate and default initialize an array
/// - tt__HostnameInformation* soap_new_req_tt__HostnameInformation(soap*, ...) allocate, set required members
/// - tt__HostnameInformation* soap_new_set_tt__HostnameInformation(soap*, ...) allocate, set all public members
/// - tt__HostnameInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__HostnameInformation(soap*, tt__HostnameInformation*) deserialize from a stream
/// - int soap_write_tt__HostnameInformation(soap*, tt__HostnameInformation*) serialize to a stream
/// - tt__HostnameInformation* tt__HostnameInformation::soap_dup(soap*) returns deep copy of tt__HostnameInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__HostnameInformation::soap_del() deep deletes tt__HostnameInformation data members, use only after tt__HostnameInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__HostnameInformation::soap_type() returns SOAP_TYPE_tt__HostnameInformation or derived type identifier
class tt__HostnameInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname has been obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the device hostname or an empty string if no hostname has been assigned.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// @note class tt__HostnameInformationExtension operations:
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(soap*) allocate and default initialize
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__HostnameInformationExtension* soap_new_req_tt__HostnameInformationExtension(soap*, ...) allocate, set required members
/// - tt__HostnameInformationExtension* soap_new_set_tt__HostnameInformationExtension(soap*, ...) allocate, set all public members
/// - tt__HostnameInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) deserialize from a stream
/// - int soap_write_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) serialize to a stream
/// - tt__HostnameInformationExtension* tt__HostnameInformationExtension::soap_dup(soap*) returns deep copy of tt__HostnameInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__HostnameInformationExtension::soap_del() deep deletes tt__HostnameInformationExtension data members, use only after tt__HostnameInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__HostnameInformationExtension::soap_type() returns SOAP_TYPE_tt__HostnameInformationExtension or derived type identifier
class tt__HostnameInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// @note class tt__DNSInformation operations:
/// - tt__DNSInformation* soap_new_tt__DNSInformation(soap*) allocate and default initialize
/// - tt__DNSInformation* soap_new_tt__DNSInformation(soap*, int num) allocate and default initialize an array
/// - tt__DNSInformation* soap_new_req_tt__DNSInformation(soap*, ...) allocate, set required members
/// - tt__DNSInformation* soap_new_set_tt__DNSInformation(soap*, ...) allocate, set all public members
/// - tt__DNSInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__DNSInformation(soap*, tt__DNSInformation*) deserialize from a stream
/// - int soap_write_tt__DNSInformation(soap*, tt__DNSInformation*) serialize to a stream
/// - tt__DNSInformation* tt__DNSInformation::soap_dup(soap*) returns deep copy of tt__DNSInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DNSInformation::soap_del() deep deletes tt__DNSInformation data members, use only after tt__DNSInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DNSInformation::soap_type() returns SOAP_TYPE_tt__DNSInformation or derived type identifier
class tt__DNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// @note class tt__DNSInformationExtension operations:
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(soap*) allocate and default initialize
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__DNSInformationExtension* soap_new_req_tt__DNSInformationExtension(soap*, ...) allocate, set required members
/// - tt__DNSInformationExtension* soap_new_set_tt__DNSInformationExtension(soap*, ...) allocate, set all public members
/// - tt__DNSInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) serialize to a stream
/// - tt__DNSInformationExtension* tt__DNSInformationExtension::soap_dup(soap*) returns deep copy of tt__DNSInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DNSInformationExtension::soap_del() deep deletes tt__DNSInformationExtension data members, use only after tt__DNSInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DNSInformationExtension::soap_type() returns SOAP_TYPE_tt__DNSInformationExtension or derived type identifier
class tt__DNSInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// @note class tt__NTPInformation operations:
/// - tt__NTPInformation* soap_new_tt__NTPInformation(soap*) allocate and default initialize
/// - tt__NTPInformation* soap_new_tt__NTPInformation(soap*, int num) allocate and default initialize an array
/// - tt__NTPInformation* soap_new_req_tt__NTPInformation(soap*, ...) allocate, set required members
/// - tt__NTPInformation* soap_new_set_tt__NTPInformation(soap*, ...) allocate, set all public members
/// - tt__NTPInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__NTPInformation(soap*, tt__NTPInformation*) deserialize from a stream
/// - int soap_write_tt__NTPInformation(soap*, tt__NTPInformation*) serialize to a stream
/// - tt__NTPInformation* tt__NTPInformation::soap_dup(soap*) returns deep copy of tt__NTPInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NTPInformation::soap_del() deep deletes tt__NTPInformation data members, use only after tt__NTPInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NTPInformation::soap_type() returns SOAP_TYPE_tt__NTPInformation or derived type identifier
class tt__NTPInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// @note class tt__NTPInformationExtension operations:
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(soap*) allocate and default initialize
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NTPInformationExtension* soap_new_req_tt__NTPInformationExtension(soap*, ...) allocate, set required members
/// - tt__NTPInformationExtension* soap_new_set_tt__NTPInformationExtension(soap*, ...) allocate, set all public members
/// - tt__NTPInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) deserialize from a stream
/// - int soap_write_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) serialize to a stream
/// - tt__NTPInformationExtension* tt__NTPInformationExtension::soap_dup(soap*) returns deep copy of tt__NTPInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NTPInformationExtension::soap_del() deep deletes tt__NTPInformationExtension data members, use only after tt__NTPInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NTPInformationExtension::soap_type() returns SOAP_TYPE_tt__NTPInformationExtension or derived type identifier
class tt__NTPInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// @note class tt__DynamicDNSInformation operations:
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(soap*) allocate and default initialize
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(soap*, int num) allocate and default initialize an array
/// - tt__DynamicDNSInformation* soap_new_req_tt__DynamicDNSInformation(soap*, ...) allocate, set required members
/// - tt__DynamicDNSInformation* soap_new_set_tt__DynamicDNSInformation(soap*, ...) allocate, set all public members
/// - tt__DynamicDNSInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) serialize to a stream
/// - tt__DynamicDNSInformation* tt__DynamicDNSInformation::soap_dup(soap*) returns deep copy of tt__DynamicDNSInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DynamicDNSInformation::soap_del() deep deletes tt__DynamicDNSInformation data members, use only after tt__DynamicDNSInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DynamicDNSInformation::soap_type() returns SOAP_TYPE_tt__DynamicDNSInformation or derived type identifier
class tt__DynamicDNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// @note class tt__DynamicDNSInformationExtension operations:
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(soap*) allocate and default initialize
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__DynamicDNSInformationExtension* soap_new_req_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set required members
/// - tt__DynamicDNSInformationExtension* soap_new_set_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set all public members
/// - tt__DynamicDNSInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) serialize to a stream
/// - tt__DynamicDNSInformationExtension* tt__DynamicDNSInformationExtension::soap_dup(soap*) returns deep copy of tt__DynamicDNSInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DynamicDNSInformationExtension::soap_del() deep deletes tt__DynamicDNSInformationExtension data members, use only after tt__DynamicDNSInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DynamicDNSInformationExtension::soap_type() returns SOAP_TYPE_tt__DynamicDNSInformationExtension or derived type identifier
class tt__DynamicDNSInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfiguration operations:
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfiguration* soap_new_req_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfiguration* soap_new_set_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__NetworkInterfaceSetConfiguration* tt__NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__NetworkInterfaceSetConfiguration data members, use only after tt__NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfiguration or derived type identifier
class tt__NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfigurationExtension operations:
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a stream
/// - tt__NetworkInterfaceSetConfigurationExtension* tt__NetworkInterfaceSetConfigurationExtension::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfigurationExtension::soap_del() deep deletes tt__NetworkInterfaceSetConfigurationExtension data members, use only after tt__NetworkInterfaceSetConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfigurationExtension::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension or derived type identifier
class tt__NetworkInterfaceSetConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;	///< Multiple elements.
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__IPv6NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__IPv6NetworkInterfaceSetConfiguration* tt__IPv6NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__IPv6NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__IPv6NetworkInterfaceSetConfiguration data members, use only after tt__IPv6NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration or derived type identifier
class tt__IPv6NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__IPv4NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__IPv4NetworkInterfaceSetConfiguration* tt__IPv4NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__IPv4NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__IPv4NetworkInterfaceSetConfiguration data members, use only after tt__IPv4NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration or derived type identifier
class tt__IPv4NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// @note class tt__NetworkGateway operations:
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(soap*) allocate and default initialize
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(soap*, int num) allocate and default initialize an array
/// - tt__NetworkGateway* soap_new_req_tt__NetworkGateway(soap*, ...) allocate, set required members
/// - tt__NetworkGateway* soap_new_set_tt__NetworkGateway(soap*, ...) allocate, set all public members
/// - tt__NetworkGateway::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkGateway(soap*, tt__NetworkGateway*) deserialize from a stream
/// - int soap_write_tt__NetworkGateway(soap*, tt__NetworkGateway*) serialize to a stream
/// - tt__NetworkGateway* tt__NetworkGateway::soap_dup(soap*) returns deep copy of tt__NetworkGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkGateway::soap_del() deep deletes tt__NetworkGateway data members, use only after tt__NetworkGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkGateway::soap_type() returns SOAP_TYPE_tt__NetworkGateway or derived type identifier
class tt__NetworkGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// @note class tt__NetworkZeroConfiguration operations:
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(soap*) allocate and default initialize
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfiguration* soap_new_req_tt__NetworkZeroConfiguration(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfiguration* soap_new_set_tt__NetworkZeroConfiguration(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) serialize to a stream
/// - tt__NetworkZeroConfiguration* tt__NetworkZeroConfiguration::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfiguration::soap_del() deep deletes tt__NetworkZeroConfiguration data members, use only after tt__NetworkZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfiguration::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfiguration or derived type identifier
class tt__NetworkZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > Addresses                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// @note class tt__NetworkZeroConfigurationExtension operations:
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(soap*) allocate and default initialize
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfigurationExtension* soap_new_req_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfigurationExtension* soap_new_set_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) serialize to a stream
/// - tt__NetworkZeroConfigurationExtension* tt__NetworkZeroConfigurationExtension::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfigurationExtension::soap_del() deep deletes tt__NetworkZeroConfigurationExtension data members, use only after tt__NetworkZeroConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfigurationExtension::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfigurationExtension or derived type identifier
class tt__NetworkZeroConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkZeroConfiguration* of length 0..unbounded.
    std::vector<tt__NetworkZeroConfiguration*> Additional                     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// @note class tt__NetworkZeroConfigurationExtension2 operations:
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(soap*) allocate and default initialize
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfigurationExtension2* soap_new_req_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfigurationExtension2* soap_new_set_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) serialize to a stream
/// - tt__NetworkZeroConfigurationExtension2* tt__NetworkZeroConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfigurationExtension2::soap_del() deep deletes tt__NetworkZeroConfigurationExtension2 data members, use only after tt__NetworkZeroConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfigurationExtension2 or derived type identifier
class tt__NetworkZeroConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// @note class tt__IPAddressFilter operations:
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(soap*) allocate and default initialize
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(soap*, int num) allocate and default initialize an array
/// - tt__IPAddressFilter* soap_new_req_tt__IPAddressFilter(soap*, ...) allocate, set required members
/// - tt__IPAddressFilter* soap_new_set_tt__IPAddressFilter(soap*, ...) allocate, set all public members
/// - tt__IPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) serialize to a stream
/// - tt__IPAddressFilter* tt__IPAddressFilter::soap_dup(soap*) returns deep copy of tt__IPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddressFilter::soap_del() deep deletes tt__IPAddressFilter data members, use only after tt__IPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddressFilter::soap_type() returns SOAP_TYPE_tt__IPAddressFilter or derived type identifier
class tt__IPAddressFilter
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> IPv4Address                    0;	///< Multiple elements.
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> IPv6Address                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// @note class tt__IPAddressFilterExtension operations:
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(soap*) allocate and default initialize
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(soap*, int num) allocate and default initialize an array
/// - tt__IPAddressFilterExtension* soap_new_req_tt__IPAddressFilterExtension(soap*, ...) allocate, set required members
/// - tt__IPAddressFilterExtension* soap_new_set_tt__IPAddressFilterExtension(soap*, ...) allocate, set all public members
/// - tt__IPAddressFilterExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) serialize to a stream
/// - tt__IPAddressFilterExtension* tt__IPAddressFilterExtension::soap_dup(soap*) returns deep copy of tt__IPAddressFilterExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddressFilterExtension::soap_del() deep deletes tt__IPAddressFilterExtension data members, use only after tt__IPAddressFilterExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddressFilterExtension::soap_type() returns SOAP_TYPE_tt__IPAddressFilterExtension or derived type identifier
class tt__IPAddressFilterExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// @note class tt__Dot11Configuration operations:
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(soap*) allocate and default initialize
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Configuration* soap_new_req_tt__Dot11Configuration(soap*, ...) allocate, set required members
/// - tt__Dot11Configuration* soap_new_set_tt__Dot11Configuration(soap*, ...) allocate, set all public members
/// - tt__Dot11Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) serialize to a stream
/// - tt__Dot11Configuration* tt__Dot11Configuration::soap_dup(soap*) returns deep copy of tt__Dot11Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Configuration::soap_del() deep deletes tt__Dot11Configuration data members, use only after tt__Dot11Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Configuration::soap_type() returns SOAP_TYPE_tt__Dot11Configuration or derived type identifier
class tt__Dot11Configuration
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// @note class tt__Dot11SecurityConfiguration operations:
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(soap*) allocate and default initialize
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__Dot11SecurityConfiguration* soap_new_req_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set required members
/// - tt__Dot11SecurityConfiguration* soap_new_set_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set all public members
/// - tt__Dot11SecurityConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) serialize to a stream
/// - tt__Dot11SecurityConfiguration* tt__Dot11SecurityConfiguration::soap_dup(soap*) returns deep copy of tt__Dot11SecurityConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11SecurityConfiguration::soap_del() deep deletes tt__Dot11SecurityConfiguration data members, use only after tt__Dot11SecurityConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11SecurityConfiguration::soap_type() returns SOAP_TYPE_tt__Dot11SecurityConfiguration or derived type identifier
class tt__Dot11SecurityConfiguration
{ public:
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element "Dot1X" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Dot1X                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// @note class tt__Dot11SecurityConfigurationExtension operations:
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(soap*) allocate and default initialize
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11SecurityConfigurationExtension* soap_new_req_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__Dot11SecurityConfigurationExtension* soap_new_set_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11SecurityConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) serialize to a stream
/// - tt__Dot11SecurityConfigurationExtension* tt__Dot11SecurityConfigurationExtension::soap_dup(soap*) returns deep copy of tt__Dot11SecurityConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11SecurityConfigurationExtension::soap_del() deep deletes tt__Dot11SecurityConfigurationExtension data members, use only after tt__Dot11SecurityConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11SecurityConfigurationExtension::soap_type() returns SOAP_TYPE_tt__Dot11SecurityConfigurationExtension or derived type identifier
class tt__Dot11SecurityConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// @note class tt__Dot11PSKSet operations:
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(soap*) allocate and default initialize
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(soap*, int num) allocate and default initialize an array
/// - tt__Dot11PSKSet* soap_new_req_tt__Dot11PSKSet(soap*, ...) allocate, set required members
/// - tt__Dot11PSKSet* soap_new_set_tt__Dot11PSKSet(soap*, ...) allocate, set all public members
/// - tt__Dot11PSKSet::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) serialize to a stream
/// - tt__Dot11PSKSet* tt__Dot11PSKSet::soap_dup(soap*) returns deep copy of tt__Dot11PSKSet, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11PSKSet::soap_del() deep deletes tt__Dot11PSKSet data members, use only after tt__Dot11PSKSet::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11PSKSet::soap_type() returns SOAP_TYPE_tt__Dot11PSKSet or derived type identifier
class tt__Dot11PSKSet
{ public:
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
///
/// Element "Passphrase" of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase*              Passphrase                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// @note class tt__Dot11PSKSetExtension operations:
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(soap*) allocate and default initialize
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11PSKSetExtension* soap_new_req_tt__Dot11PSKSetExtension(soap*, ...) allocate, set required members
/// - tt__Dot11PSKSetExtension* soap_new_set_tt__Dot11PSKSetExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11PSKSetExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) serialize to a stream
/// - tt__Dot11PSKSetExtension* tt__Dot11PSKSetExtension::soap_dup(soap*) returns deep copy of tt__Dot11PSKSetExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11PSKSetExtension::soap_del() deep deletes tt__Dot11PSKSetExtension data members, use only after tt__Dot11PSKSetExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11PSKSetExtension::soap_type() returns SOAP_TYPE_tt__Dot11PSKSetExtension or derived type identifier
class tt__Dot11PSKSetExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a stream
/// - tt__NetworkInterfaceSetConfigurationExtension2* tt__NetworkInterfaceSetConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfigurationExtension2::soap_del() deep deletes tt__NetworkInterfaceSetConfigurationExtension2 data members, use only after tt__NetworkInterfaceSetConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2 or derived type identifier
class tt__NetworkInterfaceSetConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// @note class tt__Dot11Capabilities operations:
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(soap*) allocate and default initialize
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Capabilities* soap_new_req_tt__Dot11Capabilities(soap*, ...) allocate, set required members
/// - tt__Dot11Capabilities* soap_new_set_tt__Dot11Capabilities(soap*, ...) allocate, set all public members
/// - tt__Dot11Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) deserialize from a stream
/// - int soap_write_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) serialize to a stream
/// - tt__Dot11Capabilities* tt__Dot11Capabilities::soap_dup(soap*) returns deep copy of tt__Dot11Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Capabilities::soap_del() deep deletes tt__Dot11Capabilities data members, use only after tt__Dot11Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Capabilities::soap_type() returns SOAP_TYPE_tt__Dot11Capabilities or derived type identifier
class tt__Dot11Capabilities
{ public:
/// Element "TKIP" of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element "WEP" of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// @note class tt__Dot11Status operations:
/// - tt__Dot11Status* soap_new_tt__Dot11Status(soap*) allocate and default initialize
/// - tt__Dot11Status* soap_new_tt__Dot11Status(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Status* soap_new_req_tt__Dot11Status(soap*, ...) allocate, set required members
/// - tt__Dot11Status* soap_new_set_tt__Dot11Status(soap*, ...) allocate, set all public members
/// - tt__Dot11Status::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Status(soap*, tt__Dot11Status*) deserialize from a stream
/// - int soap_write_tt__Dot11Status(soap*, tt__Dot11Status*) serialize to a stream
/// - tt__Dot11Status* tt__Dot11Status::soap_dup(soap*) returns deep copy of tt__Dot11Status, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Status::soap_del() deep deletes tt__Dot11Status data members, use only after tt__Dot11Status::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Status::soap_type() returns SOAP_TYPE_tt__Dot11Status or derived type identifier
class tt__Dot11Status
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element "PairCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// @note class tt__Dot11AvailableNetworks operations:
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(soap*) allocate and default initialize
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(soap*, int num) allocate and default initialize an array
/// - tt__Dot11AvailableNetworks* soap_new_req_tt__Dot11AvailableNetworks(soap*, ...) allocate, set required members
/// - tt__Dot11AvailableNetworks* soap_new_set_tt__Dot11AvailableNetworks(soap*, ...) allocate, set all public members
/// - tt__Dot11AvailableNetworks::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) serialize to a stream
/// - tt__Dot11AvailableNetworks* tt__Dot11AvailableNetworks::soap_dup(soap*) returns deep copy of tt__Dot11AvailableNetworks, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11AvailableNetworks::soap_del() deep deletes tt__Dot11AvailableNetworks data members, use only after tt__Dot11AvailableNetworks::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11AvailableNetworks::soap_type() returns SOAP_TYPE_tt__Dot11AvailableNetworks or derived type identifier
class tt__Dot11AvailableNetworks
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__Dot11AuthAndMangementSuite of length 0..unbounded.
    std::vector<enum tt__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;	///< Multiple elements.
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > PairCipher                     0;	///< Multiple elements.
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > GroupCipher                    0;	///< Multiple elements.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// @note class tt__Dot11AvailableNetworksExtension operations:
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(soap*) allocate and default initialize
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11AvailableNetworksExtension* soap_new_req_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set required members
/// - tt__Dot11AvailableNetworksExtension* soap_new_set_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11AvailableNetworksExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) serialize to a stream
/// - tt__Dot11AvailableNetworksExtension* tt__Dot11AvailableNetworksExtension::soap_dup(soap*) returns deep copy of tt__Dot11AvailableNetworksExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11AvailableNetworksExtension::soap_del() deep deletes tt__Dot11AvailableNetworksExtension data members, use only after tt__Dot11AvailableNetworksExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11AvailableNetworksExtension::soap_type() returns SOAP_TYPE_tt__Dot11AvailableNetworksExtension or derived type identifier
class tt__Dot11AvailableNetworksExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// @note class tt__Capabilities operations:
/// - tt__Capabilities* soap_new_tt__Capabilities(soap*) allocate and default initialize
/// - tt__Capabilities* soap_new_tt__Capabilities(soap*, int num) allocate and default initialize an array
/// - tt__Capabilities* soap_new_req_tt__Capabilities(soap*, ...) allocate, set required members
/// - tt__Capabilities* soap_new_set_tt__Capabilities(soap*, ...) allocate, set all public members
/// - tt__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__Capabilities(soap*, tt__Capabilities*) deserialize from a stream
/// - int soap_write_tt__Capabilities(soap*, tt__Capabilities*) serialize to a stream
/// - tt__Capabilities* tt__Capabilities::soap_dup(soap*) returns deep copy of tt__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Capabilities::soap_del() deep deletes tt__Capabilities data members, use only after tt__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Capabilities::soap_type() returns SOAP_TYPE_tt__Capabilities or derived type identifier
class tt__Capabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// @note class tt__CapabilitiesExtension operations:
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(soap*) allocate and default initialize
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__CapabilitiesExtension* soap_new_req_tt__CapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__CapabilitiesExtension* soap_new_set_tt__CapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__CapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) serialize to a stream
/// - tt__CapabilitiesExtension* tt__CapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__CapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CapabilitiesExtension::soap_del() deep deletes tt__CapabilitiesExtension data members, use only after tt__CapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__CapabilitiesExtension or derived type identifier
class tt__CapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "DeviceIO" of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element "Display" of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element "Recording" of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element "Search" of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element "Replay" of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// @note class tt__CapabilitiesExtension2 operations:
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__CapabilitiesExtension2* soap_new_req_tt__CapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__CapabilitiesExtension2* soap_new_set_tt__CapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__CapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) serialize to a stream
/// - tt__CapabilitiesExtension2* tt__CapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__CapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CapabilitiesExtension2::soap_del() deep deletes tt__CapabilitiesExtension2 data members, use only after tt__CapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__CapabilitiesExtension2 or derived type identifier
class tt__CapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// @note class tt__AnalyticsCapabilities operations:
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(soap*) allocate and default initialize
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsCapabilities* soap_new_req_tt__AnalyticsCapabilities(soap*, ...) allocate, set required members
/// - tt__AnalyticsCapabilities* soap_new_set_tt__AnalyticsCapabilities(soap*, ...) allocate, set all public members
/// - tt__AnalyticsCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) serialize to a stream
/// - tt__AnalyticsCapabilities* tt__AnalyticsCapabilities::soap_dup(soap*) returns deep copy of tt__AnalyticsCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsCapabilities::soap_del() deep deletes tt__AnalyticsCapabilities data members, use only after tt__AnalyticsCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsCapabilities::soap_type() returns SOAP_TYPE_tt__AnalyticsCapabilities or derived type identifier
class tt__AnalyticsCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsModuleSupport" of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// @note class tt__DeviceCapabilities operations:
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(soap*) allocate and default initialize
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DeviceCapabilities* soap_new_req_tt__DeviceCapabilities(soap*, ...) allocate, set required members
/// - tt__DeviceCapabilities* soap_new_set_tt__DeviceCapabilities(soap*, ...) allocate, set all public members
/// - tt__DeviceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) serialize to a stream
/// - tt__DeviceCapabilities* tt__DeviceCapabilities::soap_dup(soap*) returns deep copy of tt__DeviceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceCapabilities::soap_del() deep deletes tt__DeviceCapabilities data members, use only after tt__DeviceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceCapabilities::soap_type() returns SOAP_TYPE_tt__DeviceCapabilities or derived type identifier
class tt__DeviceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "IO" of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// @note class tt__DeviceCapabilitiesExtension operations:
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__DeviceCapabilitiesExtension* soap_new_req_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__DeviceCapabilitiesExtension* soap_new_set_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__DeviceCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) serialize to a stream
/// - tt__DeviceCapabilitiesExtension* tt__DeviceCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__DeviceCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceCapabilitiesExtension::soap_del() deep deletes tt__DeviceCapabilitiesExtension data members, use only after tt__DeviceCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__DeviceCapabilitiesExtension or derived type identifier
class tt__DeviceCapabilitiesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// @note class tt__EventCapabilities operations:
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(soap*) allocate and default initialize
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__EventCapabilities* soap_new_req_tt__EventCapabilities(soap*, ...) allocate, set required members
/// - tt__EventCapabilities* soap_new_set_tt__EventCapabilities(soap*, ...) allocate, set all public members
/// - tt__EventCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__EventCapabilities(soap*, tt__EventCapabilities*) deserialize from a stream
/// - int soap_write_tt__EventCapabilities(soap*, tt__EventCapabilities*) serialize to a stream
/// - tt__EventCapabilities* tt__EventCapabilities::soap_dup(soap*) returns deep copy of tt__EventCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EventCapabilities::soap_del() deep deletes tt__EventCapabilities data members, use only after tt__EventCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EventCapabilities::soap_type() returns SOAP_TYPE_tt__EventCapabilities or derived type identifier
class tt__EventCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// @note class tt__IOCapabilities operations:
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(soap*) allocate and default initialize
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilities* soap_new_req_tt__IOCapabilities(soap*, ...) allocate, set required members
/// - tt__IOCapabilities* soap_new_set_tt__IOCapabilities(soap*, ...) allocate, set all public members
/// - tt__IOCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilities(soap*, tt__IOCapabilities*) deserialize from a stream
/// - int soap_write_tt__IOCapabilities(soap*, tt__IOCapabilities*) serialize to a stream
/// - tt__IOCapabilities* tt__IOCapabilities::soap_dup(soap*) returns deep copy of tt__IOCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilities::soap_del() deep deletes tt__IOCapabilities data members, use only after tt__IOCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilities::soap_type() returns SOAP_TYPE_tt__IOCapabilities or derived type identifier
class tt__IOCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
///
/// Element "InputConnectors" of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputs" of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// @note class tt__IOCapabilitiesExtension operations:
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilitiesExtension* soap_new_req_tt__IOCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__IOCapabilitiesExtension* soap_new_set_tt__IOCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__IOCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) serialize to a stream
/// - tt__IOCapabilitiesExtension* tt__IOCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__IOCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilitiesExtension::soap_del() deep deletes tt__IOCapabilitiesExtension data members, use only after tt__IOCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__IOCapabilitiesExtension or derived type identifier
class tt__IOCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Auxiliary" of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// @note class tt__IOCapabilitiesExtension2 operations:
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilitiesExtension2* soap_new_req_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__IOCapabilitiesExtension2* soap_new_set_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__IOCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) serialize to a stream
/// - tt__IOCapabilitiesExtension2* tt__IOCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__IOCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilitiesExtension2::soap_del() deep deletes tt__IOCapabilitiesExtension2 data members, use only after tt__IOCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__IOCapabilitiesExtension2 or derived type identifier
class tt__IOCapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// @note class tt__MediaCapabilities operations:
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(soap*) allocate and default initialize
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__MediaCapabilities* soap_new_req_tt__MediaCapabilities(soap*, ...) allocate, set required members
/// - tt__MediaCapabilities* soap_new_set_tt__MediaCapabilities(soap*, ...) allocate, set all public members
/// - tt__MediaCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) serialize to a stream
/// - tt__MediaCapabilities* tt__MediaCapabilities::soap_dup(soap*) returns deep copy of tt__MediaCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MediaCapabilities::soap_del() deep deletes tt__MediaCapabilities data members, use only after tt__MediaCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MediaCapabilities::soap_type() returns SOAP_TYPE_tt__MediaCapabilities or derived type identifier
class tt__MediaCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// @note class tt__MediaCapabilitiesExtension operations:
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__MediaCapabilitiesExtension* soap_new_req_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__MediaCapabilitiesExtension* soap_new_set_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__MediaCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) serialize to a stream
/// - tt__MediaCapabilitiesExtension* tt__MediaCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__MediaCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MediaCapabilitiesExtension::soap_del() deep deletes tt__MediaCapabilitiesExtension data members, use only after tt__MediaCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MediaCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__MediaCapabilitiesExtension or derived type identifier
class tt__MediaCapabilitiesExtension
{ public:
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// @note class tt__RealTimeStreamingCapabilities operations:
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(soap*) allocate and default initialize
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__RealTimeStreamingCapabilities* soap_new_req_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set required members
/// - tt__RealTimeStreamingCapabilities* soap_new_set_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set all public members
/// - tt__RealTimeStreamingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) serialize to a stream
/// - tt__RealTimeStreamingCapabilities* tt__RealTimeStreamingCapabilities::soap_dup(soap*) returns deep copy of tt__RealTimeStreamingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RealTimeStreamingCapabilities::soap_del() deep deletes tt__RealTimeStreamingCapabilities data members, use only after tt__RealTimeStreamingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RealTimeStreamingCapabilities::soap_type() returns SOAP_TYPE_tt__RealTimeStreamingCapabilities or derived type identifier
class tt__RealTimeStreamingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// @note class tt__RealTimeStreamingCapabilitiesExtension operations:
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__RealTimeStreamingCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a stream
/// - tt__RealTimeStreamingCapabilitiesExtension* tt__RealTimeStreamingCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__RealTimeStreamingCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RealTimeStreamingCapabilitiesExtension::soap_del() deep deletes tt__RealTimeStreamingCapabilitiesExtension data members, use only after tt__RealTimeStreamingCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RealTimeStreamingCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension or derived type identifier
class tt__RealTimeStreamingCapabilitiesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// @note class tt__ProfileCapabilities operations:
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(soap*) allocate and default initialize
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ProfileCapabilities* soap_new_req_tt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - tt__ProfileCapabilities* soap_new_set_tt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - tt__ProfileCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) serialize to a stream
/// - tt__ProfileCapabilities* tt__ProfileCapabilities::soap_dup(soap*) returns deep copy of tt__ProfileCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileCapabilities::soap_del() deep deletes tt__ProfileCapabilities data members, use only after tt__ProfileCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileCapabilities::soap_type() returns SOAP_TYPE_tt__ProfileCapabilities or derived type identifier
class tt__ProfileCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// @note class tt__NetworkCapabilities operations:
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(soap*) allocate and default initialize
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilities* soap_new_req_tt__NetworkCapabilities(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilities* soap_new_set_tt__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) serialize to a stream
/// - tt__NetworkCapabilities* tt__NetworkCapabilities::soap_dup(soap*) returns deep copy of tt__NetworkCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilities::soap_del() deep deletes tt__NetworkCapabilities data members, use only after tt__NetworkCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilities::soap_type() returns SOAP_TYPE_tt__NetworkCapabilities or derived type identifier
class tt__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPFilter" of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPVersion6" of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynDNS" of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// @note class tt__NetworkCapabilitiesExtension operations:
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilitiesExtension* soap_new_req_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilitiesExtension* soap_new_set_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) serialize to a stream
/// - tt__NetworkCapabilitiesExtension* tt__NetworkCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__NetworkCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilitiesExtension::soap_del() deep deletes tt__NetworkCapabilitiesExtension data members, use only after tt__NetworkCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__NetworkCapabilitiesExtension or derived type identifier
class tt__NetworkCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Dot11Configuration" of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// @note class tt__NetworkCapabilitiesExtension2 operations:
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilitiesExtension2* soap_new_req_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilitiesExtension2* soap_new_set_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) serialize to a stream
/// - tt__NetworkCapabilitiesExtension2* tt__NetworkCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__NetworkCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilitiesExtension2::soap_del() deep deletes tt__NetworkCapabilitiesExtension2 data members, use only after tt__NetworkCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__NetworkCapabilitiesExtension2 or derived type identifier
class tt__NetworkCapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// @note class tt__SecurityCapabilities operations:
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(soap*) allocate and default initialize
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilities* soap_new_req_tt__SecurityCapabilities(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilities* soap_new_set_tt__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) serialize to a stream
/// - tt__SecurityCapabilities* tt__SecurityCapabilities::soap_dup(soap*) returns deep copy of tt__SecurityCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilities::soap_del() deep deletes tt__SecurityCapabilities data members, use only after tt__SecurityCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilities::soap_type() returns SOAP_TYPE_tt__SecurityCapabilities or derived type identifier
class tt__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.1" of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.2" of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnboardKeyGeneration" of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AccessPolicyConfig" of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "X.509Token" of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SAMLToken" of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "KerberosToken" of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RELToken" of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// @note class tt__SecurityCapabilitiesExtension operations:
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilitiesExtension* soap_new_req_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilitiesExtension* soap_new_set_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) serialize to a stream
/// - tt__SecurityCapabilitiesExtension* tt__SecurityCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__SecurityCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilitiesExtension::soap_del() deep deletes tt__SecurityCapabilitiesExtension data members, use only after tt__SecurityCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__SecurityCapabilitiesExtension or derived type identifier
class tt__SecurityCapabilitiesExtension
{ public:
/// Element "TLS1.0" of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// @note class tt__SecurityCapabilitiesExtension2 operations:
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilitiesExtension2* soap_new_req_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilitiesExtension2* soap_new_set_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) serialize to a stream
/// - tt__SecurityCapabilitiesExtension2* tt__SecurityCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__SecurityCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilitiesExtension2::soap_del() deep deletes tt__SecurityCapabilitiesExtension2 data members, use only after tt__SecurityCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__SecurityCapabilitiesExtension2 or derived type identifier
class tt__SecurityCapabilitiesExtension2
{ public:
/// Element "Dot1X" of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Vector of int of length 0..unbounded.
    std::vector<int                    > SupportedEAPMethod             0;	///< Multiple elements.
/// Element "RemoteUserHandling" of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// @note class tt__SystemCapabilities operations:
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(soap*) allocate and default initialize
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilities* soap_new_req_tt__SystemCapabilities(soap*, ...) allocate, set required members
/// - tt__SystemCapabilities* soap_new_set_tt__SystemCapabilities(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) serialize to a stream
/// - tt__SystemCapabilities* tt__SystemCapabilities::soap_dup(soap*) returns deep copy of tt__SystemCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilities::soap_del() deep deletes tt__SystemCapabilities data members, use only after tt__SystemCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilities::soap_type() returns SOAP_TYPE_tt__SystemCapabilities or derived type identifier
class tt__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscovery" of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemBackup" of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLogging" of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareUpgrade" of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__OnvifVersion* of length 1..unbounded.
    std::vector<tt__OnvifVersion*      > SupportedVersions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// @note class tt__SystemCapabilitiesExtension operations:
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilitiesExtension* soap_new_req_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__SystemCapabilitiesExtension* soap_new_set_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) serialize to a stream
/// - tt__SystemCapabilitiesExtension* tt__SystemCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__SystemCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilitiesExtension::soap_del() deep deletes tt__SystemCapabilitiesExtension data members, use only after tt__SystemCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__SystemCapabilitiesExtension or derived type identifier
class tt__SystemCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "HttpFirmwareUpgrade" of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// @note class tt__SystemCapabilitiesExtension2 operations:
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilitiesExtension2* soap_new_req_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__SystemCapabilitiesExtension2* soap_new_set_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) serialize to a stream
/// - tt__SystemCapabilitiesExtension2* tt__SystemCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__SystemCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilitiesExtension2::soap_del() deep deletes tt__SystemCapabilitiesExtension2 data members, use only after tt__SystemCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__SystemCapabilitiesExtension2 or derived type identifier
class tt__SystemCapabilitiesExtension2
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// @note class tt__OnvifVersion operations:
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(soap*) allocate and default initialize
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(soap*, int num) allocate and default initialize an array
/// - tt__OnvifVersion* soap_new_req_tt__OnvifVersion(soap*, ...) allocate, set required members
/// - tt__OnvifVersion* soap_new_set_tt__OnvifVersion(soap*, ...) allocate, set all public members
/// - tt__OnvifVersion::soap_default(soap*) default initialize members
/// - int soap_read_tt__OnvifVersion(soap*, tt__OnvifVersion*) deserialize from a stream
/// - int soap_write_tt__OnvifVersion(soap*, tt__OnvifVersion*) serialize to a stream
/// - tt__OnvifVersion* tt__OnvifVersion::soap_dup(soap*) returns deep copy of tt__OnvifVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OnvifVersion::soap_del() deep deletes tt__OnvifVersion data members, use only after tt__OnvifVersion::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OnvifVersion::soap_type() returns SOAP_TYPE_tt__OnvifVersion or derived type identifier
class tt__OnvifVersion
{ public:
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number.
///   If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
///   Otherwise, minor number is month of release, such as "06" for June.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// @note class tt__ImagingCapabilities operations:
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(soap*) allocate and default initialize
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ImagingCapabilities* soap_new_req_tt__ImagingCapabilities(soap*, ...) allocate, set required members
/// - tt__ImagingCapabilities* soap_new_set_tt__ImagingCapabilities(soap*, ...) allocate, set all public members
/// - tt__ImagingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) deserialize from a stream
/// - int soap_write_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) serialize to a stream
/// - tt__ImagingCapabilities* tt__ImagingCapabilities::soap_dup(soap*) returns deep copy of tt__ImagingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingCapabilities::soap_del() deep deletes tt__ImagingCapabilities data members, use only after tt__ImagingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingCapabilities::soap_type() returns SOAP_TYPE_tt__ImagingCapabilities or derived type identifier
class tt__ImagingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// @note class tt__PTZCapabilities operations:
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(soap*) allocate and default initialize
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__PTZCapabilities* soap_new_req_tt__PTZCapabilities(soap*, ...) allocate, set required members
/// - tt__PTZCapabilities* soap_new_set_tt__PTZCapabilities(soap*, ...) allocate, set all public members
/// - tt__PTZCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) deserialize from a stream
/// - int soap_write_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) serialize to a stream
/// - tt__PTZCapabilities* tt__PTZCapabilities::soap_dup(soap*) returns deep copy of tt__PTZCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZCapabilities::soap_del() deep deletes tt__PTZCapabilities data members, use only after tt__PTZCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZCapabilities::soap_type() returns SOAP_TYPE_tt__PTZCapabilities or derived type identifier
class tt__PTZCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// @note class tt__DeviceIOCapabilities operations:
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(soap*) allocate and default initialize
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DeviceIOCapabilities* soap_new_req_tt__DeviceIOCapabilities(soap*, ...) allocate, set required members
/// - tt__DeviceIOCapabilities* soap_new_set_tt__DeviceIOCapabilities(soap*, ...) allocate, set all public members
/// - tt__DeviceIOCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) serialize to a stream
/// - tt__DeviceIOCapabilities* tt__DeviceIOCapabilities::soap_dup(soap*) returns deep copy of tt__DeviceIOCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceIOCapabilities::soap_del() deep deletes tt__DeviceIOCapabilities data members, use only after tt__DeviceIOCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceIOCapabilities::soap_type() returns SOAP_TYPE_tt__DeviceIOCapabilities or derived type identifier
class tt__DeviceIOCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// @note class tt__DisplayCapabilities operations:
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(soap*) allocate and default initialize
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DisplayCapabilities* soap_new_req_tt__DisplayCapabilities(soap*, ...) allocate, set required members
/// - tt__DisplayCapabilities* soap_new_set_tt__DisplayCapabilities(soap*, ...) allocate, set all public members
/// - tt__DisplayCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) serialize to a stream
/// - tt__DisplayCapabilities* tt__DisplayCapabilities::soap_dup(soap*) returns deep copy of tt__DisplayCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DisplayCapabilities::soap_del() deep deletes tt__DisplayCapabilities data members, use only after tt__DisplayCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DisplayCapabilities::soap_type() returns SOAP_TYPE_tt__DisplayCapabilities or derived type identifier
class tt__DisplayCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Element "FixedLayout" of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// @note class tt__RecordingCapabilities operations:
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(soap*) allocate and default initialize
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__RecordingCapabilities* soap_new_req_tt__RecordingCapabilities(soap*, ...) allocate, set required members
/// - tt__RecordingCapabilities* soap_new_set_tt__RecordingCapabilities(soap*, ...) allocate, set all public members
/// - tt__RecordingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) serialize to a stream
/// - tt__RecordingCapabilities* tt__RecordingCapabilities::soap_dup(soap*) returns deep copy of tt__RecordingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RecordingCapabilities::soap_del() deep deletes tt__RecordingCapabilities data members, use only after tt__RecordingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RecordingCapabilities::soap_type() returns SOAP_TYPE_tt__RecordingCapabilities or derived type identifier
class tt__RecordingCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// @note class tt__SearchCapabilities operations:
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(soap*) allocate and default initialize
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SearchCapabilities* soap_new_req_tt__SearchCapabilities(soap*, ...) allocate, set required members
/// - tt__SearchCapabilities* soap_new_set_tt__SearchCapabilities(soap*, ...) allocate, set all public members
/// - tt__SearchCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) deserialize from a stream
/// - int soap_write_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) serialize to a stream
/// - tt__SearchCapabilities* tt__SearchCapabilities::soap_dup(soap*) returns deep copy of tt__SearchCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SearchCapabilities::soap_del() deep deletes tt__SearchCapabilities data members, use only after tt__SearchCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SearchCapabilities::soap_type() returns SOAP_TYPE_tt__SearchCapabilities or derived type identifier
class tt__SearchCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// @note class tt__ReplayCapabilities operations:
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(soap*) allocate and default initialize
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ReplayCapabilities* soap_new_req_tt__ReplayCapabilities(soap*, ...) allocate, set required members
/// - tt__ReplayCapabilities* soap_new_set_tt__ReplayCapabilities(soap*, ...) allocate, set all public members
/// - tt__ReplayCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) serialize to a stream
/// - tt__ReplayCapabilities* tt__ReplayCapabilities::soap_dup(soap*) returns deep copy of tt__ReplayCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReplayCapabilities::soap_del() deep deletes tt__ReplayCapabilities data members, use only after tt__ReplayCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReplayCapabilities::soap_type() returns SOAP_TYPE_tt__ReplayCapabilities or derived type identifier
class tt__ReplayCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// @note class tt__ReceiverCapabilities operations:
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(soap*) allocate and default initialize
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ReceiverCapabilities* soap_new_req_tt__ReceiverCapabilities(soap*, ...) allocate, set required members
/// - tt__ReceiverCapabilities* soap_new_set_tt__ReceiverCapabilities(soap*, ...) allocate, set all public members
/// - tt__ReceiverCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) serialize to a stream
/// - tt__ReceiverCapabilities* tt__ReceiverCapabilities::soap_dup(soap*) returns deep copy of tt__ReceiverCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReceiverCapabilities::soap_del() deep deletes tt__ReceiverCapabilities data members, use only after tt__ReceiverCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReceiverCapabilities::soap_type() returns SOAP_TYPE_tt__ReceiverCapabilities or derived type identifier
class tt__ReceiverCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_Multicast" of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedReceivers" of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRTSPURILength" of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// @note class tt__AnalyticsDeviceCapabilities operations:
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(soap*) allocate and default initialize
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsDeviceCapabilities* soap_new_req_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set required members
/// - tt__AnalyticsDeviceCapabilities* soap_new_set_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set all public members
/// - tt__AnalyticsDeviceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) serialize to a stream
/// - tt__AnalyticsDeviceCapabilities* tt__AnalyticsDeviceCapabilities::soap_dup(soap*) returns deep copy of tt__AnalyticsDeviceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsDeviceCapabilities::soap_del() deep deletes tt__AnalyticsDeviceCapabilities data members, use only after tt__AnalyticsDeviceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsDeviceCapabilities::soap_type() returns SOAP_TYPE_tt__AnalyticsDeviceCapabilities or derived type identifier
class tt__AnalyticsDeviceCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// @note class tt__AnalyticsDeviceExtension operations:
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(soap*) allocate and default initialize
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsDeviceExtension* soap_new_req_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set required members
/// - tt__AnalyticsDeviceExtension* soap_new_set_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set all public members
/// - tt__AnalyticsDeviceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) serialize to a stream
/// - tt__AnalyticsDeviceExtension* tt__AnalyticsDeviceExtension::soap_dup(soap*) returns deep copy of tt__AnalyticsDeviceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsDeviceExtension::soap_del() deep deletes tt__AnalyticsDeviceExtension data members, use only after tt__AnalyticsDeviceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsDeviceExtension::soap_type() returns SOAP_TYPE_tt__AnalyticsDeviceExtension or derived type identifier
class tt__AnalyticsDeviceExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// @note class tt__SystemLog operations:
/// - tt__SystemLog* soap_new_tt__SystemLog(soap*) allocate and default initialize
/// - tt__SystemLog* soap_new_tt__SystemLog(soap*, int num) allocate and default initialize an array
/// - tt__SystemLog* soap_new_req_tt__SystemLog(soap*, ...) allocate, set required members
/// - tt__SystemLog* soap_new_set_tt__SystemLog(soap*, ...) allocate, set all public members
/// - tt__SystemLog::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLog(soap*, tt__SystemLog*) deserialize from a stream
/// - int soap_write_tt__SystemLog(soap*, tt__SystemLog*) serialize to a stream
/// - tt__SystemLog* tt__SystemLog::soap_dup(soap*) returns deep copy of tt__SystemLog, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLog::soap_del() deep deletes tt__SystemLog data members, use only after tt__SystemLog::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLog::soap_type() returns SOAP_TYPE_tt__SystemLog or derived type identifier
class tt__SystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// @note class tt__SupportInformation operations:
/// - tt__SupportInformation* soap_new_tt__SupportInformation(soap*) allocate and default initialize
/// - tt__SupportInformation* soap_new_tt__SupportInformation(soap*, int num) allocate and default initialize an array
/// - tt__SupportInformation* soap_new_req_tt__SupportInformation(soap*, ...) allocate, set required members
/// - tt__SupportInformation* soap_new_set_tt__SupportInformation(soap*, ...) allocate, set all public members
/// - tt__SupportInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__SupportInformation(soap*, tt__SupportInformation*) deserialize from a stream
/// - int soap_write_tt__SupportInformation(soap*, tt__SupportInformation*) serialize to a stream
/// - tt__SupportInformation* tt__SupportInformation::soap_dup(soap*) returns deep copy of tt__SupportInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SupportInformation::soap_del() deep deletes tt__SupportInformation data members, use only after tt__SupportInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SupportInformation::soap_type() returns SOAP_TYPE_tt__SupportInformation or derived type identifier
class tt__SupportInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// @note class tt__BinaryData operations:
/// - tt__BinaryData* soap_new_tt__BinaryData(soap*) allocate and default initialize
/// - tt__BinaryData* soap_new_tt__BinaryData(soap*, int num) allocate and default initialize an array
/// - tt__BinaryData* soap_new_req_tt__BinaryData(soap*, ...) allocate, set required members
/// - tt__BinaryData* soap_new_set_tt__BinaryData(soap*, ...) allocate, set all public members
/// - tt__BinaryData::soap_default(soap*) default initialize members
/// - int soap_read_tt__BinaryData(soap*, tt__BinaryData*) deserialize from a stream
/// - int soap_write_tt__BinaryData(soap*, tt__BinaryData*) serialize to a stream
/// - tt__BinaryData* tt__BinaryData::soap_dup(soap*) returns deep copy of tt__BinaryData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BinaryData::soap_del() deep deletes tt__BinaryData data members, use only after tt__BinaryData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BinaryData::soap_type() returns SOAP_TYPE_tt__BinaryData or derived type identifier
class tt__BinaryData
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// @note class tt__AttachmentData operations:
/// - tt__AttachmentData* soap_new_tt__AttachmentData(soap*) allocate and default initialize
/// - tt__AttachmentData* soap_new_tt__AttachmentData(soap*, int num) allocate and default initialize an array
/// - tt__AttachmentData* soap_new_req_tt__AttachmentData(soap*, ...) allocate, set required members
/// - tt__AttachmentData* soap_new_set_tt__AttachmentData(soap*, ...) allocate, set all public members
/// - tt__AttachmentData::soap_default(soap*) default initialize members
/// - int soap_read_tt__AttachmentData(soap*, tt__AttachmentData*) deserialize from a stream
/// - int soap_write_tt__AttachmentData(soap*, tt__AttachmentData*) serialize to a stream
/// - tt__AttachmentData* tt__AttachmentData::soap_dup(soap*) returns deep copy of tt__AttachmentData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AttachmentData::soap_del() deep deletes tt__AttachmentData data members, use only after tt__AttachmentData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AttachmentData::soap_type() returns SOAP_TYPE_tt__AttachmentData or derived type identifier
class tt__AttachmentData
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// @note class tt__BackupFile operations:
/// - tt__BackupFile* soap_new_tt__BackupFile(soap*) allocate and default initialize
/// - tt__BackupFile* soap_new_tt__BackupFile(soap*, int num) allocate and default initialize an array
/// - tt__BackupFile* soap_new_req_tt__BackupFile(soap*, ...) allocate, set required members
/// - tt__BackupFile* soap_new_set_tt__BackupFile(soap*, ...) allocate, set all public members
/// - tt__BackupFile::soap_default(soap*) default initialize members
/// - int soap_read_tt__BackupFile(soap*, tt__BackupFile*) deserialize from a stream
/// - int soap_write_tt__BackupFile(soap*, tt__BackupFile*) serialize to a stream
/// - tt__BackupFile* tt__BackupFile::soap_dup(soap*) returns deep copy of tt__BackupFile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BackupFile::soap_del() deep deletes tt__BackupFile data members, use only after tt__BackupFile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BackupFile::soap_type() returns SOAP_TYPE_tt__BackupFile or derived type identifier
class tt__BackupFile
{ public:
/// Element "Name" of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// @note class tt__SystemLogUriList operations:
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(soap*) allocate and default initialize
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(soap*, int num) allocate and default initialize an array
/// - tt__SystemLogUriList* soap_new_req_tt__SystemLogUriList(soap*, ...) allocate, set required members
/// - tt__SystemLogUriList* soap_new_set_tt__SystemLogUriList(soap*, ...) allocate, set all public members
/// - tt__SystemLogUriList::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) deserialize from a stream
/// - int soap_write_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) serialize to a stream
/// - tt__SystemLogUriList* tt__SystemLogUriList::soap_dup(soap*) returns deep copy of tt__SystemLogUriList, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLogUriList::soap_del() deep deletes tt__SystemLogUriList data members, use only after tt__SystemLogUriList::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLogUriList::soap_type() returns SOAP_TYPE_tt__SystemLogUriList or derived type identifier
class tt__SystemLogUriList
{ public:
/// Vector of tt__SystemLogUri* of length 0..unbounded.
    std::vector<tt__SystemLogUri*      > SystemLog                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// @note class tt__SystemLogUri operations:
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(soap*) allocate and default initialize
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(soap*, int num) allocate and default initialize an array
/// - tt__SystemLogUri* soap_new_req_tt__SystemLogUri(soap*, ...) allocate, set required members
/// - tt__SystemLogUri* soap_new_set_tt__SystemLogUri(soap*, ...) allocate, set all public members
/// - tt__SystemLogUri::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLogUri(soap*, tt__SystemLogUri*) deserialize from a stream
/// - int soap_write_tt__SystemLogUri(soap*, tt__SystemLogUri*) serialize to a stream
/// - tt__SystemLogUri* tt__SystemLogUri::soap_dup(soap*) returns deep copy of tt__SystemLogUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLogUri::soap_del() deep deletes tt__SystemLogUri data members, use only after tt__SystemLogUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLogUri::soap_type() returns SOAP_TYPE_tt__SystemLogUri or derived type identifier
class tt__SystemLogUri
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__SystemDateTime operations:
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(soap*) allocate and default initialize
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(soap*, int num) allocate and default initialize an array
/// - tt__SystemDateTime* soap_new_req_tt__SystemDateTime(soap*, ...) allocate, set required members
/// - tt__SystemDateTime* soap_new_set_tt__SystemDateTime(soap*, ...) allocate, set all public members
/// - tt__SystemDateTime::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemDateTime(soap*, tt__SystemDateTime*) deserialize from a stream
/// - int soap_write_tt__SystemDateTime(soap*, tt__SystemDateTime*) serialize to a stream
/// - tt__SystemDateTime* tt__SystemDateTime::soap_dup(soap*) returns deep copy of tt__SystemDateTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemDateTime::soap_del() deep deletes tt__SystemDateTime data members, use only after tt__SystemDateTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemDateTime::soap_type() returns SOAP_TYPE_tt__SystemDateTime or derived type identifier
class tt__SystemDateTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// @note class tt__SystemDateTimeExtension operations:
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(soap*) allocate and default initialize
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(soap*, int num) allocate and default initialize an array
/// - tt__SystemDateTimeExtension* soap_new_req_tt__SystemDateTimeExtension(soap*, ...) allocate, set required members
/// - tt__SystemDateTimeExtension* soap_new_set_tt__SystemDateTimeExtension(soap*, ...) allocate, set all public members
/// - tt__SystemDateTimeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) deserialize from a stream
/// - int soap_write_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) serialize to a stream
/// - tt__SystemDateTimeExtension* tt__SystemDateTimeExtension::soap_dup(soap*) returns deep copy of tt__SystemDateTimeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemDateTimeExtension::soap_del() deep deletes tt__SystemDateTimeExtension data members, use only after tt__SystemDateTimeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemDateTimeExtension::soap_type() returns SOAP_TYPE_tt__SystemDateTimeExtension or derived type identifier
class tt__SystemDateTimeExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// @note class tt__DateTime operations:
/// - tt__DateTime* soap_new_tt__DateTime(soap*) allocate and default initialize
/// - tt__DateTime* soap_new_tt__DateTime(soap*, int num) allocate and default initialize an array
/// - tt__DateTime* soap_new_req_tt__DateTime(soap*, ...) allocate, set required members
/// - tt__DateTime* soap_new_set_tt__DateTime(soap*, ...) allocate, set all public members
/// - tt__DateTime::soap_default(soap*) default initialize members
/// - int soap_read_tt__DateTime(soap*, tt__DateTime*) deserialize from a stream
/// - int soap_write_tt__DateTime(soap*, tt__DateTime*) serialize to a stream
/// - tt__DateTime* tt__DateTime::soap_dup(soap*) returns deep copy of tt__DateTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DateTime::soap_del() deep deletes tt__DateTime data members, use only after tt__DateTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DateTime::soap_type() returns SOAP_TYPE_tt__DateTime or derived type identifier
class tt__DateTime
{ public:
/// Element "Time" of type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element "Date" of type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// @note class tt__Date operations:
/// - tt__Date* soap_new_tt__Date(soap*) allocate and default initialize
/// - tt__Date* soap_new_tt__Date(soap*, int num) allocate and default initialize an array
/// - tt__Date* soap_new_req_tt__Date(soap*, ...) allocate, set required members
/// - tt__Date* soap_new_set_tt__Date(soap*, ...) allocate, set all public members
/// - tt__Date::soap_default(soap*) default initialize members
/// - int soap_read_tt__Date(soap*, tt__Date*) deserialize from a stream
/// - int soap_write_tt__Date(soap*, tt__Date*) serialize to a stream
/// - tt__Date* tt__Date::soap_dup(soap*) returns deep copy of tt__Date, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Date::soap_del() deep deletes tt__Date data members, use only after tt__Date::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Date::soap_type() returns SOAP_TYPE_tt__Date or derived type identifier
class tt__Date
{ public:
/// Element "Year" of type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
///
/// Element "Month" of type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
///
/// Element "Day" of type xs:int.
    int                                  Day                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// @note class tt__Time operations:
/// - tt__Time* soap_new_tt__Time(soap*) allocate and default initialize
/// - tt__Time* soap_new_tt__Time(soap*, int num) allocate and default initialize an array
/// - tt__Time* soap_new_req_tt__Time(soap*, ...) allocate, set required members
/// - tt__Time* soap_new_set_tt__Time(soap*, ...) allocate, set all public members
/// - tt__Time::soap_default(soap*) default initialize members
/// - int soap_read_tt__Time(soap*, tt__Time*) deserialize from a stream
/// - int soap_write_tt__Time(soap*, tt__Time*) serialize to a stream
/// - tt__Time* tt__Time::soap_dup(soap*) returns deep copy of tt__Time, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Time::soap_del() deep deletes tt__Time data members, use only after tt__Time::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Time::soap_type() returns SOAP_TYPE_tt__Time or derived type identifier
class tt__Time
{ public:
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
///
/// Element "Hour" of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minute" of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
///
/// Element "Second" of type xs:int.
    int                                  Second                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__TimeZone operations:
/// - tt__TimeZone* soap_new_tt__TimeZone(soap*) allocate and default initialize
/// - tt__TimeZone* soap_new_tt__TimeZone(soap*, int num) allocate and default initialize an array
/// - tt__TimeZone* soap_new_req_tt__TimeZone(soap*, ...) allocate, set required members
/// - tt__TimeZone* soap_new_set_tt__TimeZone(soap*, ...) allocate, set all public members
/// - tt__TimeZone::soap_default(soap*) default initialize members
/// - int soap_read_tt__TimeZone(soap*, tt__TimeZone*) deserialize from a stream
/// - int soap_write_tt__TimeZone(soap*, tt__TimeZone*) serialize to a stream
/// - tt__TimeZone* tt__TimeZone::soap_dup(soap*) returns deep copy of tt__TimeZone, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__TimeZone::soap_del() deep deletes tt__TimeZone data members, use only after tt__TimeZone::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__TimeZone::soap_type() returns SOAP_TYPE_tt__TimeZone or derived type identifier
class tt__TimeZone
{ public:
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
///
/// Element "TZ" of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// @note class tt__RemoteUser operations:
/// - tt__RemoteUser* soap_new_tt__RemoteUser(soap*) allocate and default initialize
/// - tt__RemoteUser* soap_new_tt__RemoteUser(soap*, int num) allocate and default initialize an array
/// - tt__RemoteUser* soap_new_req_tt__RemoteUser(soap*, ...) allocate, set required members
/// - tt__RemoteUser* soap_new_set_tt__RemoteUser(soap*, ...) allocate, set all public members
/// - tt__RemoteUser::soap_default(soap*) default initialize members
/// - int soap_read_tt__RemoteUser(soap*, tt__RemoteUser*) deserialize from a stream
/// - int soap_write_tt__RemoteUser(soap*, tt__RemoteUser*) serialize to a stream
/// - tt__RemoteUser* tt__RemoteUser::soap_dup(soap*) returns deep copy of tt__RemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RemoteUser::soap_del() deep deletes tt__RemoteUser data members, use only after tt__RemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RemoteUser::soap_type() returns SOAP_TYPE_tt__RemoteUser or derived type identifier
class tt__RemoteUser
{ public:
/// Element "Username" of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// @note class tt__User operations:
/// - tt__User* soap_new_tt__User(soap*) allocate and default initialize
/// - tt__User* soap_new_tt__User(soap*, int num) allocate and default initialize an array
/// - tt__User* soap_new_req_tt__User(soap*, ...) allocate, set required members
/// - tt__User* soap_new_set_tt__User(soap*, ...) allocate, set all public members
/// - tt__User::soap_default(soap*) default initialize members
/// - int soap_read_tt__User(soap*, tt__User*) deserialize from a stream
/// - int soap_write_tt__User(soap*, tt__User*) serialize to a stream
/// - tt__User* tt__User::soap_dup(soap*) returns deep copy of tt__User, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__User::soap_del() deep deletes tt__User data members, use only after tt__User::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__User::soap_type() returns SOAP_TYPE_tt__User or derived type identifier
class tt__User
{ public:
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Username" of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserLevel" of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// @note class tt__UserExtension operations:
/// - tt__UserExtension* soap_new_tt__UserExtension(soap*) allocate and default initialize
/// - tt__UserExtension* soap_new_tt__UserExtension(soap*, int num) allocate and default initialize an array
/// - tt__UserExtension* soap_new_req_tt__UserExtension(soap*, ...) allocate, set required members
/// - tt__UserExtension* soap_new_set_tt__UserExtension(soap*, ...) allocate, set all public members
/// - tt__UserExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__UserExtension(soap*, tt__UserExtension*) deserialize from a stream
/// - int soap_write_tt__UserExtension(soap*, tt__UserExtension*) serialize to a stream
/// - tt__UserExtension* tt__UserExtension::soap_dup(soap*) returns deep copy of tt__UserExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__UserExtension::soap_del() deep deletes tt__UserExtension data members, use only after tt__UserExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__UserExtension::soap_type() returns SOAP_TYPE_tt__UserExtension or derived type identifier
class tt__UserExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// @note class tt__Certificate operations:
/// - tt__Certificate* soap_new_tt__Certificate(soap*) allocate and default initialize
/// - tt__Certificate* soap_new_tt__Certificate(soap*, int num) allocate and default initialize an array
/// - tt__Certificate* soap_new_req_tt__Certificate(soap*, ...) allocate, set required members
/// - tt__Certificate* soap_new_set_tt__Certificate(soap*, ...) allocate, set all public members
/// - tt__Certificate::soap_default(soap*) default initialize members
/// - int soap_read_tt__Certificate(soap*, tt__Certificate*) deserialize from a stream
/// - int soap_write_tt__Certificate(soap*, tt__Certificate*) serialize to a stream
/// - tt__Certificate* tt__Certificate::soap_dup(soap*) returns deep copy of tt__Certificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Certificate::soap_del() deep deletes tt__Certificate data members, use only after tt__Certificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Certificate::soap_type() returns SOAP_TYPE_tt__Certificate or derived type identifier
class tt__Certificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// @note class tt__CertificateStatus operations:
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(soap*) allocate and default initialize
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(soap*, int num) allocate and default initialize an array
/// - tt__CertificateStatus* soap_new_req_tt__CertificateStatus(soap*, ...) allocate, set required members
/// - tt__CertificateStatus* soap_new_set_tt__CertificateStatus(soap*, ...) allocate, set all public members
/// - tt__CertificateStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateStatus(soap*, tt__CertificateStatus*) deserialize from a stream
/// - int soap_write_tt__CertificateStatus(soap*, tt__CertificateStatus*) serialize to a stream
/// - tt__CertificateStatus* tt__CertificateStatus::soap_dup(soap*) returns deep copy of tt__CertificateStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateStatus::soap_del() deep deletes tt__CertificateStatus data members, use only after tt__CertificateStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateStatus::soap_type() returns SOAP_TYPE_tt__CertificateStatus or derived type identifier
class tt__CertificateStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// @note class tt__CertificateWithPrivateKey operations:
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(soap*) allocate and default initialize
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(soap*, int num) allocate and default initialize an array
/// - tt__CertificateWithPrivateKey* soap_new_req_tt__CertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - tt__CertificateWithPrivateKey* soap_new_set_tt__CertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - tt__CertificateWithPrivateKey::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) serialize to a stream
/// - tt__CertificateWithPrivateKey* tt__CertificateWithPrivateKey::soap_dup(soap*) returns deep copy of tt__CertificateWithPrivateKey, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateWithPrivateKey::soap_del() deep deletes tt__CertificateWithPrivateKey data members, use only after tt__CertificateWithPrivateKey::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateWithPrivateKey::soap_type() returns SOAP_TYPE_tt__CertificateWithPrivateKey or derived type identifier
class tt__CertificateWithPrivateKey
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element "PrivateKey" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// @note class tt__CertificateInformation operations:
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(soap*) allocate and default initialize
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(soap*, int num) allocate and default initialize an array
/// - tt__CertificateInformation* soap_new_req_tt__CertificateInformation(soap*, ...) allocate, set required members
/// - tt__CertificateInformation* soap_new_set_tt__CertificateInformation(soap*, ...) allocate, set all public members
/// - tt__CertificateInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateInformation(soap*, tt__CertificateInformation*) deserialize from a stream
/// - int soap_write_tt__CertificateInformation(soap*, tt__CertificateInformation*) serialize to a stream
/// - tt__CertificateInformation* tt__CertificateInformation::soap_dup(soap*) returns deep copy of tt__CertificateInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateInformation::soap_del() deep deletes tt__CertificateInformation data members, use only after tt__CertificateInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateInformation::soap_type() returns SOAP_TYPE_tt__CertificateInformation or derived type identifier
class tt__CertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element "SerialNum" of type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
///
/// Element "SignatureAlgorithm" of type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// @note class tt__CertificateInformationExtension operations:
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(soap*) allocate and default initialize
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__CertificateInformationExtension* soap_new_req_tt__CertificateInformationExtension(soap*, ...) allocate, set required members
/// - tt__CertificateInformationExtension* soap_new_set_tt__CertificateInformationExtension(soap*, ...) allocate, set all public members
/// - tt__CertificateInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) serialize to a stream
/// - tt__CertificateInformationExtension* tt__CertificateInformationExtension::soap_dup(soap*) returns deep copy of tt__CertificateInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateInformationExtension::soap_del() deep deletes tt__CertificateInformationExtension data members, use only after tt__CertificateInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateInformationExtension::soap_type() returns SOAP_TYPE_tt__CertificateInformationExtension or derived type identifier
class tt__CertificateInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// @note class tt__Dot1XConfiguration operations:
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(soap*) allocate and default initialize
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__Dot1XConfiguration* soap_new_req_tt__Dot1XConfiguration(soap*, ...) allocate, set required members
/// - tt__Dot1XConfiguration* soap_new_set_tt__Dot1XConfiguration(soap*, ...) allocate, set all public members
/// - tt__Dot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) serialize to a stream
/// - tt__Dot1XConfiguration* tt__Dot1XConfiguration::soap_dup(soap*) returns deep copy of tt__Dot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot1XConfiguration::soap_del() deep deletes tt__Dot1XConfiguration data members, use only after tt__Dot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot1XConfiguration::soap_type() returns SOAP_TYPE_tt__Dot1XConfiguration or derived type identifier
class tt__Dot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element "AnonymousID" of type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "EAPMethod" of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > CACertificateID                0;	///< Multiple elements.
/// Element "EAPMethodConfiguration" of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// @note class tt__Dot1XConfigurationExtension operations:
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(soap*) allocate and default initialize
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot1XConfigurationExtension* soap_new_req_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__Dot1XConfigurationExtension* soap_new_set_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__Dot1XConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) serialize to a stream
/// - tt__Dot1XConfigurationExtension* tt__Dot1XConfigurationExtension::soap_dup(soap*) returns deep copy of tt__Dot1XConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot1XConfigurationExtension::soap_del() deep deletes tt__Dot1XConfigurationExtension data members, use only after tt__Dot1XConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot1XConfigurationExtension::soap_type() returns SOAP_TYPE_tt__Dot1XConfigurationExtension or derived type identifier
class tt__Dot1XConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// @note class tt__EAPMethodConfiguration operations:
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(soap*) allocate and default initialize
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__EAPMethodConfiguration* soap_new_req_tt__EAPMethodConfiguration(soap*, ...) allocate, set required members
/// - tt__EAPMethodConfiguration* soap_new_set_tt__EAPMethodConfiguration(soap*, ...) allocate, set all public members
/// - tt__EAPMethodConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) deserialize from a stream
/// - int soap_write_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) serialize to a stream
/// - tt__EAPMethodConfiguration* tt__EAPMethodConfiguration::soap_dup(soap*) returns deep copy of tt__EAPMethodConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EAPMethodConfiguration::soap_del() deep deletes tt__EAPMethodConfiguration data members, use only after tt__EAPMethodConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EAPMethodConfiguration::soap_type() returns SOAP_TYPE_tt__EAPMethodConfiguration or derived type identifier
class tt__EAPMethodConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLSConfiguration" of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// @note class tt__EapMethodExtension operations:
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(soap*) allocate and default initialize
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(soap*, int num) allocate and default initialize an array
/// - tt__EapMethodExtension* soap_new_req_tt__EapMethodExtension(soap*, ...) allocate, set required members
/// - tt__EapMethodExtension* soap_new_set_tt__EapMethodExtension(soap*, ...) allocate, set all public members
/// - tt__EapMethodExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) deserialize from a stream
/// - int soap_write_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) serialize to a stream
/// - tt__EapMethodExtension* tt__EapMethodExtension::soap_dup(soap*) returns deep copy of tt__EapMethodExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EapMethodExtension::soap_del() deep deletes tt__EapMethodExtension data members, use only after tt__EapMethodExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EapMethodExtension::soap_type() returns SOAP_TYPE_tt__EapMethodExtension or derived type identifier
class tt__EapMethodExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// @note class tt__TLSConfiguration operations:
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(soap*) allocate and default initialize
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__TLSConfiguration* soap_new_req_tt__TLSConfiguration(soap*, ...) allocate, set required members
/// - tt__TLSConfiguration* soap_new_set_tt__TLSConfiguration(soap*, ...) allocate, set all public members
/// - tt__TLSConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) deserialize from a stream
/// - int soap_write_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) serialize to a stream
/// - tt__TLSConfiguration* tt__TLSConfiguration::soap_dup(soap*) returns deep copy of tt__TLSConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__TLSConfiguration::soap_del() deep deletes tt__TLSConfiguration data members, use only after tt__TLSConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__TLSConfiguration::soap_type() returns SOAP_TYPE_tt__TLSConfiguration or derived type identifier
class tt__TLSConfiguration
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// @note class tt__RelayOutputSettings operations:
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(soap*) allocate and default initialize
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(soap*, int num) allocate and default initialize an array
/// - tt__RelayOutputSettings* soap_new_req_tt__RelayOutputSettings(soap*, ...) allocate, set required members
/// - tt__RelayOutputSettings* soap_new_set_tt__RelayOutputSettings(soap*, ...) allocate, set all public members
/// - tt__RelayOutputSettings::soap_default(soap*) default initialize members
/// - int soap_read_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) deserialize from a stream
/// - int soap_write_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) serialize to a stream
/// - tt__RelayOutputSettings* tt__RelayOutputSettings::soap_dup(soap*) returns deep copy of tt__RelayOutputSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RelayOutputSettings::soap_del() deep deletes tt__RelayOutputSettings data members, use only after tt__RelayOutputSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RelayOutputSettings::soap_type() returns SOAP_TYPE_tt__RelayOutputSettings or derived type identifier
class tt__RelayOutputSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTime" of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "IdleState" of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNodeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlip is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Reverse is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlipOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReverseOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PanTiltLimits is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ZoomLimits is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpaces is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpacesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Space2DDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Space1DDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZSpeed is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPreset is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PresetTour is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusMove is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettings20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilization is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRange20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensation20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Exposure20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Defogging is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReduction is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReductionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polyline is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Config is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArray is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpression is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CellLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Layout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CodingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneOptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Receiver is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceReference is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// @note class tt__DateTimeRange operations:
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(soap*) allocate and default initialize
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(soap*, int num) allocate and default initialize an array
/// - tt__DateTimeRange* soap_new_req_tt__DateTimeRange(soap*, ...) allocate, set required members
/// - tt__DateTimeRange* soap_new_set_tt__DateTimeRange(soap*, ...) allocate, set all public members
/// - tt__DateTimeRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__DateTimeRange(soap*, tt__DateTimeRange*) deserialize from a stream
/// - int soap_write_tt__DateTimeRange(soap*, tt__DateTimeRange*) serialize to a stream
/// - tt__DateTimeRange* tt__DateTimeRange::soap_dup(soap*) returns deep copy of tt__DateTimeRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DateTimeRange::soap_del() deep deletes tt__DateTimeRange data members, use only after tt__DateTimeRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DateTimeRange::soap_type() returns SOAP_TYPE_tt__DateTimeRange or derived type identifier
class tt__DateTimeRange
{ public:
/// Element "From" of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSummary is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScope is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScopeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPositionFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindRecordingResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSourceInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingEventFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReplayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentification is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsState is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassCandidate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActiveConnection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatusExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorspaceRange is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePath is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolygonOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(soap*) allocate and default initialize
/// - tt__IntRange* soap_new_tt__IntRange(soap*, int num) allocate and default initialize an array
/// - tt__IntRange* soap_new_req_tt__IntRange(soap*, ...) allocate, set required members
/// - tt__IntRange* soap_new_set_tt__IntRange(soap*, ...) allocate, set all public members
/// - tt__IntRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a stream
/// - int soap_write_tt__IntRange(soap*, tt__IntRange*) serialize to a stream
/// - tt__IntRange* tt__IntRange::soap_dup(soap*) returns deep copy of tt__IntRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRange::soap_del() deep deletes tt__IntRange data members, use only after tt__IntRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRange::soap_type() returns SOAP_TYPE_tt__IntRange or derived type identifier
class tt__IntRange
{ public:
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector2D is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector1D is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZVector is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZMoveStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Vector is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Rectangle is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polygon is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Color is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorCovariance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TransformationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
/// @note class tt__GeoLocation operations:
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*) allocate and default initialize
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*, int num) allocate and default initialize an array
/// - tt__GeoLocation* soap_new_req_tt__GeoLocation(soap*, ...) allocate, set required members
/// - tt__GeoLocation* soap_new_set_tt__GeoLocation(soap*, ...) allocate, set all public members
/// - tt__GeoLocation::soap_default(soap*) default initialize members
/// - int soap_read_tt__GeoLocation(soap*, tt__GeoLocation*) deserialize from a stream
/// - int soap_write_tt__GeoLocation(soap*, tt__GeoLocation*) serialize to a stream
/// - tt__GeoLocation* tt__GeoLocation::soap_dup(soap*) returns deep copy of tt__GeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__GeoLocation::soap_del() deep deletes tt__GeoLocation data members, use only after tt__GeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__GeoLocation::soap_type() returns SOAP_TYPE_tt__GeoLocation or derived type identifier
class tt__GeoLocation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
///
/// @note class tt__GeoOrientation operations:
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(soap*) allocate and default initialize
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(soap*, int num) allocate and default initialize an array
/// - tt__GeoOrientation* soap_new_req_tt__GeoOrientation(soap*, ...) allocate, set required members
/// - tt__GeoOrientation* soap_new_set_tt__GeoOrientation(soap*, ...) allocate, set all public members
/// - tt__GeoOrientation::soap_default(soap*) default initialize members
/// - int soap_read_tt__GeoOrientation(soap*, tt__GeoOrientation*) deserialize from a stream
/// - int soap_write_tt__GeoOrientation(soap*, tt__GeoOrientation*) serialize to a stream
/// - tt__GeoOrientation* tt__GeoOrientation::soap_dup(soap*) returns deep copy of tt__GeoOrientation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__GeoOrientation::soap_del() deep deletes tt__GeoOrientation data members, use only after tt__GeoOrientation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__GeoOrientation::soap_type() returns SOAP_TYPE_tt__GeoOrientation or derived type identifier
class tt__GeoOrientation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pitch" of type xs:float.
  @ float*                               pitch                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "yaw" of type xs:float.
  @ float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
///
/// @note class tt__LocalLocation operations:
/// - tt__LocalLocation* soap_new_tt__LocalLocation(soap*) allocate and default initialize
/// - tt__LocalLocation* soap_new_tt__LocalLocation(soap*, int num) allocate and default initialize an array
/// - tt__LocalLocation* soap_new_req_tt__LocalLocation(soap*, ...) allocate, set required members
/// - tt__LocalLocation* soap_new_set_tt__LocalLocation(soap*, ...) allocate, set all public members
/// - tt__LocalLocation::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocalLocation(soap*, tt__LocalLocation*) deserialize from a stream
/// - int soap_write_tt__LocalLocation(soap*, tt__LocalLocation*) serialize to a stream
/// - tt__LocalLocation* tt__LocalLocation::soap_dup(soap*) returns deep copy of tt__LocalLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocalLocation::soap_del() deep deletes tt__LocalLocation data members, use only after tt__LocalLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocalLocation::soap_type() returns SOAP_TYPE_tt__LocalLocation or derived type identifier
class tt__LocalLocation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Offset in meters from the sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "z" of type xs:float.
  @ float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
///
/// @note class tt__LocalOrientation operations:
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(soap*) allocate and default initialize
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(soap*, int num) allocate and default initialize an array
/// - tt__LocalOrientation* soap_new_req_tt__LocalOrientation(soap*, ...) allocate, set required members
/// - tt__LocalOrientation* soap_new_set_tt__LocalOrientation(soap*, ...) allocate, set all public members
/// - tt__LocalOrientation::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocalOrientation(soap*, tt__LocalOrientation*) deserialize from a stream
/// - int soap_write_tt__LocalOrientation(soap*, tt__LocalOrientation*) serialize to a stream
/// - tt__LocalOrientation* tt__LocalOrientation::soap_dup(soap*) returns deep copy of tt__LocalOrientation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocalOrientation::soap_del() deep deletes tt__LocalOrientation data members, use only after tt__LocalOrientation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocalOrientation::soap_type() returns SOAP_TYPE_tt__LocalOrientation or derived type identifier
class tt__LocalOrientation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pan" of type xs:float.
  @ float*                               pan                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "tilt" of type xs:float.
  @ float*                               tilt                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
///
/// @note class tt__LocationEntity operations:
/// - tt__LocationEntity* soap_new_tt__LocationEntity(soap*) allocate and default initialize
/// - tt__LocationEntity* soap_new_tt__LocationEntity(soap*, int num) allocate and default initialize an array
/// - tt__LocationEntity* soap_new_req_tt__LocationEntity(soap*, ...) allocate, set required members
/// - tt__LocationEntity* soap_new_set_tt__LocationEntity(soap*, ...) allocate, set all public members
/// - tt__LocationEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocationEntity(soap*, tt__LocationEntity*) deserialize from a stream
/// - int soap_write_tt__LocationEntity(soap*, tt__LocationEntity*) serialize to a stream
/// - tt__LocationEntity* tt__LocationEntity::soap_dup(soap*) returns deep copy of tt__LocationEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocationEntity::soap_del() deep deletes tt__LocationEntity data members, use only after tt__LocationEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocationEntity::soap_type() returns SOAP_TYPE_tt__LocationEntity or derived type identifier
class tt__LocationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Location on earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Orientation relative to earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoOrientation" of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    tt__GeoOrientation*                  GeoOrientation                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor location offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalLocation" of type "http://www.onvif.org/ver10/schema":LocalLocation.
    tt__LocalLocation*                   LocalLocation                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor orientation offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalOrientation" of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    tt__LocalOrientation*                LocalOrientation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Entity" of type xs:string.
  @ std::string*                         Entity                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional entity token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  Token                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If this value is true the entity cannot be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Fixed" of type xs:boolean.
  @ bool*                                Fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the XAddr of another devices DeviceManagement service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoSource" of type xs:anyURI.
  @ xsd__anyURI*                         GeoSource                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If set the geo location is obtained internally.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type xs:boolean.
  @ bool*                                AutoGeo                        0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
// Optimization: complexType "http://www.onvif.org/ver10/schema":StringItems is not used and was removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
// Optimization: complexType "http://www.onvif.org/ver10/schema":Message is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":FilterType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Notify is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UseRaw is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Subscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessages is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Renew is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":RenewResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":Documentation is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is not used and was removed

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tds__StorageConfiguration operations:
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*) allocate and default initialize
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*, int num) allocate and default initialize an array
/// - tds__StorageConfiguration* soap_new_req_tds__StorageConfiguration(soap*, ...) allocate, set required members
/// - tds__StorageConfiguration* soap_new_set_tds__StorageConfiguration(soap*, ...) allocate, set all public members
/// - tds__StorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) deserialize from a stream
/// - int soap_write_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) serialize to a stream
/// - tds__StorageConfiguration* tds__StorageConfiguration::soap_dup(soap*) returns deep copy of tds__StorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__StorageConfiguration::soap_del() deep deletes tds__StorageConfiguration data members, use only after tds__StorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__StorageConfiguration::soap_type() returns SOAP_TYPE_tds__StorageConfiguration or derived type identifier
class tds__StorageConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       Data                           1;	///< Required element.
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegOptions2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264Options2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__NetworkInterface operations:
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(soap*) allocate and default initialize
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterface* soap_new_req_tt__NetworkInterface(soap*, ...) allocate, set required members
/// - tt__NetworkInterface* soap_new_set_tt__NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterface(soap*, tt__NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__NetworkInterface(soap*, tt__NetworkInterface*) serialize to a stream
/// - tt__NetworkInterface* tt__NetworkInterface::soap_dup(soap*) returns deep copy of tt__NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterface::soap_del() deep deletes tt__NetworkInterface data members, use only after tt__NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterface::soap_type() returns SOAP_TYPE_tt__NetworkInterface or derived type identifier
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent extension of type xs:string.
///
/// @note class tt__CertificateUsage operations:
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(soap*) allocate and default initialize
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(soap*, int num) allocate and default initialize an array
/// - tt__CertificateUsage* soap_new_req_tt__CertificateUsage(soap*, ...) allocate, set required members
/// - tt__CertificateUsage* soap_new_set_tt__CertificateUsage(soap*, ...) allocate, set all public members
/// - tt__CertificateUsage::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateUsage(soap*, tt__CertificateUsage*) deserialize from a stream
/// - int soap_write_tt__CertificateUsage(soap*, tt__CertificateUsage*) serialize to a stream
/// - tt__CertificateUsage* tt__CertificateUsage::soap_dup(soap*) returns deep copy of tt__CertificateUsage, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateUsage::soap_del() deep deletes tt__CertificateUsage data members, use only after tt__CertificateUsage::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateUsage::soap_type() returns SOAP_TYPE_tt__CertificateUsage or derived type identifier
class tt__CertificateUsage
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute "Critical" of type xs:boolean.
  @ bool                                 Critical                       1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__RelayOutput operations:
/// - tt__RelayOutput* soap_new_tt__RelayOutput(soap*) allocate and default initialize
/// - tt__RelayOutput* soap_new_tt__RelayOutput(soap*, int num) allocate and default initialize an array
/// - tt__RelayOutput* soap_new_req_tt__RelayOutput(soap*, ...) allocate, set required members
/// - tt__RelayOutput* soap_new_set_tt__RelayOutput(soap*, ...) allocate, set all public members
/// - tt__RelayOutput::soap_default(soap*) default initialize members
/// - int soap_read_tt__RelayOutput(soap*, tt__RelayOutput*) deserialize from a stream
/// - int soap_write_tt__RelayOutput(soap*, tt__RelayOutput*) serialize to a stream
/// - tt__RelayOutput* tt__RelayOutput::soap_dup(soap*) returns deep copy of tt__RelayOutput, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RelayOutput::soap_del() deep deletes tt__RelayOutput data members, use only after tt__RelayOutput::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RelayOutput::soap_type() returns SOAP_TYPE_tt__RelayOutput or derived type identifier
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":DigitalInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZNode is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngine is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDConfiguration is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicSetType is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":OSDReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PolygonOptions of type "http://www.onvif.org/ver10/schema":PolygonOptions.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
// Optimization: attribute not used and removed

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
// Optimization: attribute not used and removed


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref DeviceBinding

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetPasswordComplexityOptions

  - @ref __tds__GetPasswordComplexityConfiguration

  - @ref __tds__SetPasswordComplexityConfiguration

  - @ref __tds__GetPasswordHistoryConfiguration

  - @ref __tds__SetPasswordHistoryConfiguration

  - @ref __tds__GetAuthFailureWarningOptions

  - @ref __tds__GetAuthFailureWarningConfiguration

  - @ref __tds__SetAuthFailureWarningConfiguration

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

  - @ref __tds__SetHashingAlgorithm

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    _tds__GetServices*                  tds__GetServices,	///< Input parameter
    _tds__GetServicesResponse          &tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,	///< Input parameter
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Input parameter
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Input parameter
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Input parameter
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Input parameter
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Input parameter
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Input parameter
    _tds__SystemRebootResponse         &tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Input parameter
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Input parameter
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Input parameter
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Input parameter
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Input parameter
    _tds__GetScopesResponse            &tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Input parameter
    _tds__SetScopesResponse            &tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Input parameter
    _tds__AddScopesResponse            &tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Input parameter
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Input parameter
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Input parameter
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Input parameter
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Input parameter
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Input parameter
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    _tds__GetEndpointReference*         tds__GetEndpointReference,	///< Input parameter
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    _tds__GetRemoteUser*                tds__GetRemoteUser,	///< Input parameter
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    _tds__SetRemoteUser*                tds__SetRemoteUser,	///< Input parameter
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Input parameter
    _tds__GetUsersResponse             &tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Input parameter
    _tds__CreateUsersResponse          &tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Input parameter
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Input parameter
    _tds__SetUserResponse              &tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
This method allows to provide a URL where product specific WSDL and schema definitions
can be retrieved. This method is deprecated.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Input parameter
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordComplexityOptions                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordComplexityOptions" of service binding "DeviceBinding".
This method allows retrieval of all the available parameters and their valid ranges
for the password complexity configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordComplexityOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,
    // output parameters:
    _tds__GetPasswordComplexityOptionsResponse&tds__GetPasswordComplexityOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordComplexityOptions(
    struct soap *soap,
    // input parameters:
    _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,
    // output parameters:
    _tds__GetPasswordComplexityOptionsResponse&tds__GetPasswordComplexityOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPasswordComplexityOptions SOAP
//gsoap tds  service method-style:	GetPasswordComplexityOptions document
//gsoap tds  service method-encoding:	GetPasswordComplexityOptions literal
//gsoap tds  service method-input-action:	GetPasswordComplexityOptions http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptions
//gsoap tds  service method-output-action:	GetPasswordComplexityOptions http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityOptionsResponse
int __tds__GetPasswordComplexityOptions(
    _tds__GetPasswordComplexityOptions* tds__GetPasswordComplexityOptions,	///< Input parameter
    _tds__GetPasswordComplexityOptionsResponse&tds__GetPasswordComplexityOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordComplexityConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordComplexityConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current password complexity configuration settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordComplexityConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,
    // output parameters:
    _tds__GetPasswordComplexityConfigurationResponse&tds__GetPasswordComplexityConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordComplexityConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,
    // output parameters:
    _tds__GetPasswordComplexityConfigurationResponse&tds__GetPasswordComplexityConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPasswordComplexityConfiguration SOAP
//gsoap tds  service method-style:	GetPasswordComplexityConfiguration document
//gsoap tds  service method-encoding:	GetPasswordComplexityConfiguration literal
//gsoap tds  service method-input-action:	GetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfiguration
//gsoap tds  service method-output-action:	GetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordComplexityConfigurationResponse
int __tds__GetPasswordComplexityConfiguration(
    _tds__GetPasswordComplexityConfiguration* tds__GetPasswordComplexityConfiguration,	///< Input parameter
    _tds__GetPasswordComplexityConfigurationResponse&tds__GetPasswordComplexityConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetPasswordComplexityConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetPasswordComplexityConfiguration" of service binding "DeviceBinding".
This method allows setting of the password complexity configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetPasswordComplexityConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,
    // output parameters:
    _tds__SetPasswordComplexityConfigurationResponse&tds__SetPasswordComplexityConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetPasswordComplexityConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,
    // output parameters:
    _tds__SetPasswordComplexityConfigurationResponse&tds__SetPasswordComplexityConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetPasswordComplexityConfiguration SOAP
//gsoap tds  service method-style:	SetPasswordComplexityConfiguration document
//gsoap tds  service method-encoding:	SetPasswordComplexityConfiguration literal
//gsoap tds  service method-input-action:	SetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfiguration
//gsoap tds  service method-output-action:	SetPasswordComplexityConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordComplexityConfigurationResponse
int __tds__SetPasswordComplexityConfiguration(
    _tds__SetPasswordComplexityConfiguration* tds__SetPasswordComplexityConfiguration,	///< Input parameter
    _tds__SetPasswordComplexityConfigurationResponse&tds__SetPasswordComplexityConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPasswordHistoryConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPasswordHistoryConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current password history configuration settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPasswordHistoryConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,
    // output parameters:
    _tds__GetPasswordHistoryConfigurationResponse&tds__GetPasswordHistoryConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPasswordHistoryConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,
    // output parameters:
    _tds__GetPasswordHistoryConfigurationResponse&tds__GetPasswordHistoryConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPasswordHistoryConfiguration SOAP
//gsoap tds  service method-style:	GetPasswordHistoryConfiguration document
//gsoap tds  service method-encoding:	GetPasswordHistoryConfiguration literal
//gsoap tds  service method-input-action:	GetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfiguration
//gsoap tds  service method-output-action:	GetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/GetPasswordHistoryConfigurationResponse
int __tds__GetPasswordHistoryConfiguration(
    _tds__GetPasswordHistoryConfiguration* tds__GetPasswordHistoryConfiguration,	///< Input parameter
    _tds__GetPasswordHistoryConfigurationResponse&tds__GetPasswordHistoryConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetPasswordHistoryConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetPasswordHistoryConfiguration" of service binding "DeviceBinding".
This method allows setting of the password history configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetPasswordHistoryConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,
    // output parameters:
    _tds__SetPasswordHistoryConfigurationResponse&tds__SetPasswordHistoryConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetPasswordHistoryConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,
    // output parameters:
    _tds__SetPasswordHistoryConfigurationResponse&tds__SetPasswordHistoryConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetPasswordHistoryConfiguration SOAP
//gsoap tds  service method-style:	SetPasswordHistoryConfiguration document
//gsoap tds  service method-encoding:	SetPasswordHistoryConfiguration literal
//gsoap tds  service method-input-action:	SetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfiguration
//gsoap tds  service method-output-action:	SetPasswordHistoryConfiguration http://www.onvif.org/ver10/device/wsdl/SetPasswordHistoryConfigurationResponse
int __tds__SetPasswordHistoryConfiguration(
    _tds__SetPasswordHistoryConfiguration* tds__SetPasswordHistoryConfiguration,	///< Input parameter
    _tds__SetPasswordHistoryConfigurationResponse&tds__SetPasswordHistoryConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAuthFailureWarningOptions                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAuthFailureWarningOptions" of service binding "DeviceBinding".
This method allows retrieval of all the available parameters and their valid ranges
for the authentication failure warning configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAuthFailureWarningOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,
    // output parameters:
    _tds__GetAuthFailureWarningOptionsResponse&tds__GetAuthFailureWarningOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAuthFailureWarningOptions(
    struct soap *soap,
    // input parameters:
    _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,
    // output parameters:
    _tds__GetAuthFailureWarningOptionsResponse&tds__GetAuthFailureWarningOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAuthFailureWarningOptions SOAP
//gsoap tds  service method-style:	GetAuthFailureWarningOptions document
//gsoap tds  service method-encoding:	GetAuthFailureWarningOptions literal
//gsoap tds  service method-input-action:	GetAuthFailureWarningOptions http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptions
//gsoap tds  service method-output-action:	GetAuthFailureWarningOptions http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningOptionsResponse
int __tds__GetAuthFailureWarningOptions(
    _tds__GetAuthFailureWarningOptions* tds__GetAuthFailureWarningOptions,	///< Input parameter
    _tds__GetAuthFailureWarningOptionsResponse&tds__GetAuthFailureWarningOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAuthFailureWarningConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAuthFailureWarningConfiguration" of service binding "DeviceBinding".
This method allows retrieval of the current authentication failure warning configuration
settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAuthFailureWarningConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,
    // output parameters:
    _tds__GetAuthFailureWarningConfigurationResponse&tds__GetAuthFailureWarningConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAuthFailureWarningConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,
    // output parameters:
    _tds__GetAuthFailureWarningConfigurationResponse&tds__GetAuthFailureWarningConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAuthFailureWarningConfiguration SOAP
//gsoap tds  service method-style:	GetAuthFailureWarningConfiguration document
//gsoap tds  service method-encoding:	GetAuthFailureWarningConfiguration literal
//gsoap tds  service method-input-action:	GetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfiguration
//gsoap tds  service method-output-action:	GetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/GetAuthFailureWarningConfigurationResponse
int __tds__GetAuthFailureWarningConfiguration(
    _tds__GetAuthFailureWarningConfiguration* tds__GetAuthFailureWarningConfiguration,	///< Input parameter
    _tds__GetAuthFailureWarningConfigurationResponse&tds__GetAuthFailureWarningConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAuthFailureWarningConfiguration                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAuthFailureWarningConfiguration" of service binding "DeviceBinding".
This method allows setting of the authentication failure warning configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAuthFailureWarningConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,
    // output parameters:
    _tds__SetAuthFailureWarningConfigurationResponse&tds__SetAuthFailureWarningConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAuthFailureWarningConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,
    // output parameters:
    _tds__SetAuthFailureWarningConfigurationResponse&tds__SetAuthFailureWarningConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetAuthFailureWarningConfiguration SOAP
//gsoap tds  service method-style:	SetAuthFailureWarningConfiguration document
//gsoap tds  service method-encoding:	SetAuthFailureWarningConfiguration literal
//gsoap tds  service method-input-action:	SetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfiguration
//gsoap tds  service method-output-action:	SetAuthFailureWarningConfiguration http://www.onvif.org/ver10/device/wsdl/SetAuthFailureWarningConfigurationResponse
int __tds__SetAuthFailureWarningConfiguration(
    _tds__SetAuthFailureWarningConfiguration* tds__SetAuthFailureWarningConfiguration,	///< Input parameter
    _tds__SetAuthFailureWarningConfigurationResponse&tds__SetAuthFailureWarningConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
This method has been replaced by the more generic GetServices method.
			 For capabilities of individual services refer to the GetServiceCapabilities
methods.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Input parameter
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Input parameter
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Input parameter
    _tds__GetHostnameResponse          &tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Input parameter
    _tds__SetHostnameResponse          &tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,	///< Input parameter
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Input parameter
    _tds__GetDNSResponse               &tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Input parameter
    _tds__SetDNSResponse               &tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Input parameter
    _tds__GetNTPResponse               &tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Input parameter
    _tds__SetNTPResponse               &tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Input parameter
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Input parameter
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Input parameter
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Input parameter
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Input parameter
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Input parameter
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Input parameter
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Input parameter
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Input parameter
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Input parameter
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Input parameter
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Input parameter
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Input parameter
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Input parameter
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Input parameter
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Input parameter
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Input parameter
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Input parameter
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Input parameter
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Input parameter
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Input parameter
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Input parameter
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Input parameter
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Input parameter
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Input parameter
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Input parameter
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,	///< Input parameter
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    _tds__GetCACertificates*            tds__GetCACertificates,	///< Input parameter
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,	///< Input parameter
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    _tds__LoadCACertificates*           tds__LoadCACertificates,	///< Input parameter
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,	///< Input parameter
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,	///< Input parameter
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,	///< Input parameter
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,	///< Input parameter
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,	///< Input parameter
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,	///< Input parameter
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    _tds__GetDot11Status*               tds__GetDot11Status,	///< Input parameter
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,	///< Input parameter
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    _tds__GetSystemUris*                tds__GetSystemUris,	///< Input parameter
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,	///< Input parameter
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    _tds__StartSystemRestore*           tds__StartSystemRestore,	///< Input parameter
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".
			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,	///< Input parameter
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".
			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,	///< Input parameter
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".
			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,	///< Input parameter
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".
			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,	///< Input parameter
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".
			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,	///< Input parameter
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetGeoLocation" of service binding "DeviceBinding".
				This operation lists all existing geo location configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    _tds__GetGeoLocation*               tds__GetGeoLocation,	///< Input parameter
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetGeoLocation" of service binding "DeviceBinding".
				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    _tds__SetGeoLocation*               tds__SetGeoLocation,	///< Input parameter
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding".
				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,	///< Input parameter
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHashingAlgorithm                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHashingAlgorithm" of service binding "DeviceBinding".
				This operation sets the hashing algorithm(s) used
in HTTP and RTSP Digest Authentication.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithm"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithm"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithmResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHashingAlgorithm(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHashingAlgorithm*          tds__SetHashingAlgorithm,
    // output parameters:
    _tds__SetHashingAlgorithmResponse  &tds__SetHashingAlgorithmResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHashingAlgorithm(
    struct soap *soap,
    // input parameters:
    _tds__SetHashingAlgorithm*          tds__SetHashingAlgorithm,
    // output parameters:
    _tds__SetHashingAlgorithmResponse  &tds__SetHashingAlgorithmResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHashingAlgorithm SOAP
//gsoap tds  service method-style:	SetHashingAlgorithm document
//gsoap tds  service method-encoding:	SetHashingAlgorithm literal
//gsoap tds  service method-input-action:	SetHashingAlgorithm http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithm
//gsoap tds  service method-output-action:	SetHashingAlgorithm http://www.onvif.org/ver10/device/wsdl/SetHashingAlgorithmResponse
int __tds__SetHashingAlgorithm(
    _tds__SetHashingAlgorithm*          tds__SetHashingAlgorithm,	///< Input parameter
    _tds__SetHashingAlgorithmResponse  &tds__SetHashingAlgorithmResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, _tds__GetServices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    soap_POST_recv__tds__GetServices(struct soap*, _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    soap_POST_recv__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    soap_POST_recv__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    soap_POST_recv__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    soap_POST_recv__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    soap_POST_recv__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    soap_POST_recv__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    soap_POST_recv__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    soap_POST_recv__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    soap_POST_recv__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    soap_POST_recv__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    soap_POST_recv__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    soap_POST_recv__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    soap_POST_recv__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    soap_POST_recv__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    soap_POST_recv__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    soap_POST_recv__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    soap_POST_recv__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    soap_POST_recv__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    soap_POST_recv__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    soap_POST_recv__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    soap_POST_recv__tds__GetScopes(struct soap*, _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    soap_POST_recv__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    soap_POST_recv__tds__SetScopes(struct soap*, _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    soap_POST_recv__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    soap_POST_recv__tds__AddScopes(struct soap*, _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    soap_POST_recv__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    soap_POST_recv__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    soap_POST_recv__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    soap_POST_recv__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    soap_POST_recv__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    soap_POST_recv__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    soap_POST_recv__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    soap_POST_recv__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    soap_POST_recv__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    soap_POST_recv__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    soap_POST_recv__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    soap_POST_recv__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    soap_POST_recv__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    soap_POST_recv__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    @endcode

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    soap_POST_recv__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    @endcode

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    soap_POST_recv__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    @endcode

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    soap_POST_recv__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    @endcode

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    soap_POST_recv__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    @endcode

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    soap_POST_recv__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    soap_POST_recv__tds__GetUsers(struct soap*, _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    soap_POST_recv__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    soap_POST_recv__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    soap_POST_recv__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    soap_POST_recv__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    soap_POST_recv__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, _tds__SetUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    soap_POST_recv__tds__SetUser(struct soap*, _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    soap_POST_recv__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    soap_POST_recv__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    soap_POST_recv__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetPasswordComplexityOptions> @ref _tds__GetPasswordComplexityOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, _tds__GetPasswordComplexityOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, _tds__GetPasswordComplexityOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityOptions(struct soap*, const char *URL, _tds__GetPasswordComplexityOptions*);
    soap_POST_recv__tds__GetPasswordComplexityOptions(struct soap*, _tds__GetPasswordComplexityOptions*);
    @endcode

  - <tds:GetPasswordComplexityOptionsResponse> @ref _tds__GetPasswordComplexityOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityOptionsResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityOptionsResponse*);
    soap_POST_recv__tds__GetPasswordComplexityOptionsResponse(struct soap*, _tds__GetPasswordComplexityOptionsResponse*);
    @endcode

  - <tds:GetPasswordComplexityConfiguration> @ref _tds__GetPasswordComplexityConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__GetPasswordComplexityConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__GetPasswordComplexityConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__GetPasswordComplexityConfiguration*);
    soap_POST_recv__tds__GetPasswordComplexityConfiguration(struct soap*, _tds__GetPasswordComplexityConfiguration*);
    @endcode

  - <tds:GetPasswordComplexityConfigurationResponse> @ref _tds__GetPasswordComplexityConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordComplexityConfigurationResponse*);
    soap_POST_recv__tds__GetPasswordComplexityConfigurationResponse(struct soap*, _tds__GetPasswordComplexityConfigurationResponse*);
    @endcode

  - <tds:SetPasswordComplexityConfiguration> @ref _tds__SetPasswordComplexityConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__SetPasswordComplexityConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__SetPasswordComplexityConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordComplexityConfiguration(struct soap*, const char *URL, _tds__SetPasswordComplexityConfiguration*);
    soap_POST_recv__tds__SetPasswordComplexityConfiguration(struct soap*, _tds__SetPasswordComplexityConfiguration*);
    @endcode

  - <tds:SetPasswordComplexityConfigurationResponse> @ref _tds__SetPasswordComplexityConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordComplexityConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordComplexityConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordComplexityConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordComplexityConfigurationResponse*);
    soap_POST_recv__tds__SetPasswordComplexityConfigurationResponse(struct soap*, _tds__SetPasswordComplexityConfigurationResponse*);
    @endcode

  - <tds:GetPasswordHistoryConfiguration> @ref _tds__GetPasswordHistoryConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__GetPasswordHistoryConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__GetPasswordHistoryConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__GetPasswordHistoryConfiguration*);
    soap_POST_recv__tds__GetPasswordHistoryConfiguration(struct soap*, _tds__GetPasswordHistoryConfiguration*);
    @endcode

  - <tds:GetPasswordHistoryConfigurationResponse> @ref _tds__GetPasswordHistoryConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordHistoryConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordHistoryConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__GetPasswordHistoryConfigurationResponse*);
    soap_POST_recv__tds__GetPasswordHistoryConfigurationResponse(struct soap*, _tds__GetPasswordHistoryConfigurationResponse*);
    @endcode

  - <tds:SetPasswordHistoryConfiguration> @ref _tds__SetPasswordHistoryConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__SetPasswordHistoryConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__SetPasswordHistoryConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordHistoryConfiguration(struct soap*, const char *URL, _tds__SetPasswordHistoryConfiguration*);
    soap_POST_recv__tds__SetPasswordHistoryConfiguration(struct soap*, _tds__SetPasswordHistoryConfiguration*);
    @endcode

  - <tds:SetPasswordHistoryConfigurationResponse> @ref _tds__SetPasswordHistoryConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordHistoryConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordHistoryConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetPasswordHistoryConfigurationResponse(struct soap*, const char *URL, _tds__SetPasswordHistoryConfigurationResponse*);
    soap_POST_recv__tds__SetPasswordHistoryConfigurationResponse(struct soap*, _tds__SetPasswordHistoryConfigurationResponse*);
    @endcode

  - <tds:GetAuthFailureWarningOptions> @ref _tds__GetAuthFailureWarningOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningOptions(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptions*);
    soap_POST_recv__tds__GetAuthFailureWarningOptions(struct soap*, _tds__GetAuthFailureWarningOptions*);
    @endcode

  - <tds:GetAuthFailureWarningOptionsResponse> @ref _tds__GetAuthFailureWarningOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningOptionsResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningOptionsResponse*);
    soap_POST_recv__tds__GetAuthFailureWarningOptionsResponse(struct soap*, _tds__GetAuthFailureWarningOptionsResponse*);
    @endcode

  - <tds:GetAuthFailureWarningConfiguration> @ref _tds__GetAuthFailureWarningConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfiguration*);
    soap_POST_recv__tds__GetAuthFailureWarningConfiguration(struct soap*, _tds__GetAuthFailureWarningConfiguration*);
    @endcode

  - <tds:GetAuthFailureWarningConfigurationResponse> @ref _tds__GetAuthFailureWarningConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__GetAuthFailureWarningConfigurationResponse*);
    soap_POST_recv__tds__GetAuthFailureWarningConfigurationResponse(struct soap*, _tds__GetAuthFailureWarningConfigurationResponse*);
    @endcode

  - <tds:SetAuthFailureWarningConfiguration> @ref _tds__SetAuthFailureWarningConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAuthFailureWarningConfiguration(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfiguration*);
    soap_POST_recv__tds__SetAuthFailureWarningConfiguration(struct soap*, _tds__SetAuthFailureWarningConfiguration*);
    @endcode

  - <tds:SetAuthFailureWarningConfigurationResponse> @ref _tds__SetAuthFailureWarningConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, const char *URL, _tds__SetAuthFailureWarningConfigurationResponse*);
    soap_POST_recv__tds__SetAuthFailureWarningConfigurationResponse(struct soap*, _tds__SetAuthFailureWarningConfigurationResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    soap_POST_recv__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    soap_POST_recv__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    soap_POST_recv__tds__GetHostname(struct soap*, _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    soap_POST_recv__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    soap_POST_recv__tds__SetHostname(struct soap*, _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    soap_POST_recv__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    @endcode

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    soap_POST_recv__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    @endcode

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    soap_POST_recv__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    soap_POST_recv__tds__GetDNS(struct soap*, _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    soap_POST_recv__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    soap_POST_recv__tds__SetDNS(struct soap*, _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    soap_POST_recv__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    soap_POST_recv__tds__GetNTP(struct soap*, _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    soap_POST_recv__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    soap_POST_recv__tds__SetNTP(struct soap*, _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    soap_POST_recv__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    soap_POST_recv__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    soap_POST_recv__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    soap_POST_recv__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    soap_POST_recv__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    soap_POST_recv__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    soap_POST_recv__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    soap_POST_recv__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    soap_POST_recv__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    soap_POST_recv__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    soap_POST_recv__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    soap_POST_recv__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    soap_POST_recv__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    soap_POST_recv__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    soap_POST_recv__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    soap_POST_recv__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    soap_POST_recv__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    soap_POST_recv__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    soap_POST_recv__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    soap_POST_recv__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    soap_POST_recv__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    soap_POST_recv__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    soap_POST_recv__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    soap_POST_recv__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    soap_POST_recv__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    soap_POST_recv__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    soap_POST_recv__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    soap_POST_recv__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    soap_POST_recv__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    soap_POST_recv__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    soap_POST_recv__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    soap_POST_recv__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    soap_POST_recv__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    soap_POST_recv__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    soap_POST_recv__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    soap_POST_recv__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    soap_POST_recv__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    soap_POST_recv__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    soap_POST_recv__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    soap_POST_recv__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    soap_POST_recv__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    soap_POST_recv__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    soap_POST_recv__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    soap_POST_recv__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    soap_POST_recv__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    soap_POST_recv__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    soap_POST_recv__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    soap_POST_recv__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    soap_POST_recv__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    soap_POST_recv__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    @endcode

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    soap_POST_recv__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    @endcode

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    soap_POST_recv__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    @endcode

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    soap_POST_recv__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    @endcode

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    soap_POST_recv__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    @endcode

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    soap_POST_recv__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    @endcode

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    soap_POST_recv__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    @endcode

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    soap_POST_recv__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    soap_POST_recv__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    @endcode

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    soap_POST_recv__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    soap_POST_recv__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    @endcode

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    soap_POST_recv__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    @endcode

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    soap_POST_recv__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    @endcode

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    soap_POST_recv__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    soap_POST_recv__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    soap_POST_recv__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    soap_POST_recv__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    soap_POST_recv__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    soap_POST_recv__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    soap_POST_recv__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    @endcode

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    soap_POST_recv__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    @endcode

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    soap_POST_recv__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    @endcode

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    soap_POST_recv__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <tds:GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    soap_POST_recv__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    @endcode

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    soap_POST_recv__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    @endcode

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    soap_POST_recv__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    @endcode

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    soap_POST_recv__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <tds:GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    soap_POST_recv__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    @endcode

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    soap_POST_recv__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    @endcode

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    soap_POST_recv__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    @endcode

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    soap_POST_recv__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    soap_POST_recv__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    @endcode

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    soap_POST_recv__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    @endcode

  - <tds:SetHashingAlgorithm> @ref _tds__SetHashingAlgorithm
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHashingAlgorithm(struct soap*, _tds__SetHashingAlgorithm*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHashingAlgorithm(struct soap*, _tds__SetHashingAlgorithm*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHashingAlgorithm(struct soap*, const char *URL, _tds__SetHashingAlgorithm*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHashingAlgorithm(struct soap*, const char *URL, _tds__SetHashingAlgorithm*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHashingAlgorithm(struct soap*, const char *URL, _tds__SetHashingAlgorithm*);
    soap_POST_recv__tds__SetHashingAlgorithm(struct soap*, _tds__SetHashingAlgorithm*);
    @endcode

  - <tds:SetHashingAlgorithmResponse> @ref _tds__SetHashingAlgorithmResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHashingAlgorithmResponse(struct soap*, _tds__SetHashingAlgorithmResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHashingAlgorithmResponse(struct soap*, _tds__SetHashingAlgorithmResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHashingAlgorithmResponse(struct soap*, const char *URL, _tds__SetHashingAlgorithmResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHashingAlgorithmResponse(struct soap*, const char *URL, _tds__SetHashingAlgorithmResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHashingAlgorithmResponse(struct soap*, const char *URL, _tds__SetHashingAlgorithmResponse*);
    soap_POST_recv__tds__SetHashingAlgorithmResponse(struct soap*, _tds__SetHashingAlgorithmResponse*);
    @endcode

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    soap_POST_recv__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    @endcode

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    soap_POST_recv__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    soap_POST_recv__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    @endcode

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    soap_POST_recv__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    soap_POST_recv__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    @endcode

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    soap_POST_recv__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    @endcode

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    soap_POST_recv__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    @endcode

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    soap_POST_recv__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    @endcode

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    soap_POST_recv__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    @endcode

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    soap_POST_recv__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    @endcode

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    soap_POST_recv__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    @endcode

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    soap_POST_recv__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    @endcode

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    soap_POST_recv__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    @endcode

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    soap_POST_recv__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    @endcode

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    soap_POST_recv__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    @endcode

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    soap_POST_recv__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> (use wsdl2h option -g to auto-generate type _tt__StringItems)

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> (use wsdl2h option -g to auto-generate type _tt__Message)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:PolygonOptions> (use wsdl2h option -g to auto-generate type _tt__PolygonOptions)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> (use wsdl2h option -g to auto-generate type _wsnt__NotificationProducerRP)

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionManagerRP)

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> (use wsdl2h option -g to auto-generate type _wsnt__Notify)

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> (use wsdl2h option -g to auto-generate type _wsnt__UseRaw)

  - <wsnt:Subscribe> (use wsdl2h option -g to auto-generate type _wsnt__Subscribe)

  - <wsnt:SubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeResponse)

  - <wsnt:GetCurrentMessage> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessage)

  - <wsnt:GetCurrentMessageResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessageResponse)

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> (use wsdl2h option -g to auto-generate type _wsnt__GetMessages)

  - <wsnt:GetMessagesResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetMessagesResponse)

  - <wsnt:DestroyPullPoint> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPoint)

  - <wsnt:DestroyPullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPointResponse)

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPoint)

  - <wsnt:CreatePullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPointResponse)

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> (use wsdl2h option -g to auto-generate type _wsnt__Renew)

  - <wsnt:RenewResponse> (use wsdl2h option -g to auto-generate type _wsnt__RenewResponse)

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> (use wsdl2h option -g to auto-generate type _wsnt__Unsubscribe)

  - <wsnt:UnsubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__UnsubscribeResponse)

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscription)

  - <wsnt:PauseSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscriptionResponse)

  - <wsnt:ResumeSubscription> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscription)

  - <wsnt:ResumeSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscriptionResponse)

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/* End of onvif.h */
